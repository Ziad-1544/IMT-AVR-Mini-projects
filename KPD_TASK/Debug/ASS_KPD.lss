
ASS_KPD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005e8a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000aa  00800060  00005e8a  00005efe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003da4  00000000  00000000  00005fa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d2b  00000000  00000000  00009d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000aa77  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000abb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000ad27  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000c970  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000d85b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000e608  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000e768  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000e9f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000f1c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e8       	ldi	r30, 0x8A	; 138
      68:	fe e5       	ldi	r31, 0x5E	; 94
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 30       	cpi	r26, 0x0A	; 10
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <main>
      7a:	0c 94 43 2f 	jmp	0x5e86	; 0x5e86 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 0c 2f 	jmp	0x5e18	; 0x5e18 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a9 ee       	ldi	r26, 0xE9	; 233
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 28 2f 	jmp	0x5e50	; 0x5e50 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 18 2f 	jmp	0x5e30	; 0x5e30 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 34 2f 	jmp	0x5e68	; 0x5e68 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 18 2f 	jmp	0x5e30	; 0x5e30 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 34 2f 	jmp	0x5e68	; 0x5e68 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 0c 2f 	jmp	0x5e18	; 0x5e18 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	89 ee       	ldi	r24, 0xE9	; 233
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 28 2f 	jmp	0x5e50	; 0x5e50 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 18 2f 	jmp	0x5e30	; 0x5e30 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 34 2f 	jmp	0x5e68	; 0x5e68 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 18 2f 	jmp	0x5e30	; 0x5e30 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 34 2f 	jmp	0x5e68	; 0x5e68 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 18 2f 	jmp	0x5e30	; 0x5e30 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 34 2f 	jmp	0x5e68	; 0x5e68 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 1c 2f 	jmp	0x5e38	; 0x5e38 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 38 2f 	jmp	0x5e70	; 0x5e70 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <CLCD_voidSendData>:
#include "CLCD_config.h"
#include <util/delay.h>



static void CLCD_voidSendData(u8 copy_u8Data){
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	2f 97       	sbiw	r28, 0x0f	; 15
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8f 87       	std	Y+15, r24	; 0x0f
    //RS    1
    DIO_voidSetPinValue(CTRL_PORT,RS,PIN_HIGH);
     b4c:	84 e0       	ldi	r24, 0x04	; 4
     b4e:	62 e0       	ldi	r22, 0x02	; 2
     b50:	41 e0       	ldi	r20, 0x01	; 1
     b52:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
    //RW    0
    DIO_voidSetPinValue(CTRL_PORT,RW,PIN_LOW);
     b56:	84 e0       	ldi	r24, 0x04	; 4
     b58:	61 e0       	ldi	r22, 0x01	; 1
     b5a:	40 e0       	ldi	r20, 0x00	; 0
     b5c:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
    //SET DATA ->DATA PORT
    DIO_voidSetPortValue(DATA_PORT,copy_u8Data);
     b60:	83 e0       	ldi	r24, 0x03	; 3
     b62:	6f 85       	ldd	r22, Y+15	; 0x0f
     b64:	0e 94 90 0b 	call	0x1720	; 0x1720 <DIO_voidSetPortValue>
    //E     PULSE
    DIO_voidSetPinValue(CTRL_PORT,ENA,PIN_HIGH);
     b68:	84 e0       	ldi	r24, 0x04	; 4
     b6a:	60 e0       	ldi	r22, 0x00	; 0
     b6c:	41 e0       	ldi	r20, 0x01	; 1
     b6e:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	a0 e8       	ldi	r26, 0x80	; 128
     b78:	bf e3       	ldi	r27, 0x3F	; 63
     b7a:	8b 87       	std	Y+11, r24	; 0x0b
     b7c:	9c 87       	std	Y+12, r25	; 0x0c
     b7e:	ad 87       	std	Y+13, r26	; 0x0d
     b80:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b82:	6b 85       	ldd	r22, Y+11	; 0x0b
     b84:	7c 85       	ldd	r23, Y+12	; 0x0c
     b86:	8d 85       	ldd	r24, Y+13	; 0x0d
     b88:	9e 85       	ldd	r25, Y+14	; 0x0e
     b8a:	20 e0       	ldi	r18, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	4a ef       	ldi	r20, 0xFA	; 250
     b90:	54 e4       	ldi	r21, 0x44	; 68
     b92:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b96:	dc 01       	movw	r26, r24
     b98:	cb 01       	movw	r24, r22
     b9a:	8f 83       	std	Y+7, r24	; 0x07
     b9c:	98 87       	std	Y+8, r25	; 0x08
     b9e:	a9 87       	std	Y+9, r26	; 0x09
     ba0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ba2:	6f 81       	ldd	r22, Y+7	; 0x07
     ba4:	78 85       	ldd	r23, Y+8	; 0x08
     ba6:	89 85       	ldd	r24, Y+9	; 0x09
     ba8:	9a 85       	ldd	r25, Y+10	; 0x0a
     baa:	20 e0       	ldi	r18, 0x00	; 0
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	40 e8       	ldi	r20, 0x80	; 128
     bb0:	5f e3       	ldi	r21, 0x3F	; 63
     bb2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bb6:	88 23       	and	r24, r24
     bb8:	2c f4       	brge	.+10     	; 0xbc4 <CLCD_voidSendData+0x8e>
		__ticks = 1;
     bba:	81 e0       	ldi	r24, 0x01	; 1
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	9e 83       	std	Y+6, r25	; 0x06
     bc0:	8d 83       	std	Y+5, r24	; 0x05
     bc2:	3f c0       	rjmp	.+126    	; 0xc42 <CLCD_voidSendData+0x10c>
	else if (__tmp > 65535)
     bc4:	6f 81       	ldd	r22, Y+7	; 0x07
     bc6:	78 85       	ldd	r23, Y+8	; 0x08
     bc8:	89 85       	ldd	r24, Y+9	; 0x09
     bca:	9a 85       	ldd	r25, Y+10	; 0x0a
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	3f ef       	ldi	r19, 0xFF	; 255
     bd0:	4f e7       	ldi	r20, 0x7F	; 127
     bd2:	57 e4       	ldi	r21, 0x47	; 71
     bd4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     bd8:	18 16       	cp	r1, r24
     bda:	4c f5       	brge	.+82     	; 0xc2e <CLCD_voidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bdc:	6b 85       	ldd	r22, Y+11	; 0x0b
     bde:	7c 85       	ldd	r23, Y+12	; 0x0c
     be0:	8d 85       	ldd	r24, Y+13	; 0x0d
     be2:	9e 85       	ldd	r25, Y+14	; 0x0e
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	40 e2       	ldi	r20, 0x20	; 32
     bea:	51 e4       	ldi	r21, 0x41	; 65
     bec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     bf0:	dc 01       	movw	r26, r24
     bf2:	cb 01       	movw	r24, r22
     bf4:	bc 01       	movw	r22, r24
     bf6:	cd 01       	movw	r24, r26
     bf8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     bfc:	dc 01       	movw	r26, r24
     bfe:	cb 01       	movw	r24, r22
     c00:	9e 83       	std	Y+6, r25	; 0x06
     c02:	8d 83       	std	Y+5, r24	; 0x05
     c04:	0f c0       	rjmp	.+30     	; 0xc24 <CLCD_voidSendData+0xee>
     c06:	88 ec       	ldi	r24, 0xC8	; 200
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	9c 83       	std	Y+4, r25	; 0x04
     c0c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c0e:	8b 81       	ldd	r24, Y+3	; 0x03
     c10:	9c 81       	ldd	r25, Y+4	; 0x04
     c12:	01 97       	sbiw	r24, 0x01	; 1
     c14:	f1 f7       	brne	.-4      	; 0xc12 <CLCD_voidSendData+0xdc>
     c16:	9c 83       	std	Y+4, r25	; 0x04
     c18:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c1a:	8d 81       	ldd	r24, Y+5	; 0x05
     c1c:	9e 81       	ldd	r25, Y+6	; 0x06
     c1e:	01 97       	sbiw	r24, 0x01	; 1
     c20:	9e 83       	std	Y+6, r25	; 0x06
     c22:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c24:	8d 81       	ldd	r24, Y+5	; 0x05
     c26:	9e 81       	ldd	r25, Y+6	; 0x06
     c28:	00 97       	sbiw	r24, 0x00	; 0
     c2a:	69 f7       	brne	.-38     	; 0xc06 <CLCD_voidSendData+0xd0>
     c2c:	14 c0       	rjmp	.+40     	; 0xc56 <CLCD_voidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c2e:	6f 81       	ldd	r22, Y+7	; 0x07
     c30:	78 85       	ldd	r23, Y+8	; 0x08
     c32:	89 85       	ldd	r24, Y+9	; 0x09
     c34:	9a 85       	ldd	r25, Y+10	; 0x0a
     c36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c3a:	dc 01       	movw	r26, r24
     c3c:	cb 01       	movw	r24, r22
     c3e:	9e 83       	std	Y+6, r25	; 0x06
     c40:	8d 83       	std	Y+5, r24	; 0x05
     c42:	8d 81       	ldd	r24, Y+5	; 0x05
     c44:	9e 81       	ldd	r25, Y+6	; 0x06
     c46:	9a 83       	std	Y+2, r25	; 0x02
     c48:	89 83       	std	Y+1, r24	; 0x01
     c4a:	89 81       	ldd	r24, Y+1	; 0x01
     c4c:	9a 81       	ldd	r25, Y+2	; 0x02
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	f1 f7       	brne	.-4      	; 0xc4e <CLCD_voidSendData+0x118>
     c52:	9a 83       	std	Y+2, r25	; 0x02
     c54:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(1);
    DIO_voidSetPinValue(CTRL_PORT,ENA,PIN_LOW);
     c56:	84 e0       	ldi	r24, 0x04	; 4
     c58:	60 e0       	ldi	r22, 0x00	; 0
     c5a:	40 e0       	ldi	r20, 0x00	; 0
     c5c:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
}
     c60:	2f 96       	adiw	r28, 0x0f	; 15
     c62:	0f b6       	in	r0, 0x3f	; 63
     c64:	f8 94       	cli
     c66:	de bf       	out	0x3e, r29	; 62
     c68:	0f be       	out	0x3f, r0	; 63
     c6a:	cd bf       	out	0x3d, r28	; 61
     c6c:	cf 91       	pop	r28
     c6e:	df 91       	pop	r29
     c70:	08 95       	ret

00000c72 <CLCD_voidSendCommand>:
static void CLCD_voidSendCommand(u8 copy_u8Command){
     c72:	df 93       	push	r29
     c74:	cf 93       	push	r28
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	2f 97       	sbiw	r28, 0x0f	; 15
     c7c:	0f b6       	in	r0, 0x3f	; 63
     c7e:	f8 94       	cli
     c80:	de bf       	out	0x3e, r29	; 62
     c82:	0f be       	out	0x3f, r0	; 63
     c84:	cd bf       	out	0x3d, r28	; 61
     c86:	8f 87       	std	Y+15, r24	; 0x0f
    //RS    0
    DIO_voidSetPinValue(CTRL_PORT,RS,PIN_LOW);
     c88:	84 e0       	ldi	r24, 0x04	; 4
     c8a:	62 e0       	ldi	r22, 0x02	; 2
     c8c:	40 e0       	ldi	r20, 0x00	; 0
     c8e:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
    //RW    0
    DIO_voidSetPinValue(CTRL_PORT,RW,PIN_LOW);
     c92:	84 e0       	ldi	r24, 0x04	; 4
     c94:	61 e0       	ldi	r22, 0x01	; 1
     c96:	40 e0       	ldi	r20, 0x00	; 0
     c98:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
    //SET DATA ->DATA PORT
    DIO_voidSetPortValue(DATA_PORT,copy_u8Command);
     c9c:	83 e0       	ldi	r24, 0x03	; 3
     c9e:	6f 85       	ldd	r22, Y+15	; 0x0f
     ca0:	0e 94 90 0b 	call	0x1720	; 0x1720 <DIO_voidSetPortValue>
    //E     PULSE
    DIO_voidSetPinValue(CTRL_PORT,ENA,PIN_HIGH);
     ca4:	84 e0       	ldi	r24, 0x04	; 4
     ca6:	60 e0       	ldi	r22, 0x00	; 0
     ca8:	41 e0       	ldi	r20, 0x01	; 1
     caa:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
     cae:	80 e0       	ldi	r24, 0x00	; 0
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	a0 e8       	ldi	r26, 0x80	; 128
     cb4:	bf e3       	ldi	r27, 0x3F	; 63
     cb6:	8b 87       	std	Y+11, r24	; 0x0b
     cb8:	9c 87       	std	Y+12, r25	; 0x0c
     cba:	ad 87       	std	Y+13, r26	; 0x0d
     cbc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cbe:	6b 85       	ldd	r22, Y+11	; 0x0b
     cc0:	7c 85       	ldd	r23, Y+12	; 0x0c
     cc2:	8d 85       	ldd	r24, Y+13	; 0x0d
     cc4:	9e 85       	ldd	r25, Y+14	; 0x0e
     cc6:	20 e0       	ldi	r18, 0x00	; 0
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	4a ef       	ldi	r20, 0xFA	; 250
     ccc:	54 e4       	ldi	r21, 0x44	; 68
     cce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     cd2:	dc 01       	movw	r26, r24
     cd4:	cb 01       	movw	r24, r22
     cd6:	8f 83       	std	Y+7, r24	; 0x07
     cd8:	98 87       	std	Y+8, r25	; 0x08
     cda:	a9 87       	std	Y+9, r26	; 0x09
     cdc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     cde:	6f 81       	ldd	r22, Y+7	; 0x07
     ce0:	78 85       	ldd	r23, Y+8	; 0x08
     ce2:	89 85       	ldd	r24, Y+9	; 0x09
     ce4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ce6:	20 e0       	ldi	r18, 0x00	; 0
     ce8:	30 e0       	ldi	r19, 0x00	; 0
     cea:	40 e8       	ldi	r20, 0x80	; 128
     cec:	5f e3       	ldi	r21, 0x3F	; 63
     cee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     cf2:	88 23       	and	r24, r24
     cf4:	2c f4       	brge	.+10     	; 0xd00 <CLCD_voidSendCommand+0x8e>
		__ticks = 1;
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	9e 83       	std	Y+6, r25	; 0x06
     cfc:	8d 83       	std	Y+5, r24	; 0x05
     cfe:	3f c0       	rjmp	.+126    	; 0xd7e <CLCD_voidSendCommand+0x10c>
	else if (__tmp > 65535)
     d00:	6f 81       	ldd	r22, Y+7	; 0x07
     d02:	78 85       	ldd	r23, Y+8	; 0x08
     d04:	89 85       	ldd	r24, Y+9	; 0x09
     d06:	9a 85       	ldd	r25, Y+10	; 0x0a
     d08:	20 e0       	ldi	r18, 0x00	; 0
     d0a:	3f ef       	ldi	r19, 0xFF	; 255
     d0c:	4f e7       	ldi	r20, 0x7F	; 127
     d0e:	57 e4       	ldi	r21, 0x47	; 71
     d10:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d14:	18 16       	cp	r1, r24
     d16:	4c f5       	brge	.+82     	; 0xd6a <CLCD_voidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d18:	6b 85       	ldd	r22, Y+11	; 0x0b
     d1a:	7c 85       	ldd	r23, Y+12	; 0x0c
     d1c:	8d 85       	ldd	r24, Y+13	; 0x0d
     d1e:	9e 85       	ldd	r25, Y+14	; 0x0e
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	40 e2       	ldi	r20, 0x20	; 32
     d26:	51 e4       	ldi	r21, 0x41	; 65
     d28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d2c:	dc 01       	movw	r26, r24
     d2e:	cb 01       	movw	r24, r22
     d30:	bc 01       	movw	r22, r24
     d32:	cd 01       	movw	r24, r26
     d34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d38:	dc 01       	movw	r26, r24
     d3a:	cb 01       	movw	r24, r22
     d3c:	9e 83       	std	Y+6, r25	; 0x06
     d3e:	8d 83       	std	Y+5, r24	; 0x05
     d40:	0f c0       	rjmp	.+30     	; 0xd60 <CLCD_voidSendCommand+0xee>
     d42:	88 ec       	ldi	r24, 0xC8	; 200
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	9c 83       	std	Y+4, r25	; 0x04
     d48:	8b 83       	std	Y+3, r24	; 0x03
     d4a:	8b 81       	ldd	r24, Y+3	; 0x03
     d4c:	9c 81       	ldd	r25, Y+4	; 0x04
     d4e:	01 97       	sbiw	r24, 0x01	; 1
     d50:	f1 f7       	brne	.-4      	; 0xd4e <CLCD_voidSendCommand+0xdc>
     d52:	9c 83       	std	Y+4, r25	; 0x04
     d54:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d56:	8d 81       	ldd	r24, Y+5	; 0x05
     d58:	9e 81       	ldd	r25, Y+6	; 0x06
     d5a:	01 97       	sbiw	r24, 0x01	; 1
     d5c:	9e 83       	std	Y+6, r25	; 0x06
     d5e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d60:	8d 81       	ldd	r24, Y+5	; 0x05
     d62:	9e 81       	ldd	r25, Y+6	; 0x06
     d64:	00 97       	sbiw	r24, 0x00	; 0
     d66:	69 f7       	brne	.-38     	; 0xd42 <CLCD_voidSendCommand+0xd0>
     d68:	14 c0       	rjmp	.+40     	; 0xd92 <CLCD_voidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d6a:	6f 81       	ldd	r22, Y+7	; 0x07
     d6c:	78 85       	ldd	r23, Y+8	; 0x08
     d6e:	89 85       	ldd	r24, Y+9	; 0x09
     d70:	9a 85       	ldd	r25, Y+10	; 0x0a
     d72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d76:	dc 01       	movw	r26, r24
     d78:	cb 01       	movw	r24, r22
     d7a:	9e 83       	std	Y+6, r25	; 0x06
     d7c:	8d 83       	std	Y+5, r24	; 0x05
     d7e:	8d 81       	ldd	r24, Y+5	; 0x05
     d80:	9e 81       	ldd	r25, Y+6	; 0x06
     d82:	9a 83       	std	Y+2, r25	; 0x02
     d84:	89 83       	std	Y+1, r24	; 0x01
     d86:	89 81       	ldd	r24, Y+1	; 0x01
     d88:	9a 81       	ldd	r25, Y+2	; 0x02
     d8a:	01 97       	sbiw	r24, 0x01	; 1
     d8c:	f1 f7       	brne	.-4      	; 0xd8a <CLCD_voidSendCommand+0x118>
     d8e:	9a 83       	std	Y+2, r25	; 0x02
     d90:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(1);
    DIO_voidSetPinValue(CTRL_PORT,ENA,PIN_LOW);
     d92:	84 e0       	ldi	r24, 0x04	; 4
     d94:	60 e0       	ldi	r22, 0x00	; 0
     d96:	40 e0       	ldi	r20, 0x00	; 0
     d98:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>

}
     d9c:	2f 96       	adiw	r28, 0x0f	; 15
     d9e:	0f b6       	in	r0, 0x3f	; 63
     da0:	f8 94       	cli
     da2:	de bf       	out	0x3e, r29	; 62
     da4:	0f be       	out	0x3f, r0	; 63
     da6:	cd bf       	out	0x3d, r28	; 61
     da8:	cf 91       	pop	r28
     daa:	df 91       	pop	r29
     dac:	08 95       	ret

00000dae <CLCD_voidInit>:
void CLCD_voidInit(void){
     dae:	df 93       	push	r29
     db0:	cf 93       	push	r28
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	e8 97       	sbiw	r28, 0x38	; 56
     db8:	0f b6       	in	r0, 0x3f	; 63
     dba:	f8 94       	cli
     dbc:	de bf       	out	0x3e, r29	; 62
     dbe:	0f be       	out	0x3f, r0	; 63
     dc0:	cd bf       	out	0x3d, r28	; 61
    DIO_voidSetPortDirection(DATA_PORT,PORT_OUT);
     dc2:	83 e0       	ldi	r24, 0x03	; 3
     dc4:	6f ef       	ldi	r22, 0xFF	; 255
     dc6:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <DIO_voidSetPortDirection>
	DIO_voidSetPinDirection(CTRL_PORT,ENA,PIN_OUT);
     dca:	84 e0       	ldi	r24, 0x04	; 4
     dcc:	60 e0       	ldi	r22, 0x00	; 0
     dce:	41 e0       	ldi	r20, 0x01	; 1
     dd0:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(CTRL_PORT,RW,PIN_OUT);
     dd4:	84 e0       	ldi	r24, 0x04	; 4
     dd6:	61 e0       	ldi	r22, 0x01	; 1
     dd8:	41 e0       	ldi	r20, 0x01	; 1
     dda:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(CTRL_PORT,RS,PIN_OUT);
     dde:	84 e0       	ldi	r24, 0x04	; 4
     de0:	62 e0       	ldi	r22, 0x02	; 2
     de2:	41 e0       	ldi	r20, 0x01	; 1
     de4:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
     de8:	80 e0       	ldi	r24, 0x00	; 0
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	a0 e8       	ldi	r26, 0x80	; 128
     dee:	bf e3       	ldi	r27, 0x3F	; 63
     df0:	8d ab       	std	Y+53, r24	; 0x35
     df2:	9e ab       	std	Y+54, r25	; 0x36
     df4:	af ab       	std	Y+55, r26	; 0x37
     df6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     df8:	6d a9       	ldd	r22, Y+53	; 0x35
     dfa:	7e a9       	ldd	r23, Y+54	; 0x36
     dfc:	8f a9       	ldd	r24, Y+55	; 0x37
     dfe:	98 ad       	ldd	r25, Y+56	; 0x38
     e00:	20 e0       	ldi	r18, 0x00	; 0
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	4a ef       	ldi	r20, 0xFA	; 250
     e06:	54 e4       	ldi	r21, 0x44	; 68
     e08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e0c:	dc 01       	movw	r26, r24
     e0e:	cb 01       	movw	r24, r22
     e10:	89 ab       	std	Y+49, r24	; 0x31
     e12:	9a ab       	std	Y+50, r25	; 0x32
     e14:	ab ab       	std	Y+51, r26	; 0x33
     e16:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     e18:	69 a9       	ldd	r22, Y+49	; 0x31
     e1a:	7a a9       	ldd	r23, Y+50	; 0x32
     e1c:	8b a9       	ldd	r24, Y+51	; 0x33
     e1e:	9c a9       	ldd	r25, Y+52	; 0x34
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	40 e8       	ldi	r20, 0x80	; 128
     e26:	5f e3       	ldi	r21, 0x3F	; 63
     e28:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e2c:	88 23       	and	r24, r24
     e2e:	2c f4       	brge	.+10     	; 0xe3a <CLCD_voidInit+0x8c>
		__ticks = 1;
     e30:	81 e0       	ldi	r24, 0x01	; 1
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	98 ab       	std	Y+48, r25	; 0x30
     e36:	8f a7       	std	Y+47, r24	; 0x2f
     e38:	3f c0       	rjmp	.+126    	; 0xeb8 <CLCD_voidInit+0x10a>
	else if (__tmp > 65535)
     e3a:	69 a9       	ldd	r22, Y+49	; 0x31
     e3c:	7a a9       	ldd	r23, Y+50	; 0x32
     e3e:	8b a9       	ldd	r24, Y+51	; 0x33
     e40:	9c a9       	ldd	r25, Y+52	; 0x34
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	3f ef       	ldi	r19, 0xFF	; 255
     e46:	4f e7       	ldi	r20, 0x7F	; 127
     e48:	57 e4       	ldi	r21, 0x47	; 71
     e4a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e4e:	18 16       	cp	r1, r24
     e50:	4c f5       	brge	.+82     	; 0xea4 <CLCD_voidInit+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e52:	6d a9       	ldd	r22, Y+53	; 0x35
     e54:	7e a9       	ldd	r23, Y+54	; 0x36
     e56:	8f a9       	ldd	r24, Y+55	; 0x37
     e58:	98 ad       	ldd	r25, Y+56	; 0x38
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 e2       	ldi	r20, 0x20	; 32
     e60:	51 e4       	ldi	r21, 0x41	; 65
     e62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e66:	dc 01       	movw	r26, r24
     e68:	cb 01       	movw	r24, r22
     e6a:	bc 01       	movw	r22, r24
     e6c:	cd 01       	movw	r24, r26
     e6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e72:	dc 01       	movw	r26, r24
     e74:	cb 01       	movw	r24, r22
     e76:	98 ab       	std	Y+48, r25	; 0x30
     e78:	8f a7       	std	Y+47, r24	; 0x2f
     e7a:	0f c0       	rjmp	.+30     	; 0xe9a <CLCD_voidInit+0xec>
     e7c:	88 ec       	ldi	r24, 0xC8	; 200
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	9e a7       	std	Y+46, r25	; 0x2e
     e82:	8d a7       	std	Y+45, r24	; 0x2d
     e84:	8d a5       	ldd	r24, Y+45	; 0x2d
     e86:	9e a5       	ldd	r25, Y+46	; 0x2e
     e88:	01 97       	sbiw	r24, 0x01	; 1
     e8a:	f1 f7       	brne	.-4      	; 0xe88 <CLCD_voidInit+0xda>
     e8c:	9e a7       	std	Y+46, r25	; 0x2e
     e8e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e90:	8f a5       	ldd	r24, Y+47	; 0x2f
     e92:	98 a9       	ldd	r25, Y+48	; 0x30
     e94:	01 97       	sbiw	r24, 0x01	; 1
     e96:	98 ab       	std	Y+48, r25	; 0x30
     e98:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e9a:	8f a5       	ldd	r24, Y+47	; 0x2f
     e9c:	98 a9       	ldd	r25, Y+48	; 0x30
     e9e:	00 97       	sbiw	r24, 0x00	; 0
     ea0:	69 f7       	brne	.-38     	; 0xe7c <CLCD_voidInit+0xce>
     ea2:	14 c0       	rjmp	.+40     	; 0xecc <CLCD_voidInit+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ea4:	69 a9       	ldd	r22, Y+49	; 0x31
     ea6:	7a a9       	ldd	r23, Y+50	; 0x32
     ea8:	8b a9       	ldd	r24, Y+51	; 0x33
     eaa:	9c a9       	ldd	r25, Y+52	; 0x34
     eac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     eb0:	dc 01       	movw	r26, r24
     eb2:	cb 01       	movw	r24, r22
     eb4:	98 ab       	std	Y+48, r25	; 0x30
     eb6:	8f a7       	std	Y+47, r24	; 0x2f
     eb8:	8f a5       	ldd	r24, Y+47	; 0x2f
     eba:	98 a9       	ldd	r25, Y+48	; 0x30
     ebc:	9c a7       	std	Y+44, r25	; 0x2c
     ebe:	8b a7       	std	Y+43, r24	; 0x2b
     ec0:	8b a5       	ldd	r24, Y+43	; 0x2b
     ec2:	9c a5       	ldd	r25, Y+44	; 0x2c
     ec4:	01 97       	sbiw	r24, 0x01	; 1
     ec6:	f1 f7       	brne	.-4      	; 0xec4 <CLCD_voidInit+0x116>
     ec8:	9c a7       	std	Y+44, r25	; 0x2c
     eca:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(1);
    CLCD_voidSendCommand(0b00111000);
     ecc:	88 e3       	ldi	r24, 0x38	; 56
     ece:	0e 94 39 06 	call	0xc72	; 0xc72 <CLCD_voidSendCommand>
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	a0 e8       	ldi	r26, 0x80	; 128
     ed8:	bf e3       	ldi	r27, 0x3F	; 63
     eda:	8f a3       	std	Y+39, r24	; 0x27
     edc:	98 a7       	std	Y+40, r25	; 0x28
     ede:	a9 a7       	std	Y+41, r26	; 0x29
     ee0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ee2:	6f a1       	ldd	r22, Y+39	; 0x27
     ee4:	78 a5       	ldd	r23, Y+40	; 0x28
     ee6:	89 a5       	ldd	r24, Y+41	; 0x29
     ee8:	9a a5       	ldd	r25, Y+42	; 0x2a
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	4a ef       	ldi	r20, 0xFA	; 250
     ef0:	54 e4       	ldi	r21, 0x44	; 68
     ef2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ef6:	dc 01       	movw	r26, r24
     ef8:	cb 01       	movw	r24, r22
     efa:	8b a3       	std	Y+35, r24	; 0x23
     efc:	9c a3       	std	Y+36, r25	; 0x24
     efe:	ad a3       	std	Y+37, r26	; 0x25
     f00:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     f02:	6b a1       	ldd	r22, Y+35	; 0x23
     f04:	7c a1       	ldd	r23, Y+36	; 0x24
     f06:	8d a1       	ldd	r24, Y+37	; 0x25
     f08:	9e a1       	ldd	r25, Y+38	; 0x26
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	40 e8       	ldi	r20, 0x80	; 128
     f10:	5f e3       	ldi	r21, 0x3F	; 63
     f12:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     f16:	88 23       	and	r24, r24
     f18:	2c f4       	brge	.+10     	; 0xf24 <CLCD_voidInit+0x176>
		__ticks = 1;
     f1a:	81 e0       	ldi	r24, 0x01	; 1
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	9a a3       	std	Y+34, r25	; 0x22
     f20:	89 a3       	std	Y+33, r24	; 0x21
     f22:	3f c0       	rjmp	.+126    	; 0xfa2 <CLCD_voidInit+0x1f4>
	else if (__tmp > 65535)
     f24:	6b a1       	ldd	r22, Y+35	; 0x23
     f26:	7c a1       	ldd	r23, Y+36	; 0x24
     f28:	8d a1       	ldd	r24, Y+37	; 0x25
     f2a:	9e a1       	ldd	r25, Y+38	; 0x26
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	3f ef       	ldi	r19, 0xFF	; 255
     f30:	4f e7       	ldi	r20, 0x7F	; 127
     f32:	57 e4       	ldi	r21, 0x47	; 71
     f34:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f38:	18 16       	cp	r1, r24
     f3a:	4c f5       	brge	.+82     	; 0xf8e <CLCD_voidInit+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f3c:	6f a1       	ldd	r22, Y+39	; 0x27
     f3e:	78 a5       	ldd	r23, Y+40	; 0x28
     f40:	89 a5       	ldd	r24, Y+41	; 0x29
     f42:	9a a5       	ldd	r25, Y+42	; 0x2a
     f44:	20 e0       	ldi	r18, 0x00	; 0
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	40 e2       	ldi	r20, 0x20	; 32
     f4a:	51 e4       	ldi	r21, 0x41	; 65
     f4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f50:	dc 01       	movw	r26, r24
     f52:	cb 01       	movw	r24, r22
     f54:	bc 01       	movw	r22, r24
     f56:	cd 01       	movw	r24, r26
     f58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f5c:	dc 01       	movw	r26, r24
     f5e:	cb 01       	movw	r24, r22
     f60:	9a a3       	std	Y+34, r25	; 0x22
     f62:	89 a3       	std	Y+33, r24	; 0x21
     f64:	0f c0       	rjmp	.+30     	; 0xf84 <CLCD_voidInit+0x1d6>
     f66:	88 ec       	ldi	r24, 0xC8	; 200
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	98 a3       	std	Y+32, r25	; 0x20
     f6c:	8f 8f       	std	Y+31, r24	; 0x1f
     f6e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f70:	98 a1       	ldd	r25, Y+32	; 0x20
     f72:	01 97       	sbiw	r24, 0x01	; 1
     f74:	f1 f7       	brne	.-4      	; 0xf72 <CLCD_voidInit+0x1c4>
     f76:	98 a3       	std	Y+32, r25	; 0x20
     f78:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f7a:	89 a1       	ldd	r24, Y+33	; 0x21
     f7c:	9a a1       	ldd	r25, Y+34	; 0x22
     f7e:	01 97       	sbiw	r24, 0x01	; 1
     f80:	9a a3       	std	Y+34, r25	; 0x22
     f82:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f84:	89 a1       	ldd	r24, Y+33	; 0x21
     f86:	9a a1       	ldd	r25, Y+34	; 0x22
     f88:	00 97       	sbiw	r24, 0x00	; 0
     f8a:	69 f7       	brne	.-38     	; 0xf66 <CLCD_voidInit+0x1b8>
     f8c:	14 c0       	rjmp	.+40     	; 0xfb6 <CLCD_voidInit+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f8e:	6b a1       	ldd	r22, Y+35	; 0x23
     f90:	7c a1       	ldd	r23, Y+36	; 0x24
     f92:	8d a1       	ldd	r24, Y+37	; 0x25
     f94:	9e a1       	ldd	r25, Y+38	; 0x26
     f96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f9a:	dc 01       	movw	r26, r24
     f9c:	cb 01       	movw	r24, r22
     f9e:	9a a3       	std	Y+34, r25	; 0x22
     fa0:	89 a3       	std	Y+33, r24	; 0x21
     fa2:	89 a1       	ldd	r24, Y+33	; 0x21
     fa4:	9a a1       	ldd	r25, Y+34	; 0x22
     fa6:	9e 8f       	std	Y+30, r25	; 0x1e
     fa8:	8d 8f       	std	Y+29, r24	; 0x1d
     faa:	8d 8d       	ldd	r24, Y+29	; 0x1d
     fac:	9e 8d       	ldd	r25, Y+30	; 0x1e
     fae:	01 97       	sbiw	r24, 0x01	; 1
     fb0:	f1 f7       	brne	.-4      	; 0xfae <CLCD_voidInit+0x200>
     fb2:	9e 8f       	std	Y+30, r25	; 0x1e
     fb4:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(1);
    CLCD_voidSendCommand(0b00001100);
     fb6:	8c e0       	ldi	r24, 0x0C	; 12
     fb8:	0e 94 39 06 	call	0xc72	; 0xc72 <CLCD_voidSendCommand>
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	a0 e8       	ldi	r26, 0x80	; 128
     fc2:	bf e3       	ldi	r27, 0x3F	; 63
     fc4:	89 8f       	std	Y+25, r24	; 0x19
     fc6:	9a 8f       	std	Y+26, r25	; 0x1a
     fc8:	ab 8f       	std	Y+27, r26	; 0x1b
     fca:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fcc:	69 8d       	ldd	r22, Y+25	; 0x19
     fce:	7a 8d       	ldd	r23, Y+26	; 0x1a
     fd0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fd2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	4a ef       	ldi	r20, 0xFA	; 250
     fda:	54 e4       	ldi	r21, 0x44	; 68
     fdc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	8d 8b       	std	Y+21, r24	; 0x15
     fe6:	9e 8b       	std	Y+22, r25	; 0x16
     fe8:	af 8b       	std	Y+23, r26	; 0x17
     fea:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     fec:	6d 89       	ldd	r22, Y+21	; 0x15
     fee:	7e 89       	ldd	r23, Y+22	; 0x16
     ff0:	8f 89       	ldd	r24, Y+23	; 0x17
     ff2:	98 8d       	ldd	r25, Y+24	; 0x18
     ff4:	20 e0       	ldi	r18, 0x00	; 0
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	40 e8       	ldi	r20, 0x80	; 128
     ffa:	5f e3       	ldi	r21, 0x3F	; 63
     ffc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1000:	88 23       	and	r24, r24
    1002:	2c f4       	brge	.+10     	; 0x100e <CLCD_voidInit+0x260>
		__ticks = 1;
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	9c 8b       	std	Y+20, r25	; 0x14
    100a:	8b 8b       	std	Y+19, r24	; 0x13
    100c:	3f c0       	rjmp	.+126    	; 0x108c <CLCD_voidInit+0x2de>
	else if (__tmp > 65535)
    100e:	6d 89       	ldd	r22, Y+21	; 0x15
    1010:	7e 89       	ldd	r23, Y+22	; 0x16
    1012:	8f 89       	ldd	r24, Y+23	; 0x17
    1014:	98 8d       	ldd	r25, Y+24	; 0x18
    1016:	20 e0       	ldi	r18, 0x00	; 0
    1018:	3f ef       	ldi	r19, 0xFF	; 255
    101a:	4f e7       	ldi	r20, 0x7F	; 127
    101c:	57 e4       	ldi	r21, 0x47	; 71
    101e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1022:	18 16       	cp	r1, r24
    1024:	4c f5       	brge	.+82     	; 0x1078 <CLCD_voidInit+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1026:	69 8d       	ldd	r22, Y+25	; 0x19
    1028:	7a 8d       	ldd	r23, Y+26	; 0x1a
    102a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    102c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    102e:	20 e0       	ldi	r18, 0x00	; 0
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	40 e2       	ldi	r20, 0x20	; 32
    1034:	51 e4       	ldi	r21, 0x41	; 65
    1036:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    103a:	dc 01       	movw	r26, r24
    103c:	cb 01       	movw	r24, r22
    103e:	bc 01       	movw	r22, r24
    1040:	cd 01       	movw	r24, r26
    1042:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1046:	dc 01       	movw	r26, r24
    1048:	cb 01       	movw	r24, r22
    104a:	9c 8b       	std	Y+20, r25	; 0x14
    104c:	8b 8b       	std	Y+19, r24	; 0x13
    104e:	0f c0       	rjmp	.+30     	; 0x106e <CLCD_voidInit+0x2c0>
    1050:	88 ec       	ldi	r24, 0xC8	; 200
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	9a 8b       	std	Y+18, r25	; 0x12
    1056:	89 8b       	std	Y+17, r24	; 0x11
    1058:	89 89       	ldd	r24, Y+17	; 0x11
    105a:	9a 89       	ldd	r25, Y+18	; 0x12
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	f1 f7       	brne	.-4      	; 0x105c <CLCD_voidInit+0x2ae>
    1060:	9a 8b       	std	Y+18, r25	; 0x12
    1062:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1064:	8b 89       	ldd	r24, Y+19	; 0x13
    1066:	9c 89       	ldd	r25, Y+20	; 0x14
    1068:	01 97       	sbiw	r24, 0x01	; 1
    106a:	9c 8b       	std	Y+20, r25	; 0x14
    106c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    106e:	8b 89       	ldd	r24, Y+19	; 0x13
    1070:	9c 89       	ldd	r25, Y+20	; 0x14
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	69 f7       	brne	.-38     	; 0x1050 <CLCD_voidInit+0x2a2>
    1076:	14 c0       	rjmp	.+40     	; 0x10a0 <CLCD_voidInit+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1078:	6d 89       	ldd	r22, Y+21	; 0x15
    107a:	7e 89       	ldd	r23, Y+22	; 0x16
    107c:	8f 89       	ldd	r24, Y+23	; 0x17
    107e:	98 8d       	ldd	r25, Y+24	; 0x18
    1080:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1084:	dc 01       	movw	r26, r24
    1086:	cb 01       	movw	r24, r22
    1088:	9c 8b       	std	Y+20, r25	; 0x14
    108a:	8b 8b       	std	Y+19, r24	; 0x13
    108c:	8b 89       	ldd	r24, Y+19	; 0x13
    108e:	9c 89       	ldd	r25, Y+20	; 0x14
    1090:	98 8b       	std	Y+16, r25	; 0x10
    1092:	8f 87       	std	Y+15, r24	; 0x0f
    1094:	8f 85       	ldd	r24, Y+15	; 0x0f
    1096:	98 89       	ldd	r25, Y+16	; 0x10
    1098:	01 97       	sbiw	r24, 0x01	; 1
    109a:	f1 f7       	brne	.-4      	; 0x1098 <CLCD_voidInit+0x2ea>
    109c:	98 8b       	std	Y+16, r25	; 0x10
    109e:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(1);
    CLCD_voidSendCommand(0b00000001);
    10a0:	81 e0       	ldi	r24, 0x01	; 1
    10a2:	0e 94 39 06 	call	0xc72	; 0xc72 <CLCD_voidSendCommand>
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	a0 e8       	ldi	r26, 0x80	; 128
    10ac:	bf e3       	ldi	r27, 0x3F	; 63
    10ae:	8b 87       	std	Y+11, r24	; 0x0b
    10b0:	9c 87       	std	Y+12, r25	; 0x0c
    10b2:	ad 87       	std	Y+13, r26	; 0x0d
    10b4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10b6:	6b 85       	ldd	r22, Y+11	; 0x0b
    10b8:	7c 85       	ldd	r23, Y+12	; 0x0c
    10ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    10bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    10be:	20 e0       	ldi	r18, 0x00	; 0
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	4a ef       	ldi	r20, 0xFA	; 250
    10c4:	54 e4       	ldi	r21, 0x44	; 68
    10c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10ca:	dc 01       	movw	r26, r24
    10cc:	cb 01       	movw	r24, r22
    10ce:	8f 83       	std	Y+7, r24	; 0x07
    10d0:	98 87       	std	Y+8, r25	; 0x08
    10d2:	a9 87       	std	Y+9, r26	; 0x09
    10d4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    10d6:	6f 81       	ldd	r22, Y+7	; 0x07
    10d8:	78 85       	ldd	r23, Y+8	; 0x08
    10da:	89 85       	ldd	r24, Y+9	; 0x09
    10dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    10de:	20 e0       	ldi	r18, 0x00	; 0
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	40 e8       	ldi	r20, 0x80	; 128
    10e4:	5f e3       	ldi	r21, 0x3F	; 63
    10e6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    10ea:	88 23       	and	r24, r24
    10ec:	2c f4       	brge	.+10     	; 0x10f8 <CLCD_voidInit+0x34a>
		__ticks = 1;
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	9e 83       	std	Y+6, r25	; 0x06
    10f4:	8d 83       	std	Y+5, r24	; 0x05
    10f6:	3f c0       	rjmp	.+126    	; 0x1176 <CLCD_voidInit+0x3c8>
	else if (__tmp > 65535)
    10f8:	6f 81       	ldd	r22, Y+7	; 0x07
    10fa:	78 85       	ldd	r23, Y+8	; 0x08
    10fc:	89 85       	ldd	r24, Y+9	; 0x09
    10fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1100:	20 e0       	ldi	r18, 0x00	; 0
    1102:	3f ef       	ldi	r19, 0xFF	; 255
    1104:	4f e7       	ldi	r20, 0x7F	; 127
    1106:	57 e4       	ldi	r21, 0x47	; 71
    1108:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    110c:	18 16       	cp	r1, r24
    110e:	4c f5       	brge	.+82     	; 0x1162 <CLCD_voidInit+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1110:	6b 85       	ldd	r22, Y+11	; 0x0b
    1112:	7c 85       	ldd	r23, Y+12	; 0x0c
    1114:	8d 85       	ldd	r24, Y+13	; 0x0d
    1116:	9e 85       	ldd	r25, Y+14	; 0x0e
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	40 e2       	ldi	r20, 0x20	; 32
    111e:	51 e4       	ldi	r21, 0x41	; 65
    1120:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1124:	dc 01       	movw	r26, r24
    1126:	cb 01       	movw	r24, r22
    1128:	bc 01       	movw	r22, r24
    112a:	cd 01       	movw	r24, r26
    112c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1130:	dc 01       	movw	r26, r24
    1132:	cb 01       	movw	r24, r22
    1134:	9e 83       	std	Y+6, r25	; 0x06
    1136:	8d 83       	std	Y+5, r24	; 0x05
    1138:	0f c0       	rjmp	.+30     	; 0x1158 <CLCD_voidInit+0x3aa>
    113a:	88 ec       	ldi	r24, 0xC8	; 200
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	9c 83       	std	Y+4, r25	; 0x04
    1140:	8b 83       	std	Y+3, r24	; 0x03
    1142:	8b 81       	ldd	r24, Y+3	; 0x03
    1144:	9c 81       	ldd	r25, Y+4	; 0x04
    1146:	01 97       	sbiw	r24, 0x01	; 1
    1148:	f1 f7       	brne	.-4      	; 0x1146 <CLCD_voidInit+0x398>
    114a:	9c 83       	std	Y+4, r25	; 0x04
    114c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    114e:	8d 81       	ldd	r24, Y+5	; 0x05
    1150:	9e 81       	ldd	r25, Y+6	; 0x06
    1152:	01 97       	sbiw	r24, 0x01	; 1
    1154:	9e 83       	std	Y+6, r25	; 0x06
    1156:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1158:	8d 81       	ldd	r24, Y+5	; 0x05
    115a:	9e 81       	ldd	r25, Y+6	; 0x06
    115c:	00 97       	sbiw	r24, 0x00	; 0
    115e:	69 f7       	brne	.-38     	; 0x113a <CLCD_voidInit+0x38c>
    1160:	14 c0       	rjmp	.+40     	; 0x118a <CLCD_voidInit+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1162:	6f 81       	ldd	r22, Y+7	; 0x07
    1164:	78 85       	ldd	r23, Y+8	; 0x08
    1166:	89 85       	ldd	r24, Y+9	; 0x09
    1168:	9a 85       	ldd	r25, Y+10	; 0x0a
    116a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    116e:	dc 01       	movw	r26, r24
    1170:	cb 01       	movw	r24, r22
    1172:	9e 83       	std	Y+6, r25	; 0x06
    1174:	8d 83       	std	Y+5, r24	; 0x05
    1176:	8d 81       	ldd	r24, Y+5	; 0x05
    1178:	9e 81       	ldd	r25, Y+6	; 0x06
    117a:	9a 83       	std	Y+2, r25	; 0x02
    117c:	89 83       	std	Y+1, r24	; 0x01
    117e:	89 81       	ldd	r24, Y+1	; 0x01
    1180:	9a 81       	ldd	r25, Y+2	; 0x02
    1182:	01 97       	sbiw	r24, 0x01	; 1
    1184:	f1 f7       	brne	.-4      	; 0x1182 <CLCD_voidInit+0x3d4>
    1186:	9a 83       	std	Y+2, r25	; 0x02
    1188:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(1);
}
    118a:	e8 96       	adiw	r28, 0x38	; 56
    118c:	0f b6       	in	r0, 0x3f	; 63
    118e:	f8 94       	cli
    1190:	de bf       	out	0x3e, r29	; 62
    1192:	0f be       	out	0x3f, r0	; 63
    1194:	cd bf       	out	0x3d, r28	; 61
    1196:	cf 91       	pop	r28
    1198:	df 91       	pop	r29
    119a:	08 95       	ret

0000119c <CLCD_voidSendString>:

void CLCD_voidSendString(u8 *copy_u8Data){
    119c:	df 93       	push	r29
    119e:	cf 93       	push	r28
    11a0:	00 d0       	rcall	.+0      	; 0x11a2 <CLCD_voidSendString+0x6>
    11a2:	0f 92       	push	r0
    11a4:	cd b7       	in	r28, 0x3d	; 61
    11a6:	de b7       	in	r29, 0x3e	; 62
    11a8:	9b 83       	std	Y+3, r25	; 0x03
    11aa:	8a 83       	std	Y+2, r24	; 0x02
	u8 LOCAL_u8CopyStr=0;
    11ac:	19 82       	std	Y+1, r1	; 0x01
    11ae:	0e c0       	rjmp	.+28     	; 0x11cc <CLCD_voidSendString+0x30>
    while(copy_u8Data[LOCAL_u8CopyStr] != '\0'){
    	CLCD_voidSendData(copy_u8Data[LOCAL_u8CopyStr]);
    11b0:	89 81       	ldd	r24, Y+1	; 0x01
    11b2:	28 2f       	mov	r18, r24
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	8a 81       	ldd	r24, Y+2	; 0x02
    11b8:	9b 81       	ldd	r25, Y+3	; 0x03
    11ba:	fc 01       	movw	r30, r24
    11bc:	e2 0f       	add	r30, r18
    11be:	f3 1f       	adc	r31, r19
    11c0:	80 81       	ld	r24, Z
    11c2:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_voidSendData>
    	LOCAL_u8CopyStr++;
    11c6:	89 81       	ldd	r24, Y+1	; 0x01
    11c8:	8f 5f       	subi	r24, 0xFF	; 255
    11ca:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(1);
}

void CLCD_voidSendString(u8 *copy_u8Data){
	u8 LOCAL_u8CopyStr=0;
    while(copy_u8Data[LOCAL_u8CopyStr] != '\0'){
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
    11ce:	28 2f       	mov	r18, r24
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	8a 81       	ldd	r24, Y+2	; 0x02
    11d4:	9b 81       	ldd	r25, Y+3	; 0x03
    11d6:	fc 01       	movw	r30, r24
    11d8:	e2 0f       	add	r30, r18
    11da:	f3 1f       	adc	r31, r19
    11dc:	80 81       	ld	r24, Z
    11de:	88 23       	and	r24, r24
    11e0:	39 f7       	brne	.-50     	; 0x11b0 <CLCD_voidSendString+0x14>
    	CLCD_voidSendData(copy_u8Data[LOCAL_u8CopyStr]);
    	LOCAL_u8CopyStr++;

    }
}
    11e2:	0f 90       	pop	r0
    11e4:	0f 90       	pop	r0
    11e6:	0f 90       	pop	r0
    11e8:	cf 91       	pop	r28
    11ea:	df 91       	pop	r29
    11ec:	08 95       	ret

000011ee <CLCD_voidSetPosition>:

void CLCD_voidSetPosition(u8 Copy_u8HorizontalValue,u8 copy_u8AbsVerticalValue){
    11ee:	df 93       	push	r29
    11f0:	cf 93       	push	r28
    11f2:	00 d0       	rcall	.+0      	; 0x11f4 <CLCD_voidSetPosition+0x6>
    11f4:	00 d0       	rcall	.+0      	; 0x11f6 <CLCD_voidSetPosition+0x8>
    11f6:	0f 92       	push	r0
    11f8:	cd b7       	in	r28, 0x3d	; 61
    11fa:	de b7       	in	r29, 0x3e	; 62
    11fc:	8a 83       	std	Y+2, r24	; 0x02
    11fe:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8Position=0;
    1200:	19 82       	std	Y+1, r1	; 0x01
    switch (copy_u8AbsVerticalValue)
    1202:	8b 81       	ldd	r24, Y+3	; 0x03
    1204:	28 2f       	mov	r18, r24
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	3d 83       	std	Y+5, r19	; 0x05
    120a:	2c 83       	std	Y+4, r18	; 0x04
    120c:	8c 81       	ldd	r24, Y+4	; 0x04
    120e:	9d 81       	ldd	r25, Y+5	; 0x05
    1210:	00 97       	sbiw	r24, 0x00	; 0
    1212:	31 f0       	breq	.+12     	; 0x1220 <CLCD_voidSetPosition+0x32>
    1214:	2c 81       	ldd	r18, Y+4	; 0x04
    1216:	3d 81       	ldd	r19, Y+5	; 0x05
    1218:	21 30       	cpi	r18, 0x01	; 1
    121a:	31 05       	cpc	r19, r1
    121c:	21 f0       	breq	.+8      	; 0x1226 <CLCD_voidSetPosition+0x38>
    121e:	06 c0       	rjmp	.+12     	; 0x122c <CLCD_voidSetPosition+0x3e>
    {
    case 0:
        Local_u8Position=Copy_u8HorizontalValue;
    1220:	8a 81       	ldd	r24, Y+2	; 0x02
    1222:	89 83       	std	Y+1, r24	; 0x01
    1224:	03 c0       	rjmp	.+6      	; 0x122c <CLCD_voidSetPosition+0x3e>
        break;
    case 1:
        Local_u8Position=Copy_u8HorizontalValue+LINE_BASE1;
    1226:	8a 81       	ldd	r24, Y+2	; 0x02
    1228:	80 5c       	subi	r24, 0xC0	; 192
    122a:	89 83       	std	Y+1, r24	; 0x01
        break;
    }
        CLCD_voidSendCommand(Local_u8Position+DDRAM_MSB);
    122c:	89 81       	ldd	r24, Y+1	; 0x01
    122e:	80 58       	subi	r24, 0x80	; 128
    1230:	0e 94 39 06 	call	0xc72	; 0xc72 <CLCD_voidSendCommand>
}
    1234:	0f 90       	pop	r0
    1236:	0f 90       	pop	r0
    1238:	0f 90       	pop	r0
    123a:	0f 90       	pop	r0
    123c:	0f 90       	pop	r0
    123e:	cf 91       	pop	r28
    1240:	df 91       	pop	r29
    1242:	08 95       	ret

00001244 <CLCD_voidClearDisplay>:

void CLCD_voidClearDisplay(){
    1244:	df 93       	push	r29
    1246:	cf 93       	push	r28
    1248:	cd b7       	in	r28, 0x3d	; 61
    124a:	de b7       	in	r29, 0x3e	; 62
    CLCD_voidSendCommand(1);
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	0e 94 39 06 	call	0xc72	; 0xc72 <CLCD_voidSendCommand>
}
    1252:	cf 91       	pop	r28
    1254:	df 91       	pop	r29
    1256:	08 95       	ret

00001258 <CLCD_voidSendSpecialCharacter>:

void CLCD_voidSendSpecialCharacter(u8 Copy_u8BlockNum, u8 Copy_HorizontalValue,u8 copy_AbsVerticalValue,u8 *Pu8ArrayPattern){
    1258:	df 93       	push	r29
    125a:	cf 93       	push	r28
    125c:	cd b7       	in	r28, 0x3d	; 61
    125e:	de b7       	in	r29, 0x3e	; 62
    1260:	27 97       	sbiw	r28, 0x07	; 7
    1262:	0f b6       	in	r0, 0x3f	; 63
    1264:	f8 94       	cli
    1266:	de bf       	out	0x3e, r29	; 62
    1268:	0f be       	out	0x3f, r0	; 63
    126a:	cd bf       	out	0x3d, r28	; 61
    126c:	8b 83       	std	Y+3, r24	; 0x03
    126e:	6c 83       	std	Y+4, r22	; 0x04
    1270:	4d 83       	std	Y+5, r20	; 0x05
    1272:	3f 83       	std	Y+7, r19	; 0x07
    1274:	2e 83       	std	Y+6, r18	; 0x06
    u8 Local_u8AddressPosition=Copy_u8BlockNum*8;
    1276:	8b 81       	ldd	r24, Y+3	; 0x03
    1278:	88 2f       	mov	r24, r24
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	88 0f       	add	r24, r24
    127e:	99 1f       	adc	r25, r25
    1280:	88 0f       	add	r24, r24
    1282:	99 1f       	adc	r25, r25
    1284:	88 0f       	add	r24, r24
    1286:	99 1f       	adc	r25, r25
    1288:	8a 83       	std	Y+2, r24	; 0x02
    //go to CGRAM -->CMD SETT_GCRAM_ADD
    CLCD_voidSendCommand(Local_u8AddressPosition+CGRAM_MSB);
    128a:	8a 81       	ldd	r24, Y+2	; 0x02
    128c:	80 5c       	subi	r24, 0xC0	; 192
    128e:	0e 94 39 06 	call	0xc72	; 0xc72 <CLCD_voidSendCommand>
    //START DRAWING PATTERN
    for (u8 i = 0; i < 8; i++)
    1292:	19 82       	std	Y+1, r1	; 0x01
    1294:	0e c0       	rjmp	.+28     	; 0x12b2 <CLCD_voidSendSpecialCharacter+0x5a>
    {
        CLCD_voidSendData(Pu8ArrayPattern[i]);
    1296:	89 81       	ldd	r24, Y+1	; 0x01
    1298:	28 2f       	mov	r18, r24
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	8e 81       	ldd	r24, Y+6	; 0x06
    129e:	9f 81       	ldd	r25, Y+7	; 0x07
    12a0:	fc 01       	movw	r30, r24
    12a2:	e2 0f       	add	r30, r18
    12a4:	f3 1f       	adc	r31, r19
    12a6:	80 81       	ld	r24, Z
    12a8:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_voidSendData>
void CLCD_voidSendSpecialCharacter(u8 Copy_u8BlockNum, u8 Copy_HorizontalValue,u8 copy_AbsVerticalValue,u8 *Pu8ArrayPattern){
    u8 Local_u8AddressPosition=Copy_u8BlockNum*8;
    //go to CGRAM -->CMD SETT_GCRAM_ADD
    CLCD_voidSendCommand(Local_u8AddressPosition+CGRAM_MSB);
    //START DRAWING PATTERN
    for (u8 i = 0; i < 8; i++)
    12ac:	89 81       	ldd	r24, Y+1	; 0x01
    12ae:	8f 5f       	subi	r24, 0xFF	; 255
    12b0:	89 83       	std	Y+1, r24	; 0x01
    12b2:	89 81       	ldd	r24, Y+1	; 0x01
    12b4:	88 30       	cpi	r24, 0x08	; 8
    12b6:	78 f3       	brcs	.-34     	; 0x1296 <CLCD_voidSendSpecialCharacter+0x3e>
    {
        CLCD_voidSendData(Pu8ArrayPattern[i]);
    }
    //DISPLAY PATTERN
    CLCD_voidSetPosition(Copy_HorizontalValue,copy_AbsVerticalValue);
    12b8:	8c 81       	ldd	r24, Y+4	; 0x04
    12ba:	6d 81       	ldd	r22, Y+5	; 0x05
    12bc:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    CLCD_voidSendData(Copy_u8BlockNum);
    12c0:	8b 81       	ldd	r24, Y+3	; 0x03
    12c2:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_voidSendData>



}
    12c6:	27 96       	adiw	r28, 0x07	; 7
    12c8:	0f b6       	in	r0, 0x3f	; 63
    12ca:	f8 94       	cli
    12cc:	de bf       	out	0x3e, r29	; 62
    12ce:	0f be       	out	0x3f, r0	; 63
    12d0:	cd bf       	out	0x3d, r28	; 61
    12d2:	cf 91       	pop	r28
    12d4:	df 91       	pop	r29
    12d6:	08 95       	ret

000012d8 <CLCD_voidSendNum>:

void CLCD_voidSendNum(u16 Copy_u16Num){
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	df 93       	push	r29
    12de:	cf 93       	push	r28
    12e0:	cd b7       	in	r28, 0x3d	; 61
    12e2:	de b7       	in	r29, 0x3e	; 62
    12e4:	c7 57       	subi	r28, 0x77	; 119
    12e6:	d0 40       	sbci	r29, 0x00	; 0
    12e8:	0f b6       	in	r0, 0x3f	; 63
    12ea:	f8 94       	cli
    12ec:	de bf       	out	0x3e, r29	; 62
    12ee:	0f be       	out	0x3f, r0	; 63
    12f0:	cd bf       	out	0x3d, r28	; 61
    12f2:	fe 01       	movw	r30, r28
    12f4:	ea 58       	subi	r30, 0x8A	; 138
    12f6:	ff 4f       	sbci	r31, 0xFF	; 255
    12f8:	91 83       	std	Z+1, r25	; 0x01
    12fa:	80 83       	st	Z, r24
    u8 LOCAL_u8CopyNum,LOCAL_u8counter=0;
    12fc:	18 8a       	std	Y+16, r1	; 0x10
    u8 arr[100]={0};
    12fe:	84 e6       	ldi	r24, 0x64	; 100
    1300:	fe 01       	movw	r30, r28
    1302:	72 96       	adiw	r30, 0x12	; 18
    1304:	df 01       	movw	r26, r30
    1306:	98 2f       	mov	r25, r24
    1308:	1d 92       	st	X+, r1
    130a:	9a 95       	dec	r25
    130c:	e9 f7       	brne	.-6      	; 0x1308 <CLCD_voidSendNum+0x30>
    do{
        LOCAL_u8CopyNum=Copy_u16Num%10;
    130e:	fe 01       	movw	r30, r28
    1310:	ea 58       	subi	r30, 0x8A	; 138
    1312:	ff 4f       	sbci	r31, 0xFF	; 255
    1314:	80 81       	ld	r24, Z
    1316:	91 81       	ldd	r25, Z+1	; 0x01
    1318:	2a e0       	ldi	r18, 0x0A	; 10
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	b9 01       	movw	r22, r18
    131e:	0e 94 f8 2e 	call	0x5df0	; 0x5df0 <__udivmodhi4>
    1322:	89 8b       	std	Y+17, r24	; 0x11
        Copy_u16Num/=10;
    1324:	8e 01       	movw	r16, r28
    1326:	0a 58       	subi	r16, 0x8A	; 138
    1328:	1f 4f       	sbci	r17, 0xFF	; 255
    132a:	fe 01       	movw	r30, r28
    132c:	ea 58       	subi	r30, 0x8A	; 138
    132e:	ff 4f       	sbci	r31, 0xFF	; 255
    1330:	80 81       	ld	r24, Z
    1332:	91 81       	ldd	r25, Z+1	; 0x01
    1334:	2a e0       	ldi	r18, 0x0A	; 10
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	b9 01       	movw	r22, r18
    133a:	0e 94 f8 2e 	call	0x5df0	; 0x5df0 <__udivmodhi4>
    133e:	cb 01       	movw	r24, r22
    1340:	d8 01       	movw	r26, r16
    1342:	11 96       	adiw	r26, 0x01	; 1
    1344:	9c 93       	st	X, r25
    1346:	8e 93       	st	-X, r24
        arr[LOCAL_u8counter]=LOCAL_u8CopyNum + '0';
    1348:	88 89       	ldd	r24, Y+16	; 0x10
    134a:	28 2f       	mov	r18, r24
    134c:	30 e0       	ldi	r19, 0x00	; 0
    134e:	89 89       	ldd	r24, Y+17	; 0x11
    1350:	48 2f       	mov	r20, r24
    1352:	40 5d       	subi	r20, 0xD0	; 208
    1354:	ce 01       	movw	r24, r28
    1356:	42 96       	adiw	r24, 0x12	; 18
    1358:	fc 01       	movw	r30, r24
    135a:	e2 0f       	add	r30, r18
    135c:	f3 1f       	adc	r31, r19
    135e:	40 83       	st	Z, r20
        LOCAL_u8counter++;
    1360:	88 89       	ldd	r24, Y+16	; 0x10
    1362:	8f 5f       	subi	r24, 0xFF	; 255
    1364:	88 8b       	std	Y+16, r24	; 0x10
    }while(Copy_u16Num!=0);
    1366:	fe 01       	movw	r30, r28
    1368:	ea 58       	subi	r30, 0x8A	; 138
    136a:	ff 4f       	sbci	r31, 0xFF	; 255
    136c:	80 81       	ld	r24, Z
    136e:	91 81       	ldd	r25, Z+1	; 0x01
    1370:	00 97       	sbiw	r24, 0x00	; 0
    1372:	69 f6       	brne	.-102    	; 0x130e <CLCD_voidSendNum+0x36>
    for (u8 i = LOCAL_u8counter; i >0 ; i--)
    1374:	88 89       	ldd	r24, Y+16	; 0x10
    1376:	8f 87       	std	Y+15, r24	; 0x0f
    1378:	83 c0       	rjmp	.+262    	; 0x1480 <CLCD_voidSendNum+0x1a8>
    {
        CLCD_voidSendData(arr[i-1]);
    137a:	8f 85       	ldd	r24, Y+15	; 0x0f
    137c:	88 2f       	mov	r24, r24
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	9c 01       	movw	r18, r24
    1382:	21 50       	subi	r18, 0x01	; 1
    1384:	30 40       	sbci	r19, 0x00	; 0
    1386:	ce 01       	movw	r24, r28
    1388:	42 96       	adiw	r24, 0x12	; 18
    138a:	fc 01       	movw	r30, r24
    138c:	e2 0f       	add	r30, r18
    138e:	f3 1f       	adc	r31, r19
    1390:	80 81       	ld	r24, Z
    1392:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_voidSendData>
    1396:	80 e0       	ldi	r24, 0x00	; 0
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	a0 e8       	ldi	r26, 0x80	; 128
    139c:	bf e3       	ldi	r27, 0x3F	; 63
    139e:	8b 87       	std	Y+11, r24	; 0x0b
    13a0:	9c 87       	std	Y+12, r25	; 0x0c
    13a2:	ad 87       	std	Y+13, r26	; 0x0d
    13a4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    13a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    13aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    13ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    13ae:	20 e0       	ldi	r18, 0x00	; 0
    13b0:	30 e0       	ldi	r19, 0x00	; 0
    13b2:	4a ef       	ldi	r20, 0xFA	; 250
    13b4:	54 e4       	ldi	r21, 0x44	; 68
    13b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13ba:	dc 01       	movw	r26, r24
    13bc:	cb 01       	movw	r24, r22
    13be:	8f 83       	std	Y+7, r24	; 0x07
    13c0:	98 87       	std	Y+8, r25	; 0x08
    13c2:	a9 87       	std	Y+9, r26	; 0x09
    13c4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13c6:	6f 81       	ldd	r22, Y+7	; 0x07
    13c8:	78 85       	ldd	r23, Y+8	; 0x08
    13ca:	89 85       	ldd	r24, Y+9	; 0x09
    13cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    13ce:	20 e0       	ldi	r18, 0x00	; 0
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	40 e8       	ldi	r20, 0x80	; 128
    13d4:	5f e3       	ldi	r21, 0x3F	; 63
    13d6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13da:	88 23       	and	r24, r24
    13dc:	2c f4       	brge	.+10     	; 0x13e8 <CLCD_voidSendNum+0x110>
		__ticks = 1;
    13de:	81 e0       	ldi	r24, 0x01	; 1
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	9e 83       	std	Y+6, r25	; 0x06
    13e4:	8d 83       	std	Y+5, r24	; 0x05
    13e6:	3f c0       	rjmp	.+126    	; 0x1466 <CLCD_voidSendNum+0x18e>
	else if (__tmp > 65535)
    13e8:	6f 81       	ldd	r22, Y+7	; 0x07
    13ea:	78 85       	ldd	r23, Y+8	; 0x08
    13ec:	89 85       	ldd	r24, Y+9	; 0x09
    13ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    13f0:	20 e0       	ldi	r18, 0x00	; 0
    13f2:	3f ef       	ldi	r19, 0xFF	; 255
    13f4:	4f e7       	ldi	r20, 0x7F	; 127
    13f6:	57 e4       	ldi	r21, 0x47	; 71
    13f8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13fc:	18 16       	cp	r1, r24
    13fe:	4c f5       	brge	.+82     	; 0x1452 <CLCD_voidSendNum+0x17a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1400:	6b 85       	ldd	r22, Y+11	; 0x0b
    1402:	7c 85       	ldd	r23, Y+12	; 0x0c
    1404:	8d 85       	ldd	r24, Y+13	; 0x0d
    1406:	9e 85       	ldd	r25, Y+14	; 0x0e
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	40 e2       	ldi	r20, 0x20	; 32
    140e:	51 e4       	ldi	r21, 0x41	; 65
    1410:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1414:	dc 01       	movw	r26, r24
    1416:	cb 01       	movw	r24, r22
    1418:	bc 01       	movw	r22, r24
    141a:	cd 01       	movw	r24, r26
    141c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1420:	dc 01       	movw	r26, r24
    1422:	cb 01       	movw	r24, r22
    1424:	9e 83       	std	Y+6, r25	; 0x06
    1426:	8d 83       	std	Y+5, r24	; 0x05
    1428:	0f c0       	rjmp	.+30     	; 0x1448 <CLCD_voidSendNum+0x170>
    142a:	88 ec       	ldi	r24, 0xC8	; 200
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	9c 83       	std	Y+4, r25	; 0x04
    1430:	8b 83       	std	Y+3, r24	; 0x03
    1432:	8b 81       	ldd	r24, Y+3	; 0x03
    1434:	9c 81       	ldd	r25, Y+4	; 0x04
    1436:	01 97       	sbiw	r24, 0x01	; 1
    1438:	f1 f7       	brne	.-4      	; 0x1436 <CLCD_voidSendNum+0x15e>
    143a:	9c 83       	std	Y+4, r25	; 0x04
    143c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    143e:	8d 81       	ldd	r24, Y+5	; 0x05
    1440:	9e 81       	ldd	r25, Y+6	; 0x06
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	9e 83       	std	Y+6, r25	; 0x06
    1446:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1448:	8d 81       	ldd	r24, Y+5	; 0x05
    144a:	9e 81       	ldd	r25, Y+6	; 0x06
    144c:	00 97       	sbiw	r24, 0x00	; 0
    144e:	69 f7       	brne	.-38     	; 0x142a <CLCD_voidSendNum+0x152>
    1450:	14 c0       	rjmp	.+40     	; 0x147a <CLCD_voidSendNum+0x1a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1452:	6f 81       	ldd	r22, Y+7	; 0x07
    1454:	78 85       	ldd	r23, Y+8	; 0x08
    1456:	89 85       	ldd	r24, Y+9	; 0x09
    1458:	9a 85       	ldd	r25, Y+10	; 0x0a
    145a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    145e:	dc 01       	movw	r26, r24
    1460:	cb 01       	movw	r24, r22
    1462:	9e 83       	std	Y+6, r25	; 0x06
    1464:	8d 83       	std	Y+5, r24	; 0x05
    1466:	8d 81       	ldd	r24, Y+5	; 0x05
    1468:	9e 81       	ldd	r25, Y+6	; 0x06
    146a:	9a 83       	std	Y+2, r25	; 0x02
    146c:	89 83       	std	Y+1, r24	; 0x01
    146e:	89 81       	ldd	r24, Y+1	; 0x01
    1470:	9a 81       	ldd	r25, Y+2	; 0x02
    1472:	01 97       	sbiw	r24, 0x01	; 1
    1474:	f1 f7       	brne	.-4      	; 0x1472 <CLCD_voidSendNum+0x19a>
    1476:	9a 83       	std	Y+2, r25	; 0x02
    1478:	89 83       	std	Y+1, r24	; 0x01
        LOCAL_u8CopyNum=Copy_u16Num%10;
        Copy_u16Num/=10;
        arr[LOCAL_u8counter]=LOCAL_u8CopyNum + '0';
        LOCAL_u8counter++;
    }while(Copy_u16Num!=0);
    for (u8 i = LOCAL_u8counter; i >0 ; i--)
    147a:	8f 85       	ldd	r24, Y+15	; 0x0f
    147c:	81 50       	subi	r24, 0x01	; 1
    147e:	8f 87       	std	Y+15, r24	; 0x0f
    1480:	8f 85       	ldd	r24, Y+15	; 0x0f
    1482:	88 23       	and	r24, r24
    1484:	09 f0       	breq	.+2      	; 0x1488 <CLCD_voidSendNum+0x1b0>
    1486:	79 cf       	rjmp	.-270    	; 0x137a <CLCD_voidSendNum+0xa2>
    {
        CLCD_voidSendData(arr[i-1]);
        _delay_ms(1);
    }
    1488:	c9 58       	subi	r28, 0x89	; 137
    148a:	df 4f       	sbci	r29, 0xFF	; 255
    148c:	0f b6       	in	r0, 0x3f	; 63
    148e:	f8 94       	cli
    1490:	de bf       	out	0x3e, r29	; 62
    1492:	0f be       	out	0x3f, r0	; 63
    1494:	cd bf       	out	0x3d, r28	; 61
    1496:	cf 91       	pop	r28
    1498:	df 91       	pop	r29
    149a:	1f 91       	pop	r17
    149c:	0f 91       	pop	r16
    149e:	08 95       	ret

000014a0 <DIO_voidSetPortDirection>:
#include "BIT_MATH.h"
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

void DIO_voidSetPortDirection(u8 Copy_u8PortNum,u8 Copy_u8PortDirection){
    14a0:	df 93       	push	r29
    14a2:	cf 93       	push	r28
    14a4:	00 d0       	rcall	.+0      	; 0x14a6 <DIO_voidSetPortDirection+0x6>
    14a6:	00 d0       	rcall	.+0      	; 0x14a8 <DIO_voidSetPortDirection+0x8>
    14a8:	cd b7       	in	r28, 0x3d	; 61
    14aa:	de b7       	in	r29, 0x3e	; 62
    14ac:	89 83       	std	Y+1, r24	; 0x01
    14ae:	6a 83       	std	Y+2, r22	; 0x02
switch (Copy_u8PortNum)
    14b0:	89 81       	ldd	r24, Y+1	; 0x01
    14b2:	28 2f       	mov	r18, r24
    14b4:	30 e0       	ldi	r19, 0x00	; 0
    14b6:	3c 83       	std	Y+4, r19	; 0x04
    14b8:	2b 83       	std	Y+3, r18	; 0x03
    14ba:	8b 81       	ldd	r24, Y+3	; 0x03
    14bc:	9c 81       	ldd	r25, Y+4	; 0x04
    14be:	82 30       	cpi	r24, 0x02	; 2
    14c0:	91 05       	cpc	r25, r1
    14c2:	d9 f0       	breq	.+54     	; 0x14fa <DIO_voidSetPortDirection+0x5a>
    14c4:	2b 81       	ldd	r18, Y+3	; 0x03
    14c6:	3c 81       	ldd	r19, Y+4	; 0x04
    14c8:	23 30       	cpi	r18, 0x03	; 3
    14ca:	31 05       	cpc	r19, r1
    14cc:	34 f4       	brge	.+12     	; 0x14da <DIO_voidSetPortDirection+0x3a>
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	9c 81       	ldd	r25, Y+4	; 0x04
    14d2:	81 30       	cpi	r24, 0x01	; 1
    14d4:	91 05       	cpc	r25, r1
    14d6:	61 f0       	breq	.+24     	; 0x14f0 <DIO_voidSetPortDirection+0x50>
    14d8:	1e c0       	rjmp	.+60     	; 0x1516 <DIO_voidSetPortDirection+0x76>
    14da:	2b 81       	ldd	r18, Y+3	; 0x03
    14dc:	3c 81       	ldd	r19, Y+4	; 0x04
    14de:	23 30       	cpi	r18, 0x03	; 3
    14e0:	31 05       	cpc	r19, r1
    14e2:	81 f0       	breq	.+32     	; 0x1504 <DIO_voidSetPortDirection+0x64>
    14e4:	8b 81       	ldd	r24, Y+3	; 0x03
    14e6:	9c 81       	ldd	r25, Y+4	; 0x04
    14e8:	84 30       	cpi	r24, 0x04	; 4
    14ea:	91 05       	cpc	r25, r1
    14ec:	81 f0       	breq	.+32     	; 0x150e <DIO_voidSetPortDirection+0x6e>
    14ee:	13 c0       	rjmp	.+38     	; 0x1516 <DIO_voidSetPortDirection+0x76>
{
case PORT_u8A:
    DDRA=Copy_u8PortDirection;
    14f0:	ea e3       	ldi	r30, 0x3A	; 58
    14f2:	f0 e0       	ldi	r31, 0x00	; 0
    14f4:	8a 81       	ldd	r24, Y+2	; 0x02
    14f6:	80 83       	st	Z, r24
    14f8:	0e c0       	rjmp	.+28     	; 0x1516 <DIO_voidSetPortDirection+0x76>
    break;
case PORT_u8B:
    DDRB=Copy_u8PortDirection;
    14fa:	e7 e3       	ldi	r30, 0x37	; 55
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1500:	80 83       	st	Z, r24
    1502:	09 c0       	rjmp	.+18     	; 0x1516 <DIO_voidSetPortDirection+0x76>
    break;
case PORT_u8C:
    DDRC=Copy_u8PortDirection;
    1504:	e4 e3       	ldi	r30, 0x34	; 52
    1506:	f0 e0       	ldi	r31, 0x00	; 0
    1508:	8a 81       	ldd	r24, Y+2	; 0x02
    150a:	80 83       	st	Z, r24
    150c:	04 c0       	rjmp	.+8      	; 0x1516 <DIO_voidSetPortDirection+0x76>
    break;
case PORT_u8D:
    DDRD=Copy_u8PortDirection;
    150e:	e1 e3       	ldi	r30, 0x31	; 49
    1510:	f0 e0       	ldi	r31, 0x00	; 0
    1512:	8a 81       	ldd	r24, Y+2	; 0x02
    1514:	80 83       	st	Z, r24
    break;
default:
    break;
}
}
    1516:	0f 90       	pop	r0
    1518:	0f 90       	pop	r0
    151a:	0f 90       	pop	r0
    151c:	0f 90       	pop	r0
    151e:	cf 91       	pop	r28
    1520:	df 91       	pop	r29
    1522:	08 95       	ret

00001524 <DIO_voidSetPinDirection>:
void DIO_voidSetPinDirection(u8 Copy_u8PortNum,u8 Copy_u8PinNum,u8 Copy_u8PinDirection){
    1524:	df 93       	push	r29
    1526:	cf 93       	push	r28
    1528:	cd b7       	in	r28, 0x3d	; 61
    152a:	de b7       	in	r29, 0x3e	; 62
    152c:	27 97       	sbiw	r28, 0x07	; 7
    152e:	0f b6       	in	r0, 0x3f	; 63
    1530:	f8 94       	cli
    1532:	de bf       	out	0x3e, r29	; 62
    1534:	0f be       	out	0x3f, r0	; 63
    1536:	cd bf       	out	0x3d, r28	; 61
    1538:	89 83       	std	Y+1, r24	; 0x01
    153a:	6a 83       	std	Y+2, r22	; 0x02
    153c:	4b 83       	std	Y+3, r20	; 0x03
    if (Copy_u8PinDirection==PIN_OUT)
    153e:	8b 81       	ldd	r24, Y+3	; 0x03
    1540:	81 30       	cpi	r24, 0x01	; 1
    1542:	09 f0       	breq	.+2      	; 0x1546 <DIO_voidSetPinDirection+0x22>
    1544:	70 c0       	rjmp	.+224    	; 0x1626 <DIO_voidSetPinDirection+0x102>
    {
        switch (Copy_u8PortNum)
    1546:	89 81       	ldd	r24, Y+1	; 0x01
    1548:	28 2f       	mov	r18, r24
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	3f 83       	std	Y+7, r19	; 0x07
    154e:	2e 83       	std	Y+6, r18	; 0x06
    1550:	8e 81       	ldd	r24, Y+6	; 0x06
    1552:	9f 81       	ldd	r25, Y+7	; 0x07
    1554:	82 30       	cpi	r24, 0x02	; 2
    1556:	91 05       	cpc	r25, r1
    1558:	51 f1       	breq	.+84     	; 0x15ae <DIO_voidSetPinDirection+0x8a>
    155a:	2e 81       	ldd	r18, Y+6	; 0x06
    155c:	3f 81       	ldd	r19, Y+7	; 0x07
    155e:	23 30       	cpi	r18, 0x03	; 3
    1560:	31 05       	cpc	r19, r1
    1562:	34 f4       	brge	.+12     	; 0x1570 <DIO_voidSetPinDirection+0x4c>
    1564:	8e 81       	ldd	r24, Y+6	; 0x06
    1566:	9f 81       	ldd	r25, Y+7	; 0x07
    1568:	81 30       	cpi	r24, 0x01	; 1
    156a:	91 05       	cpc	r25, r1
    156c:	61 f0       	breq	.+24     	; 0x1586 <DIO_voidSetPinDirection+0x62>
    156e:	cf c0       	rjmp	.+414    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
    1570:	2e 81       	ldd	r18, Y+6	; 0x06
    1572:	3f 81       	ldd	r19, Y+7	; 0x07
    1574:	23 30       	cpi	r18, 0x03	; 3
    1576:	31 05       	cpc	r19, r1
    1578:	71 f1       	breq	.+92     	; 0x15d6 <DIO_voidSetPinDirection+0xb2>
    157a:	8e 81       	ldd	r24, Y+6	; 0x06
    157c:	9f 81       	ldd	r25, Y+7	; 0x07
    157e:	84 30       	cpi	r24, 0x04	; 4
    1580:	91 05       	cpc	r25, r1
    1582:	e9 f1       	breq	.+122    	; 0x15fe <DIO_voidSetPinDirection+0xda>
    1584:	c4 c0       	rjmp	.+392    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
        {
        case PORT_u8A:
            SET_BIT(DDRA,Copy_u8PinNum);
    1586:	aa e3       	ldi	r26, 0x3A	; 58
    1588:	b0 e0       	ldi	r27, 0x00	; 0
    158a:	ea e3       	ldi	r30, 0x3A	; 58
    158c:	f0 e0       	ldi	r31, 0x00	; 0
    158e:	80 81       	ld	r24, Z
    1590:	48 2f       	mov	r20, r24
    1592:	8a 81       	ldd	r24, Y+2	; 0x02
    1594:	28 2f       	mov	r18, r24
    1596:	30 e0       	ldi	r19, 0x00	; 0
    1598:	81 e0       	ldi	r24, 0x01	; 1
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	02 2e       	mov	r0, r18
    159e:	02 c0       	rjmp	.+4      	; 0x15a4 <DIO_voidSetPinDirection+0x80>
    15a0:	88 0f       	add	r24, r24
    15a2:	99 1f       	adc	r25, r25
    15a4:	0a 94       	dec	r0
    15a6:	e2 f7       	brpl	.-8      	; 0x15a0 <DIO_voidSetPinDirection+0x7c>
    15a8:	84 2b       	or	r24, r20
    15aa:	8c 93       	st	X, r24
    15ac:	b0 c0       	rjmp	.+352    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
            break;
        case PORT_u8B:
            SET_BIT(DDRB,Copy_u8PinNum);
    15ae:	a7 e3       	ldi	r26, 0x37	; 55
    15b0:	b0 e0       	ldi	r27, 0x00	; 0
    15b2:	e7 e3       	ldi	r30, 0x37	; 55
    15b4:	f0 e0       	ldi	r31, 0x00	; 0
    15b6:	80 81       	ld	r24, Z
    15b8:	48 2f       	mov	r20, r24
    15ba:	8a 81       	ldd	r24, Y+2	; 0x02
    15bc:	28 2f       	mov	r18, r24
    15be:	30 e0       	ldi	r19, 0x00	; 0
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	02 2e       	mov	r0, r18
    15c6:	02 c0       	rjmp	.+4      	; 0x15cc <DIO_voidSetPinDirection+0xa8>
    15c8:	88 0f       	add	r24, r24
    15ca:	99 1f       	adc	r25, r25
    15cc:	0a 94       	dec	r0
    15ce:	e2 f7       	brpl	.-8      	; 0x15c8 <DIO_voidSetPinDirection+0xa4>
    15d0:	84 2b       	or	r24, r20
    15d2:	8c 93       	st	X, r24
    15d4:	9c c0       	rjmp	.+312    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
            break;
        case PORT_u8C:
            SET_BIT(DDRC,Copy_u8PinNum);
    15d6:	a4 e3       	ldi	r26, 0x34	; 52
    15d8:	b0 e0       	ldi	r27, 0x00	; 0
    15da:	e4 e3       	ldi	r30, 0x34	; 52
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	80 81       	ld	r24, Z
    15e0:	48 2f       	mov	r20, r24
    15e2:	8a 81       	ldd	r24, Y+2	; 0x02
    15e4:	28 2f       	mov	r18, r24
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	02 2e       	mov	r0, r18
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <DIO_voidSetPinDirection+0xd0>
    15f0:	88 0f       	add	r24, r24
    15f2:	99 1f       	adc	r25, r25
    15f4:	0a 94       	dec	r0
    15f6:	e2 f7       	brpl	.-8      	; 0x15f0 <DIO_voidSetPinDirection+0xcc>
    15f8:	84 2b       	or	r24, r20
    15fa:	8c 93       	st	X, r24
    15fc:	88 c0       	rjmp	.+272    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
            break;
        case PORT_u8D:
            SET_BIT(DDRD,Copy_u8PinNum);
    15fe:	a1 e3       	ldi	r26, 0x31	; 49
    1600:	b0 e0       	ldi	r27, 0x00	; 0
    1602:	e1 e3       	ldi	r30, 0x31	; 49
    1604:	f0 e0       	ldi	r31, 0x00	; 0
    1606:	80 81       	ld	r24, Z
    1608:	48 2f       	mov	r20, r24
    160a:	8a 81       	ldd	r24, Y+2	; 0x02
    160c:	28 2f       	mov	r18, r24
    160e:	30 e0       	ldi	r19, 0x00	; 0
    1610:	81 e0       	ldi	r24, 0x01	; 1
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	02 2e       	mov	r0, r18
    1616:	02 c0       	rjmp	.+4      	; 0x161c <DIO_voidSetPinDirection+0xf8>
    1618:	88 0f       	add	r24, r24
    161a:	99 1f       	adc	r25, r25
    161c:	0a 94       	dec	r0
    161e:	e2 f7       	brpl	.-8      	; 0x1618 <DIO_voidSetPinDirection+0xf4>
    1620:	84 2b       	or	r24, r20
    1622:	8c 93       	st	X, r24
    1624:	74 c0       	rjmp	.+232    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
            break;
        default:
            break;
        }
    }else{
        switch (Copy_u8PortNum)
    1626:	89 81       	ldd	r24, Y+1	; 0x01
    1628:	28 2f       	mov	r18, r24
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	3d 83       	std	Y+5, r19	; 0x05
    162e:	2c 83       	std	Y+4, r18	; 0x04
    1630:	8c 81       	ldd	r24, Y+4	; 0x04
    1632:	9d 81       	ldd	r25, Y+5	; 0x05
    1634:	82 30       	cpi	r24, 0x02	; 2
    1636:	91 05       	cpc	r25, r1
    1638:	61 f1       	breq	.+88     	; 0x1692 <DIO_voidSetPinDirection+0x16e>
    163a:	2c 81       	ldd	r18, Y+4	; 0x04
    163c:	3d 81       	ldd	r19, Y+5	; 0x05
    163e:	23 30       	cpi	r18, 0x03	; 3
    1640:	31 05       	cpc	r19, r1
    1642:	34 f4       	brge	.+12     	; 0x1650 <DIO_voidSetPinDirection+0x12c>
    1644:	8c 81       	ldd	r24, Y+4	; 0x04
    1646:	9d 81       	ldd	r25, Y+5	; 0x05
    1648:	81 30       	cpi	r24, 0x01	; 1
    164a:	91 05       	cpc	r25, r1
    164c:	69 f0       	breq	.+26     	; 0x1668 <DIO_voidSetPinDirection+0x144>
    164e:	5f c0       	rjmp	.+190    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
    1650:	2c 81       	ldd	r18, Y+4	; 0x04
    1652:	3d 81       	ldd	r19, Y+5	; 0x05
    1654:	23 30       	cpi	r18, 0x03	; 3
    1656:	31 05       	cpc	r19, r1
    1658:	89 f1       	breq	.+98     	; 0x16bc <DIO_voidSetPinDirection+0x198>
    165a:	8c 81       	ldd	r24, Y+4	; 0x04
    165c:	9d 81       	ldd	r25, Y+5	; 0x05
    165e:	84 30       	cpi	r24, 0x04	; 4
    1660:	91 05       	cpc	r25, r1
    1662:	09 f4       	brne	.+2      	; 0x1666 <DIO_voidSetPinDirection+0x142>
    1664:	40 c0       	rjmp	.+128    	; 0x16e6 <DIO_voidSetPinDirection+0x1c2>
    1666:	53 c0       	rjmp	.+166    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
        {
        case PORT_u8A:
            CLR_BIT(DDRA,Copy_u8PinNum);
    1668:	aa e3       	ldi	r26, 0x3A	; 58
    166a:	b0 e0       	ldi	r27, 0x00	; 0
    166c:	ea e3       	ldi	r30, 0x3A	; 58
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	80 81       	ld	r24, Z
    1672:	48 2f       	mov	r20, r24
    1674:	8a 81       	ldd	r24, Y+2	; 0x02
    1676:	28 2f       	mov	r18, r24
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	81 e0       	ldi	r24, 0x01	; 1
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	02 2e       	mov	r0, r18
    1680:	02 c0       	rjmp	.+4      	; 0x1686 <DIO_voidSetPinDirection+0x162>
    1682:	88 0f       	add	r24, r24
    1684:	99 1f       	adc	r25, r25
    1686:	0a 94       	dec	r0
    1688:	e2 f7       	brpl	.-8      	; 0x1682 <DIO_voidSetPinDirection+0x15e>
    168a:	80 95       	com	r24
    168c:	84 23       	and	r24, r20
    168e:	8c 93       	st	X, r24
    1690:	3e c0       	rjmp	.+124    	; 0x170e <DIO_voidSetPinDirection+0x1ea>
            break;
        case PORT_u8B:
            CLR_BIT(DDRB,Copy_u8PinNum);
    1692:	a7 e3       	ldi	r26, 0x37	; 55
    1694:	b0 e0       	ldi	r27, 0x00	; 0
    1696:	e7 e3       	ldi	r30, 0x37	; 55
    1698:	f0 e0       	ldi	r31, 0x00	; 0
    169a:	80 81       	ld	r24, Z
    169c:	48 2f       	mov	r20, r24
    169e:	8a 81       	ldd	r24, Y+2	; 0x02
    16a0:	28 2f       	mov	r18, r24
    16a2:	30 e0       	ldi	r19, 0x00	; 0
    16a4:	81 e0       	ldi	r24, 0x01	; 1
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	02 2e       	mov	r0, r18
    16aa:	02 c0       	rjmp	.+4      	; 0x16b0 <DIO_voidSetPinDirection+0x18c>
    16ac:	88 0f       	add	r24, r24
    16ae:	99 1f       	adc	r25, r25
    16b0:	0a 94       	dec	r0
    16b2:	e2 f7       	brpl	.-8      	; 0x16ac <DIO_voidSetPinDirection+0x188>
    16b4:	80 95       	com	r24
    16b6:	84 23       	and	r24, r20
    16b8:	8c 93       	st	X, r24
    16ba:	29 c0       	rjmp	.+82     	; 0x170e <DIO_voidSetPinDirection+0x1ea>
            break;
        case PORT_u8C:
            CLR_BIT(DDRC,Copy_u8PinNum);
    16bc:	a4 e3       	ldi	r26, 0x34	; 52
    16be:	b0 e0       	ldi	r27, 0x00	; 0
    16c0:	e4 e3       	ldi	r30, 0x34	; 52
    16c2:	f0 e0       	ldi	r31, 0x00	; 0
    16c4:	80 81       	ld	r24, Z
    16c6:	48 2f       	mov	r20, r24
    16c8:	8a 81       	ldd	r24, Y+2	; 0x02
    16ca:	28 2f       	mov	r18, r24
    16cc:	30 e0       	ldi	r19, 0x00	; 0
    16ce:	81 e0       	ldi	r24, 0x01	; 1
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	02 2e       	mov	r0, r18
    16d4:	02 c0       	rjmp	.+4      	; 0x16da <DIO_voidSetPinDirection+0x1b6>
    16d6:	88 0f       	add	r24, r24
    16d8:	99 1f       	adc	r25, r25
    16da:	0a 94       	dec	r0
    16dc:	e2 f7       	brpl	.-8      	; 0x16d6 <DIO_voidSetPinDirection+0x1b2>
    16de:	80 95       	com	r24
    16e0:	84 23       	and	r24, r20
    16e2:	8c 93       	st	X, r24
    16e4:	14 c0       	rjmp	.+40     	; 0x170e <DIO_voidSetPinDirection+0x1ea>
            break;
        case PORT_u8D:
            CLR_BIT(DDRD,Copy_u8PinNum);
    16e6:	a1 e3       	ldi	r26, 0x31	; 49
    16e8:	b0 e0       	ldi	r27, 0x00	; 0
    16ea:	e1 e3       	ldi	r30, 0x31	; 49
    16ec:	f0 e0       	ldi	r31, 0x00	; 0
    16ee:	80 81       	ld	r24, Z
    16f0:	48 2f       	mov	r20, r24
    16f2:	8a 81       	ldd	r24, Y+2	; 0x02
    16f4:	28 2f       	mov	r18, r24
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	81 e0       	ldi	r24, 0x01	; 1
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	02 2e       	mov	r0, r18
    16fe:	02 c0       	rjmp	.+4      	; 0x1704 <DIO_voidSetPinDirection+0x1e0>
    1700:	88 0f       	add	r24, r24
    1702:	99 1f       	adc	r25, r25
    1704:	0a 94       	dec	r0
    1706:	e2 f7       	brpl	.-8      	; 0x1700 <DIO_voidSetPinDirection+0x1dc>
    1708:	80 95       	com	r24
    170a:	84 23       	and	r24, r20
    170c:	8c 93       	st	X, r24
        default:
            break;
        }
    }
    
}
    170e:	27 96       	adiw	r28, 0x07	; 7
    1710:	0f b6       	in	r0, 0x3f	; 63
    1712:	f8 94       	cli
    1714:	de bf       	out	0x3e, r29	; 62
    1716:	0f be       	out	0x3f, r0	; 63
    1718:	cd bf       	out	0x3d, r28	; 61
    171a:	cf 91       	pop	r28
    171c:	df 91       	pop	r29
    171e:	08 95       	ret

00001720 <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(u8 Copy_u8PortNum,u8 Copy_u8PortValue){
    1720:	df 93       	push	r29
    1722:	cf 93       	push	r28
    1724:	00 d0       	rcall	.+0      	; 0x1726 <DIO_voidSetPortValue+0x6>
    1726:	00 d0       	rcall	.+0      	; 0x1728 <DIO_voidSetPortValue+0x8>
    1728:	cd b7       	in	r28, 0x3d	; 61
    172a:	de b7       	in	r29, 0x3e	; 62
    172c:	89 83       	std	Y+1, r24	; 0x01
    172e:	6a 83       	std	Y+2, r22	; 0x02
switch (Copy_u8PortNum)
    1730:	89 81       	ldd	r24, Y+1	; 0x01
    1732:	28 2f       	mov	r18, r24
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	3c 83       	std	Y+4, r19	; 0x04
    1738:	2b 83       	std	Y+3, r18	; 0x03
    173a:	8b 81       	ldd	r24, Y+3	; 0x03
    173c:	9c 81       	ldd	r25, Y+4	; 0x04
    173e:	82 30       	cpi	r24, 0x02	; 2
    1740:	91 05       	cpc	r25, r1
    1742:	d9 f0       	breq	.+54     	; 0x177a <DIO_voidSetPortValue+0x5a>
    1744:	2b 81       	ldd	r18, Y+3	; 0x03
    1746:	3c 81       	ldd	r19, Y+4	; 0x04
    1748:	23 30       	cpi	r18, 0x03	; 3
    174a:	31 05       	cpc	r19, r1
    174c:	34 f4       	brge	.+12     	; 0x175a <DIO_voidSetPortValue+0x3a>
    174e:	8b 81       	ldd	r24, Y+3	; 0x03
    1750:	9c 81       	ldd	r25, Y+4	; 0x04
    1752:	81 30       	cpi	r24, 0x01	; 1
    1754:	91 05       	cpc	r25, r1
    1756:	61 f0       	breq	.+24     	; 0x1770 <DIO_voidSetPortValue+0x50>
    1758:	1e c0       	rjmp	.+60     	; 0x1796 <DIO_voidSetPortValue+0x76>
    175a:	2b 81       	ldd	r18, Y+3	; 0x03
    175c:	3c 81       	ldd	r19, Y+4	; 0x04
    175e:	23 30       	cpi	r18, 0x03	; 3
    1760:	31 05       	cpc	r19, r1
    1762:	81 f0       	breq	.+32     	; 0x1784 <DIO_voidSetPortValue+0x64>
    1764:	8b 81       	ldd	r24, Y+3	; 0x03
    1766:	9c 81       	ldd	r25, Y+4	; 0x04
    1768:	84 30       	cpi	r24, 0x04	; 4
    176a:	91 05       	cpc	r25, r1
    176c:	81 f0       	breq	.+32     	; 0x178e <DIO_voidSetPortValue+0x6e>
    176e:	13 c0       	rjmp	.+38     	; 0x1796 <DIO_voidSetPortValue+0x76>
{
case PORT_u8A:
    PORTA=Copy_u8PortValue;
    1770:	eb e3       	ldi	r30, 0x3B	; 59
    1772:	f0 e0       	ldi	r31, 0x00	; 0
    1774:	8a 81       	ldd	r24, Y+2	; 0x02
    1776:	80 83       	st	Z, r24
    1778:	0e c0       	rjmp	.+28     	; 0x1796 <DIO_voidSetPortValue+0x76>
    break;
case PORT_u8B:
    PORTB=Copy_u8PortValue;
    177a:	e8 e3       	ldi	r30, 0x38	; 56
    177c:	f0 e0       	ldi	r31, 0x00	; 0
    177e:	8a 81       	ldd	r24, Y+2	; 0x02
    1780:	80 83       	st	Z, r24
    1782:	09 c0       	rjmp	.+18     	; 0x1796 <DIO_voidSetPortValue+0x76>
    break;
case PORT_u8C:
    PORTC=Copy_u8PortValue;
    1784:	e5 e3       	ldi	r30, 0x35	; 53
    1786:	f0 e0       	ldi	r31, 0x00	; 0
    1788:	8a 81       	ldd	r24, Y+2	; 0x02
    178a:	80 83       	st	Z, r24
    178c:	04 c0       	rjmp	.+8      	; 0x1796 <DIO_voidSetPortValue+0x76>
    break;
case PORT_u8D:
    PORTD=Copy_u8PortValue;
    178e:	e2 e3       	ldi	r30, 0x32	; 50
    1790:	f0 e0       	ldi	r31, 0x00	; 0
    1792:	8a 81       	ldd	r24, Y+2	; 0x02
    1794:	80 83       	st	Z, r24
    break;
default:
    break;
}
}
    1796:	0f 90       	pop	r0
    1798:	0f 90       	pop	r0
    179a:	0f 90       	pop	r0
    179c:	0f 90       	pop	r0
    179e:	cf 91       	pop	r28
    17a0:	df 91       	pop	r29
    17a2:	08 95       	ret

000017a4 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Copy_u8PortNum,u8 Copy_u8PinNum,u8 Copy_u8PinValue){
    17a4:	df 93       	push	r29
    17a6:	cf 93       	push	r28
    17a8:	cd b7       	in	r28, 0x3d	; 61
    17aa:	de b7       	in	r29, 0x3e	; 62
    17ac:	27 97       	sbiw	r28, 0x07	; 7
    17ae:	0f b6       	in	r0, 0x3f	; 63
    17b0:	f8 94       	cli
    17b2:	de bf       	out	0x3e, r29	; 62
    17b4:	0f be       	out	0x3f, r0	; 63
    17b6:	cd bf       	out	0x3d, r28	; 61
    17b8:	89 83       	std	Y+1, r24	; 0x01
    17ba:	6a 83       	std	Y+2, r22	; 0x02
    17bc:	4b 83       	std	Y+3, r20	; 0x03
    if (Copy_u8PinValue==PIN_HIGH)
    17be:	8b 81       	ldd	r24, Y+3	; 0x03
    17c0:	81 30       	cpi	r24, 0x01	; 1
    17c2:	09 f0       	breq	.+2      	; 0x17c6 <DIO_voidSetPinValue+0x22>
    17c4:	70 c0       	rjmp	.+224    	; 0x18a6 <DIO_voidSetPinValue+0x102>
    {
        switch (Copy_u8PortNum)
    17c6:	89 81       	ldd	r24, Y+1	; 0x01
    17c8:	28 2f       	mov	r18, r24
    17ca:	30 e0       	ldi	r19, 0x00	; 0
    17cc:	3f 83       	std	Y+7, r19	; 0x07
    17ce:	2e 83       	std	Y+6, r18	; 0x06
    17d0:	8e 81       	ldd	r24, Y+6	; 0x06
    17d2:	9f 81       	ldd	r25, Y+7	; 0x07
    17d4:	82 30       	cpi	r24, 0x02	; 2
    17d6:	91 05       	cpc	r25, r1
    17d8:	51 f1       	breq	.+84     	; 0x182e <DIO_voidSetPinValue+0x8a>
    17da:	2e 81       	ldd	r18, Y+6	; 0x06
    17dc:	3f 81       	ldd	r19, Y+7	; 0x07
    17de:	23 30       	cpi	r18, 0x03	; 3
    17e0:	31 05       	cpc	r19, r1
    17e2:	34 f4       	brge	.+12     	; 0x17f0 <DIO_voidSetPinValue+0x4c>
    17e4:	8e 81       	ldd	r24, Y+6	; 0x06
    17e6:	9f 81       	ldd	r25, Y+7	; 0x07
    17e8:	81 30       	cpi	r24, 0x01	; 1
    17ea:	91 05       	cpc	r25, r1
    17ec:	61 f0       	breq	.+24     	; 0x1806 <DIO_voidSetPinValue+0x62>
    17ee:	cf c0       	rjmp	.+414    	; 0x198e <DIO_voidSetPinValue+0x1ea>
    17f0:	2e 81       	ldd	r18, Y+6	; 0x06
    17f2:	3f 81       	ldd	r19, Y+7	; 0x07
    17f4:	23 30       	cpi	r18, 0x03	; 3
    17f6:	31 05       	cpc	r19, r1
    17f8:	71 f1       	breq	.+92     	; 0x1856 <DIO_voidSetPinValue+0xb2>
    17fa:	8e 81       	ldd	r24, Y+6	; 0x06
    17fc:	9f 81       	ldd	r25, Y+7	; 0x07
    17fe:	84 30       	cpi	r24, 0x04	; 4
    1800:	91 05       	cpc	r25, r1
    1802:	e9 f1       	breq	.+122    	; 0x187e <DIO_voidSetPinValue+0xda>
    1804:	c4 c0       	rjmp	.+392    	; 0x198e <DIO_voidSetPinValue+0x1ea>
        {
        case PORT_u8A:
            SET_BIT(PORTA,Copy_u8PinNum);
    1806:	ab e3       	ldi	r26, 0x3B	; 59
    1808:	b0 e0       	ldi	r27, 0x00	; 0
    180a:	eb e3       	ldi	r30, 0x3B	; 59
    180c:	f0 e0       	ldi	r31, 0x00	; 0
    180e:	80 81       	ld	r24, Z
    1810:	48 2f       	mov	r20, r24
    1812:	8a 81       	ldd	r24, Y+2	; 0x02
    1814:	28 2f       	mov	r18, r24
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	81 e0       	ldi	r24, 0x01	; 1
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	02 2e       	mov	r0, r18
    181e:	02 c0       	rjmp	.+4      	; 0x1824 <DIO_voidSetPinValue+0x80>
    1820:	88 0f       	add	r24, r24
    1822:	99 1f       	adc	r25, r25
    1824:	0a 94       	dec	r0
    1826:	e2 f7       	brpl	.-8      	; 0x1820 <DIO_voidSetPinValue+0x7c>
    1828:	84 2b       	or	r24, r20
    182a:	8c 93       	st	X, r24
    182c:	b0 c0       	rjmp	.+352    	; 0x198e <DIO_voidSetPinValue+0x1ea>
            break;
        case PORT_u8B:
            SET_BIT(PORTB,Copy_u8PinNum);
    182e:	a8 e3       	ldi	r26, 0x38	; 56
    1830:	b0 e0       	ldi	r27, 0x00	; 0
    1832:	e8 e3       	ldi	r30, 0x38	; 56
    1834:	f0 e0       	ldi	r31, 0x00	; 0
    1836:	80 81       	ld	r24, Z
    1838:	48 2f       	mov	r20, r24
    183a:	8a 81       	ldd	r24, Y+2	; 0x02
    183c:	28 2f       	mov	r18, r24
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	81 e0       	ldi	r24, 0x01	; 1
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	02 2e       	mov	r0, r18
    1846:	02 c0       	rjmp	.+4      	; 0x184c <DIO_voidSetPinValue+0xa8>
    1848:	88 0f       	add	r24, r24
    184a:	99 1f       	adc	r25, r25
    184c:	0a 94       	dec	r0
    184e:	e2 f7       	brpl	.-8      	; 0x1848 <DIO_voidSetPinValue+0xa4>
    1850:	84 2b       	or	r24, r20
    1852:	8c 93       	st	X, r24
    1854:	9c c0       	rjmp	.+312    	; 0x198e <DIO_voidSetPinValue+0x1ea>
            break;
        case PORT_u8C:
            SET_BIT(PORTC,Copy_u8PinNum);
    1856:	a5 e3       	ldi	r26, 0x35	; 53
    1858:	b0 e0       	ldi	r27, 0x00	; 0
    185a:	e5 e3       	ldi	r30, 0x35	; 53
    185c:	f0 e0       	ldi	r31, 0x00	; 0
    185e:	80 81       	ld	r24, Z
    1860:	48 2f       	mov	r20, r24
    1862:	8a 81       	ldd	r24, Y+2	; 0x02
    1864:	28 2f       	mov	r18, r24
    1866:	30 e0       	ldi	r19, 0x00	; 0
    1868:	81 e0       	ldi	r24, 0x01	; 1
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	02 2e       	mov	r0, r18
    186e:	02 c0       	rjmp	.+4      	; 0x1874 <DIO_voidSetPinValue+0xd0>
    1870:	88 0f       	add	r24, r24
    1872:	99 1f       	adc	r25, r25
    1874:	0a 94       	dec	r0
    1876:	e2 f7       	brpl	.-8      	; 0x1870 <DIO_voidSetPinValue+0xcc>
    1878:	84 2b       	or	r24, r20
    187a:	8c 93       	st	X, r24
    187c:	88 c0       	rjmp	.+272    	; 0x198e <DIO_voidSetPinValue+0x1ea>
            break;
        case PORT_u8D:
            SET_BIT(PORTD,Copy_u8PinNum);
    187e:	a2 e3       	ldi	r26, 0x32	; 50
    1880:	b0 e0       	ldi	r27, 0x00	; 0
    1882:	e2 e3       	ldi	r30, 0x32	; 50
    1884:	f0 e0       	ldi	r31, 0x00	; 0
    1886:	80 81       	ld	r24, Z
    1888:	48 2f       	mov	r20, r24
    188a:	8a 81       	ldd	r24, Y+2	; 0x02
    188c:	28 2f       	mov	r18, r24
    188e:	30 e0       	ldi	r19, 0x00	; 0
    1890:	81 e0       	ldi	r24, 0x01	; 1
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	02 2e       	mov	r0, r18
    1896:	02 c0       	rjmp	.+4      	; 0x189c <DIO_voidSetPinValue+0xf8>
    1898:	88 0f       	add	r24, r24
    189a:	99 1f       	adc	r25, r25
    189c:	0a 94       	dec	r0
    189e:	e2 f7       	brpl	.-8      	; 0x1898 <DIO_voidSetPinValue+0xf4>
    18a0:	84 2b       	or	r24, r20
    18a2:	8c 93       	st	X, r24
    18a4:	74 c0       	rjmp	.+232    	; 0x198e <DIO_voidSetPinValue+0x1ea>
            break;
        default:
            break;
        }
    }else{
        switch (Copy_u8PortNum)
    18a6:	89 81       	ldd	r24, Y+1	; 0x01
    18a8:	28 2f       	mov	r18, r24
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	3d 83       	std	Y+5, r19	; 0x05
    18ae:	2c 83       	std	Y+4, r18	; 0x04
    18b0:	8c 81       	ldd	r24, Y+4	; 0x04
    18b2:	9d 81       	ldd	r25, Y+5	; 0x05
    18b4:	82 30       	cpi	r24, 0x02	; 2
    18b6:	91 05       	cpc	r25, r1
    18b8:	61 f1       	breq	.+88     	; 0x1912 <DIO_voidSetPinValue+0x16e>
    18ba:	2c 81       	ldd	r18, Y+4	; 0x04
    18bc:	3d 81       	ldd	r19, Y+5	; 0x05
    18be:	23 30       	cpi	r18, 0x03	; 3
    18c0:	31 05       	cpc	r19, r1
    18c2:	34 f4       	brge	.+12     	; 0x18d0 <DIO_voidSetPinValue+0x12c>
    18c4:	8c 81       	ldd	r24, Y+4	; 0x04
    18c6:	9d 81       	ldd	r25, Y+5	; 0x05
    18c8:	81 30       	cpi	r24, 0x01	; 1
    18ca:	91 05       	cpc	r25, r1
    18cc:	69 f0       	breq	.+26     	; 0x18e8 <DIO_voidSetPinValue+0x144>
    18ce:	5f c0       	rjmp	.+190    	; 0x198e <DIO_voidSetPinValue+0x1ea>
    18d0:	2c 81       	ldd	r18, Y+4	; 0x04
    18d2:	3d 81       	ldd	r19, Y+5	; 0x05
    18d4:	23 30       	cpi	r18, 0x03	; 3
    18d6:	31 05       	cpc	r19, r1
    18d8:	89 f1       	breq	.+98     	; 0x193c <DIO_voidSetPinValue+0x198>
    18da:	8c 81       	ldd	r24, Y+4	; 0x04
    18dc:	9d 81       	ldd	r25, Y+5	; 0x05
    18de:	84 30       	cpi	r24, 0x04	; 4
    18e0:	91 05       	cpc	r25, r1
    18e2:	09 f4       	brne	.+2      	; 0x18e6 <DIO_voidSetPinValue+0x142>
    18e4:	40 c0       	rjmp	.+128    	; 0x1966 <DIO_voidSetPinValue+0x1c2>
    18e6:	53 c0       	rjmp	.+166    	; 0x198e <DIO_voidSetPinValue+0x1ea>
        {
        case PORT_u8A:
            CLR_BIT(PORTA,Copy_u8PinNum);
    18e8:	ab e3       	ldi	r26, 0x3B	; 59
    18ea:	b0 e0       	ldi	r27, 0x00	; 0
    18ec:	eb e3       	ldi	r30, 0x3B	; 59
    18ee:	f0 e0       	ldi	r31, 0x00	; 0
    18f0:	80 81       	ld	r24, Z
    18f2:	48 2f       	mov	r20, r24
    18f4:	8a 81       	ldd	r24, Y+2	; 0x02
    18f6:	28 2f       	mov	r18, r24
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	81 e0       	ldi	r24, 0x01	; 1
    18fc:	90 e0       	ldi	r25, 0x00	; 0
    18fe:	02 2e       	mov	r0, r18
    1900:	02 c0       	rjmp	.+4      	; 0x1906 <DIO_voidSetPinValue+0x162>
    1902:	88 0f       	add	r24, r24
    1904:	99 1f       	adc	r25, r25
    1906:	0a 94       	dec	r0
    1908:	e2 f7       	brpl	.-8      	; 0x1902 <DIO_voidSetPinValue+0x15e>
    190a:	80 95       	com	r24
    190c:	84 23       	and	r24, r20
    190e:	8c 93       	st	X, r24
    1910:	3e c0       	rjmp	.+124    	; 0x198e <DIO_voidSetPinValue+0x1ea>
            break;
        case PORT_u8B:
            CLR_BIT(PORTB,Copy_u8PinNum);
    1912:	a8 e3       	ldi	r26, 0x38	; 56
    1914:	b0 e0       	ldi	r27, 0x00	; 0
    1916:	e8 e3       	ldi	r30, 0x38	; 56
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	80 81       	ld	r24, Z
    191c:	48 2f       	mov	r20, r24
    191e:	8a 81       	ldd	r24, Y+2	; 0x02
    1920:	28 2f       	mov	r18, r24
    1922:	30 e0       	ldi	r19, 0x00	; 0
    1924:	81 e0       	ldi	r24, 0x01	; 1
    1926:	90 e0       	ldi	r25, 0x00	; 0
    1928:	02 2e       	mov	r0, r18
    192a:	02 c0       	rjmp	.+4      	; 0x1930 <DIO_voidSetPinValue+0x18c>
    192c:	88 0f       	add	r24, r24
    192e:	99 1f       	adc	r25, r25
    1930:	0a 94       	dec	r0
    1932:	e2 f7       	brpl	.-8      	; 0x192c <DIO_voidSetPinValue+0x188>
    1934:	80 95       	com	r24
    1936:	84 23       	and	r24, r20
    1938:	8c 93       	st	X, r24
    193a:	29 c0       	rjmp	.+82     	; 0x198e <DIO_voidSetPinValue+0x1ea>
            break;
        case PORT_u8C:
            CLR_BIT(PORTC,Copy_u8PinNum);
    193c:	a5 e3       	ldi	r26, 0x35	; 53
    193e:	b0 e0       	ldi	r27, 0x00	; 0
    1940:	e5 e3       	ldi	r30, 0x35	; 53
    1942:	f0 e0       	ldi	r31, 0x00	; 0
    1944:	80 81       	ld	r24, Z
    1946:	48 2f       	mov	r20, r24
    1948:	8a 81       	ldd	r24, Y+2	; 0x02
    194a:	28 2f       	mov	r18, r24
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	02 2e       	mov	r0, r18
    1954:	02 c0       	rjmp	.+4      	; 0x195a <DIO_voidSetPinValue+0x1b6>
    1956:	88 0f       	add	r24, r24
    1958:	99 1f       	adc	r25, r25
    195a:	0a 94       	dec	r0
    195c:	e2 f7       	brpl	.-8      	; 0x1956 <DIO_voidSetPinValue+0x1b2>
    195e:	80 95       	com	r24
    1960:	84 23       	and	r24, r20
    1962:	8c 93       	st	X, r24
    1964:	14 c0       	rjmp	.+40     	; 0x198e <DIO_voidSetPinValue+0x1ea>
            break;
        case PORT_u8D:
            CLR_BIT(PORTD,Copy_u8PinNum);
    1966:	a2 e3       	ldi	r26, 0x32	; 50
    1968:	b0 e0       	ldi	r27, 0x00	; 0
    196a:	e2 e3       	ldi	r30, 0x32	; 50
    196c:	f0 e0       	ldi	r31, 0x00	; 0
    196e:	80 81       	ld	r24, Z
    1970:	48 2f       	mov	r20, r24
    1972:	8a 81       	ldd	r24, Y+2	; 0x02
    1974:	28 2f       	mov	r18, r24
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	81 e0       	ldi	r24, 0x01	; 1
    197a:	90 e0       	ldi	r25, 0x00	; 0
    197c:	02 2e       	mov	r0, r18
    197e:	02 c0       	rjmp	.+4      	; 0x1984 <DIO_voidSetPinValue+0x1e0>
    1980:	88 0f       	add	r24, r24
    1982:	99 1f       	adc	r25, r25
    1984:	0a 94       	dec	r0
    1986:	e2 f7       	brpl	.-8      	; 0x1980 <DIO_voidSetPinValue+0x1dc>
    1988:	80 95       	com	r24
    198a:	84 23       	and	r24, r20
    198c:	8c 93       	st	X, r24
            break;
        default:
            break;
        }
    }
}
    198e:	27 96       	adiw	r28, 0x07	; 7
    1990:	0f b6       	in	r0, 0x3f	; 63
    1992:	f8 94       	cli
    1994:	de bf       	out	0x3e, r29	; 62
    1996:	0f be       	out	0x3f, r0	; 63
    1998:	cd bf       	out	0x3d, r28	; 61
    199a:	cf 91       	pop	r28
    199c:	df 91       	pop	r29
    199e:	08 95       	ret

000019a0 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8PortNum,u8 Copy_u8PinNum){
    19a0:	df 93       	push	r29
    19a2:	cf 93       	push	r28
    19a4:	00 d0       	rcall	.+0      	; 0x19a6 <DIO_u8GetPinValue+0x6>
    19a6:	00 d0       	rcall	.+0      	; 0x19a8 <DIO_u8GetPinValue+0x8>
    19a8:	0f 92       	push	r0
    19aa:	cd b7       	in	r28, 0x3d	; 61
    19ac:	de b7       	in	r29, 0x3e	; 62
    19ae:	8a 83       	std	Y+2, r24	; 0x02
    19b0:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8PinState=0;
    19b2:	19 82       	std	Y+1, r1	; 0x01
        switch (Copy_u8PortNum)
    19b4:	8a 81       	ldd	r24, Y+2	; 0x02
    19b6:	28 2f       	mov	r18, r24
    19b8:	30 e0       	ldi	r19, 0x00	; 0
    19ba:	3d 83       	std	Y+5, r19	; 0x05
    19bc:	2c 83       	std	Y+4, r18	; 0x04
    19be:	4c 81       	ldd	r20, Y+4	; 0x04
    19c0:	5d 81       	ldd	r21, Y+5	; 0x05
    19c2:	42 30       	cpi	r20, 0x02	; 2
    19c4:	51 05       	cpc	r21, r1
    19c6:	41 f1       	breq	.+80     	; 0x1a18 <DIO_u8GetPinValue+0x78>
    19c8:	8c 81       	ldd	r24, Y+4	; 0x04
    19ca:	9d 81       	ldd	r25, Y+5	; 0x05
    19cc:	83 30       	cpi	r24, 0x03	; 3
    19ce:	91 05       	cpc	r25, r1
    19d0:	34 f4       	brge	.+12     	; 0x19de <DIO_u8GetPinValue+0x3e>
    19d2:	2c 81       	ldd	r18, Y+4	; 0x04
    19d4:	3d 81       	ldd	r19, Y+5	; 0x05
    19d6:	21 30       	cpi	r18, 0x01	; 1
    19d8:	31 05       	cpc	r19, r1
    19da:	61 f0       	breq	.+24     	; 0x19f4 <DIO_u8GetPinValue+0x54>
    19dc:	52 c0       	rjmp	.+164    	; 0x1a82 <DIO_u8GetPinValue+0xe2>
    19de:	4c 81       	ldd	r20, Y+4	; 0x04
    19e0:	5d 81       	ldd	r21, Y+5	; 0x05
    19e2:	43 30       	cpi	r20, 0x03	; 3
    19e4:	51 05       	cpc	r21, r1
    19e6:	51 f1       	breq	.+84     	; 0x1a3c <DIO_u8GetPinValue+0x9c>
    19e8:	8c 81       	ldd	r24, Y+4	; 0x04
    19ea:	9d 81       	ldd	r25, Y+5	; 0x05
    19ec:	84 30       	cpi	r24, 0x04	; 4
    19ee:	91 05       	cpc	r25, r1
    19f0:	b9 f1       	breq	.+110    	; 0x1a60 <DIO_u8GetPinValue+0xc0>
    19f2:	47 c0       	rjmp	.+142    	; 0x1a82 <DIO_u8GetPinValue+0xe2>
        {
        case PORT_u8A:
            Local_u8PinState=GET_BIT(PINA,Copy_u8PinNum);
    19f4:	e9 e3       	ldi	r30, 0x39	; 57
    19f6:	f0 e0       	ldi	r31, 0x00	; 0
    19f8:	80 81       	ld	r24, Z
    19fa:	28 2f       	mov	r18, r24
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1a00:	88 2f       	mov	r24, r24
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	a9 01       	movw	r20, r18
    1a06:	02 c0       	rjmp	.+4      	; 0x1a0c <DIO_u8GetPinValue+0x6c>
    1a08:	55 95       	asr	r21
    1a0a:	47 95       	ror	r20
    1a0c:	8a 95       	dec	r24
    1a0e:	e2 f7       	brpl	.-8      	; 0x1a08 <DIO_u8GetPinValue+0x68>
    1a10:	ca 01       	movw	r24, r20
    1a12:	81 70       	andi	r24, 0x01	; 1
    1a14:	89 83       	std	Y+1, r24	; 0x01
    1a16:	35 c0       	rjmp	.+106    	; 0x1a82 <DIO_u8GetPinValue+0xe2>
            break;
        case PORT_u8B:
            Local_u8PinState=GET_BIT(PINB,Copy_u8PinNum);
    1a18:	e6 e3       	ldi	r30, 0x36	; 54
    1a1a:	f0 e0       	ldi	r31, 0x00	; 0
    1a1c:	80 81       	ld	r24, Z
    1a1e:	28 2f       	mov	r18, r24
    1a20:	30 e0       	ldi	r19, 0x00	; 0
    1a22:	8b 81       	ldd	r24, Y+3	; 0x03
    1a24:	88 2f       	mov	r24, r24
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	a9 01       	movw	r20, r18
    1a2a:	02 c0       	rjmp	.+4      	; 0x1a30 <DIO_u8GetPinValue+0x90>
    1a2c:	55 95       	asr	r21
    1a2e:	47 95       	ror	r20
    1a30:	8a 95       	dec	r24
    1a32:	e2 f7       	brpl	.-8      	; 0x1a2c <DIO_u8GetPinValue+0x8c>
    1a34:	ca 01       	movw	r24, r20
    1a36:	81 70       	andi	r24, 0x01	; 1
    1a38:	89 83       	std	Y+1, r24	; 0x01
    1a3a:	23 c0       	rjmp	.+70     	; 0x1a82 <DIO_u8GetPinValue+0xe2>
            break;
        case PORT_u8C:
            Local_u8PinState=GET_BIT(PINC,Copy_u8PinNum);
    1a3c:	e3 e3       	ldi	r30, 0x33	; 51
    1a3e:	f0 e0       	ldi	r31, 0x00	; 0
    1a40:	80 81       	ld	r24, Z
    1a42:	28 2f       	mov	r18, r24
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	8b 81       	ldd	r24, Y+3	; 0x03
    1a48:	88 2f       	mov	r24, r24
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	a9 01       	movw	r20, r18
    1a4e:	02 c0       	rjmp	.+4      	; 0x1a54 <DIO_u8GetPinValue+0xb4>
    1a50:	55 95       	asr	r21
    1a52:	47 95       	ror	r20
    1a54:	8a 95       	dec	r24
    1a56:	e2 f7       	brpl	.-8      	; 0x1a50 <DIO_u8GetPinValue+0xb0>
    1a58:	ca 01       	movw	r24, r20
    1a5a:	81 70       	andi	r24, 0x01	; 1
    1a5c:	89 83       	std	Y+1, r24	; 0x01
    1a5e:	11 c0       	rjmp	.+34     	; 0x1a82 <DIO_u8GetPinValue+0xe2>
            break;
        case PORT_u8D:
            Local_u8PinState=GET_BIT(PIND,Copy_u8PinNum);
    1a60:	e0 e3       	ldi	r30, 0x30	; 48
    1a62:	f0 e0       	ldi	r31, 0x00	; 0
    1a64:	80 81       	ld	r24, Z
    1a66:	28 2f       	mov	r18, r24
    1a68:	30 e0       	ldi	r19, 0x00	; 0
    1a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a6c:	88 2f       	mov	r24, r24
    1a6e:	90 e0       	ldi	r25, 0x00	; 0
    1a70:	a9 01       	movw	r20, r18
    1a72:	02 c0       	rjmp	.+4      	; 0x1a78 <DIO_u8GetPinValue+0xd8>
    1a74:	55 95       	asr	r21
    1a76:	47 95       	ror	r20
    1a78:	8a 95       	dec	r24
    1a7a:	e2 f7       	brpl	.-8      	; 0x1a74 <DIO_u8GetPinValue+0xd4>
    1a7c:	ca 01       	movw	r24, r20
    1a7e:	81 70       	andi	r24, 0x01	; 1
    1a80:	89 83       	std	Y+1, r24	; 0x01
            break;
        default:
            break;
        }
    return Local_u8PinState;
    1a82:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a84:	0f 90       	pop	r0
    1a86:	0f 90       	pop	r0
    1a88:	0f 90       	pop	r0
    1a8a:	0f 90       	pop	r0
    1a8c:	0f 90       	pop	r0
    1a8e:	cf 91       	pop	r28
    1a90:	df 91       	pop	r29
    1a92:	08 95       	ret

00001a94 <DIO_voidTogglePinValue>:

void DIO_voidTogglePinValue(u8 Copy_u8PortNum,u8 Copy_u8PinNum){
    1a94:	df 93       	push	r29
    1a96:	cf 93       	push	r28
    1a98:	00 d0       	rcall	.+0      	; 0x1a9a <DIO_voidTogglePinValue+0x6>
    1a9a:	cd b7       	in	r28, 0x3d	; 61
    1a9c:	de b7       	in	r29, 0x3e	; 62
    1a9e:	89 83       	std	Y+1, r24	; 0x01
    1aa0:	6a 83       	std	Y+2, r22	; 0x02
    if(DIO_u8GetPinValue(Copy_u8PortNum,Copy_u8PinNum)==0){
    1aa2:	89 81       	ldd	r24, Y+1	; 0x01
    1aa4:	6a 81       	ldd	r22, Y+2	; 0x02
    1aa6:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <DIO_u8GetPinValue>
    1aaa:	88 23       	and	r24, r24
    1aac:	31 f4       	brne	.+12     	; 0x1aba <DIO_voidTogglePinValue+0x26>
         DIO_voidSetPinValue(Copy_u8PortNum,Copy_u8PinNum,PIN_HIGH);
    1aae:	89 81       	ldd	r24, Y+1	; 0x01
    1ab0:	6a 81       	ldd	r22, Y+2	; 0x02
    1ab2:	41 e0       	ldi	r20, 0x01	; 1
    1ab4:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
    1ab8:	0b c0       	rjmp	.+22     	; 0x1ad0 <DIO_voidTogglePinValue+0x3c>
    }else if(DIO_u8GetPinValue(Copy_u8PortNum,Copy_u8PinNum)==1){
    1aba:	89 81       	ldd	r24, Y+1	; 0x01
    1abc:	6a 81       	ldd	r22, Y+2	; 0x02
    1abe:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <DIO_u8GetPinValue>
    1ac2:	81 30       	cpi	r24, 0x01	; 1
    1ac4:	29 f4       	brne	.+10     	; 0x1ad0 <DIO_voidTogglePinValue+0x3c>
        DIO_voidSetPinValue(Copy_u8PortNum,Copy_u8PinNum,PIN_LOW);
    1ac6:	89 81       	ldd	r24, Y+1	; 0x01
    1ac8:	6a 81       	ldd	r22, Y+2	; 0x02
    1aca:	40 e0       	ldi	r20, 0x00	; 0
    1acc:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
    }
}
    1ad0:	0f 90       	pop	r0
    1ad2:	0f 90       	pop	r0
    1ad4:	cf 91       	pop	r28
    1ad6:	df 91       	pop	r29
    1ad8:	08 95       	ret

00001ada <DIO_voidTogglePortValue>:

void DIO_voidTogglePortValue(u8 Copy_u8PortNum){
    1ada:	df 93       	push	r29
    1adc:	cf 93       	push	r28
    1ade:	00 d0       	rcall	.+0      	; 0x1ae0 <DIO_voidTogglePortValue+0x6>
    1ae0:	cd b7       	in	r28, 0x3d	; 61
    1ae2:	de b7       	in	r29, 0x3e	; 62
    1ae4:	8a 83       	std	Y+2, r24	; 0x02
    for (u8 pin = 0; pin < 8; pin++) {
    1ae6:	19 82       	std	Y+1, r1	; 0x01
    1ae8:	07 c0       	rjmp	.+14     	; 0x1af8 <DIO_voidTogglePortValue+0x1e>
    	DIO_voidTogglePinValue(Copy_u8PortNum,pin);
    1aea:	8a 81       	ldd	r24, Y+2	; 0x02
    1aec:	69 81       	ldd	r22, Y+1	; 0x01
    1aee:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <DIO_voidTogglePinValue>
        DIO_voidSetPinValue(Copy_u8PortNum,Copy_u8PinNum,PIN_LOW);
    }
}

void DIO_voidTogglePortValue(u8 Copy_u8PortNum){
    for (u8 pin = 0; pin < 8; pin++) {
    1af2:	89 81       	ldd	r24, Y+1	; 0x01
    1af4:	8f 5f       	subi	r24, 0xFF	; 255
    1af6:	89 83       	std	Y+1, r24	; 0x01
    1af8:	89 81       	ldd	r24, Y+1	; 0x01
    1afa:	88 30       	cpi	r24, 0x08	; 8
    1afc:	b0 f3       	brcs	.-20     	; 0x1aea <DIO_voidTogglePortValue+0x10>
    	DIO_voidTogglePinValue(Copy_u8PortNum,pin);
    }
    1afe:	0f 90       	pop	r0
    1b00:	0f 90       	pop	r0
    1b02:	cf 91       	pop	r28
    1b04:	df 91       	pop	r29
    1b06:	08 95       	ret

00001b08 <KPD_voidInit>:
#include "KPD_interface.h"
#include "KPD_private.h"
#include "KPD_config.h"
#include <util/delay.h>
void KPD_voidInit()
{
    1b08:	df 93       	push	r29
    1b0a:	cf 93       	push	r28
    1b0c:	cd b7       	in	r28, 0x3d	; 61
    1b0e:	de b7       	in	r29, 0x3e	; 62
	//COLUMSNS INPUT HIGH
	DIO_voidSetPinDirection(KPD_PORT,C1,PIN_IN);
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	63 e0       	ldi	r22, 0x03	; 3
    1b14:	40 e0       	ldi	r20, 0x00	; 0
    1b16:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_PORT,C2,PIN_IN);
    1b1a:	81 e0       	ldi	r24, 0x01	; 1
    1b1c:	62 e0       	ldi	r22, 0x02	; 2
    1b1e:	40 e0       	ldi	r20, 0x00	; 0
    1b20:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_PORT,C3,PIN_IN);
    1b24:	81 e0       	ldi	r24, 0x01	; 1
    1b26:	61 e0       	ldi	r22, 0x01	; 1
    1b28:	40 e0       	ldi	r20, 0x00	; 0
    1b2a:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_PORT,C4,PIN_IN);
    1b2e:	81 e0       	ldi	r24, 0x01	; 1
    1b30:	60 e0       	ldi	r22, 0x00	; 0
    1b32:	40 e0       	ldi	r20, 0x00	; 0
    1b34:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(KPD_PORT,C1,PIN_HIGH);
    1b38:	81 e0       	ldi	r24, 0x01	; 1
    1b3a:	63 e0       	ldi	r22, 0x03	; 3
    1b3c:	41 e0       	ldi	r20, 0x01	; 1
    1b3e:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_PORT,C2,PIN_HIGH);
    1b42:	81 e0       	ldi	r24, 0x01	; 1
    1b44:	62 e0       	ldi	r22, 0x02	; 2
    1b46:	41 e0       	ldi	r20, 0x01	; 1
    1b48:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_PORT,C3,PIN_HIGH);
    1b4c:	81 e0       	ldi	r24, 0x01	; 1
    1b4e:	61 e0       	ldi	r22, 0x01	; 1
    1b50:	41 e0       	ldi	r20, 0x01	; 1
    1b52:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_PORT,C4,PIN_HIGH);
    1b56:	81 e0       	ldi	r24, 0x01	; 1
    1b58:	60 e0       	ldi	r22, 0x00	; 0
    1b5a:	41 e0       	ldi	r20, 0x01	; 1
    1b5c:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>

	//Rows OUTPUT pulled up
	DIO_voidSetPinDirection(KPD_PORT,R1,PIN_OUT);
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	64 e0       	ldi	r22, 0x04	; 4
    1b64:	41 e0       	ldi	r20, 0x01	; 1
    1b66:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_PORT,R2,PIN_OUT);
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	65 e0       	ldi	r22, 0x05	; 5
    1b6e:	41 e0       	ldi	r20, 0x01	; 1
    1b70:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_PORT,R3,PIN_OUT);
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	66 e0       	ldi	r22, 0x06	; 6
    1b78:	41 e0       	ldi	r20, 0x01	; 1
    1b7a:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_PORT,R4,PIN_OUT);
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	67 e0       	ldi	r22, 0x07	; 7
    1b82:	41 e0       	ldi	r20, 0x01	; 1
    1b84:	0e 94 92 0a 	call	0x1524	; 0x1524 <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(KPD_PORT,R1,PIN_HIGH);
    1b88:	81 e0       	ldi	r24, 0x01	; 1
    1b8a:	64 e0       	ldi	r22, 0x04	; 4
    1b8c:	41 e0       	ldi	r20, 0x01	; 1
    1b8e:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_PORT,R2,PIN_HIGH);
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	65 e0       	ldi	r22, 0x05	; 5
    1b96:	41 e0       	ldi	r20, 0x01	; 1
    1b98:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_PORT,R3,PIN_HIGH);
    1b9c:	81 e0       	ldi	r24, 0x01	; 1
    1b9e:	66 e0       	ldi	r22, 0x06	; 6
    1ba0:	41 e0       	ldi	r20, 0x01	; 1
    1ba2:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_PORT,R4,PIN_HIGH);
    1ba6:	81 e0       	ldi	r24, 0x01	; 1
    1ba8:	67 e0       	ldi	r22, 0x07	; 7
    1baa:	41 e0       	ldi	r20, 0x01	; 1
    1bac:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>

}
    1bb0:	cf 91       	pop	r28
    1bb2:	df 91       	pop	r29
    1bb4:	08 95       	ret

00001bb6 <KPD_u8GetKeyState>:
const u8 KPD_Au8keys[MAX_ROW_NUM][MAX_COL_NUM] = KPD_KEYS;

const u8 KPD_Au8RowsPins[MAX_ROW_NUM]={R1,R2,R3,R4};
const u8 KPD_Au8ColsPins[MAX_COL_NUM]={C1,C2,C3,C4}; 

u8 KPD_u8GetKeyState(){
    1bb6:	df 93       	push	r29
    1bb8:	cf 93       	push	r28
    1bba:	cd b7       	in	r28, 0x3d	; 61
    1bbc:	de b7       	in	r29, 0x3e	; 62
    1bbe:	63 97       	sbiw	r28, 0x13	; 19
    1bc0:	0f b6       	in	r0, 0x3f	; 63
    1bc2:	f8 94       	cli
    1bc4:	de bf       	out	0x3e, r29	; 62
    1bc6:	0f be       	out	0x3f, r0	; 63
    1bc8:	cd bf       	out	0x3d, r28	; 61
    u8 Local_u8Button=NO_PRESSED_KEY;
    1bca:	8f ef       	ldi	r24, 0xFF	; 255
    1bcc:	8b 8b       	std	Y+19, r24	; 0x13
    u8 LOCAl_u8RowsCounter,LOCAl_u8colCounter,Local_u8PinState , LOCAL_u8Flag=0;
    1bce:	1f 86       	std	Y+15, r1	; 0x0f
       //Activate each row => FOR LOOP ON THE PINS OF THE ROWS
       for(LOCAl_u8RowsCounter=0;LOCAl_u8RowsCounter<MAX_ROW_NUM;LOCAl_u8RowsCounter++){
    1bd0:	1a 8a       	std	Y+18, r1	; 0x12
    1bd2:	da c0       	rjmp	.+436    	; 0x1d88 <KPD_u8GetKeyState+0x1d2>

            DIO_voidSetPinValue(KPD_PORT,KPD_Au8RowsPins[LOCAl_u8RowsCounter],PIN_LOW);
    1bd4:	8a 89       	ldd	r24, Y+18	; 0x12
    1bd6:	88 2f       	mov	r24, r24
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	fc 01       	movw	r30, r24
    1bdc:	ef 5f       	subi	r30, 0xFF	; 255
    1bde:	fe 4f       	sbci	r31, 0xFE	; 254
    1be0:	90 81       	ld	r25, Z
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	69 2f       	mov	r22, r25
    1be6:	40 e0       	ldi	r20, 0x00	; 0
    1be8:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
            //CHECK WHICH INPUT PIN HAS ZERO 
            for(LOCAl_u8colCounter=0 ;LOCAl_u8colCounter<MAX_COL_NUM;LOCAl_u8colCounter++){
    1bec:	19 8a       	std	Y+17, r1	; 0x11
    1bee:	b6 c0       	rjmp	.+364    	; 0x1d5c <KPD_u8GetKeyState+0x1a6>

                Local_u8PinState=DIO_u8GetPinValue(KPD_PORT,KPD_Au8ColsPins[LOCAl_u8colCounter]);
    1bf0:	89 89       	ldd	r24, Y+17	; 0x11
    1bf2:	88 2f       	mov	r24, r24
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	fc 01       	movw	r30, r24
    1bf8:	eb 5f       	subi	r30, 0xFB	; 251
    1bfa:	fe 4f       	sbci	r31, 0xFE	; 254
    1bfc:	90 81       	ld	r25, Z
    1bfe:	81 e0       	ldi	r24, 0x01	; 1
    1c00:	69 2f       	mov	r22, r25
    1c02:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <DIO_u8GetPinValue>
    1c06:	88 8b       	std	Y+16, r24	; 0x10
                if(Local_u8PinState==PIN_LOW) //switch is pressed 
    1c08:	88 89       	ldd	r24, Y+16	; 0x10
    1c0a:	88 23       	and	r24, r24
    1c0c:	09 f0       	breq	.+2      	; 0x1c10 <KPD_u8GetKeyState+0x5a>
    1c0e:	a3 c0       	rjmp	.+326    	; 0x1d56 <KPD_u8GetKeyState+0x1a0>
    1c10:	80 e0       	ldi	r24, 0x00	; 0
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	a8 e4       	ldi	r26, 0x48	; 72
    1c16:	b2 e4       	ldi	r27, 0x42	; 66
    1c18:	8b 87       	std	Y+11, r24	; 0x0b
    1c1a:	9c 87       	std	Y+12, r25	; 0x0c
    1c1c:	ad 87       	std	Y+13, r26	; 0x0d
    1c1e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c20:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c22:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c24:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c26:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c28:	20 e0       	ldi	r18, 0x00	; 0
    1c2a:	30 e0       	ldi	r19, 0x00	; 0
    1c2c:	4a ef       	ldi	r20, 0xFA	; 250
    1c2e:	54 e4       	ldi	r21, 0x44	; 68
    1c30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c34:	dc 01       	movw	r26, r24
    1c36:	cb 01       	movw	r24, r22
    1c38:	8f 83       	std	Y+7, r24	; 0x07
    1c3a:	98 87       	std	Y+8, r25	; 0x08
    1c3c:	a9 87       	std	Y+9, r26	; 0x09
    1c3e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1c40:	6f 81       	ldd	r22, Y+7	; 0x07
    1c42:	78 85       	ldd	r23, Y+8	; 0x08
    1c44:	89 85       	ldd	r24, Y+9	; 0x09
    1c46:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c48:	20 e0       	ldi	r18, 0x00	; 0
    1c4a:	30 e0       	ldi	r19, 0x00	; 0
    1c4c:	40 e8       	ldi	r20, 0x80	; 128
    1c4e:	5f e3       	ldi	r21, 0x3F	; 63
    1c50:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c54:	88 23       	and	r24, r24
    1c56:	2c f4       	brge	.+10     	; 0x1c62 <KPD_u8GetKeyState+0xac>
		__ticks = 1;
    1c58:	81 e0       	ldi	r24, 0x01	; 1
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	9e 83       	std	Y+6, r25	; 0x06
    1c5e:	8d 83       	std	Y+5, r24	; 0x05
    1c60:	3f c0       	rjmp	.+126    	; 0x1ce0 <KPD_u8GetKeyState+0x12a>
	else if (__tmp > 65535)
    1c62:	6f 81       	ldd	r22, Y+7	; 0x07
    1c64:	78 85       	ldd	r23, Y+8	; 0x08
    1c66:	89 85       	ldd	r24, Y+9	; 0x09
    1c68:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c6a:	20 e0       	ldi	r18, 0x00	; 0
    1c6c:	3f ef       	ldi	r19, 0xFF	; 255
    1c6e:	4f e7       	ldi	r20, 0x7F	; 127
    1c70:	57 e4       	ldi	r21, 0x47	; 71
    1c72:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c76:	18 16       	cp	r1, r24
    1c78:	4c f5       	brge	.+82     	; 0x1ccc <KPD_u8GetKeyState+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c7a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c7c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c80:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c82:	20 e0       	ldi	r18, 0x00	; 0
    1c84:	30 e0       	ldi	r19, 0x00	; 0
    1c86:	40 e2       	ldi	r20, 0x20	; 32
    1c88:	51 e4       	ldi	r21, 0x41	; 65
    1c8a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c8e:	dc 01       	movw	r26, r24
    1c90:	cb 01       	movw	r24, r22
    1c92:	bc 01       	movw	r22, r24
    1c94:	cd 01       	movw	r24, r26
    1c96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c9a:	dc 01       	movw	r26, r24
    1c9c:	cb 01       	movw	r24, r22
    1c9e:	9e 83       	std	Y+6, r25	; 0x06
    1ca0:	8d 83       	std	Y+5, r24	; 0x05
    1ca2:	0f c0       	rjmp	.+30     	; 0x1cc2 <KPD_u8GetKeyState+0x10c>
    1ca4:	88 ec       	ldi	r24, 0xC8	; 200
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	9c 83       	std	Y+4, r25	; 0x04
    1caa:	8b 83       	std	Y+3, r24	; 0x03
    1cac:	8b 81       	ldd	r24, Y+3	; 0x03
    1cae:	9c 81       	ldd	r25, Y+4	; 0x04
    1cb0:	01 97       	sbiw	r24, 0x01	; 1
    1cb2:	f1 f7       	brne	.-4      	; 0x1cb0 <KPD_u8GetKeyState+0xfa>
    1cb4:	9c 83       	std	Y+4, r25	; 0x04
    1cb6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cb8:	8d 81       	ldd	r24, Y+5	; 0x05
    1cba:	9e 81       	ldd	r25, Y+6	; 0x06
    1cbc:	01 97       	sbiw	r24, 0x01	; 1
    1cbe:	9e 83       	std	Y+6, r25	; 0x06
    1cc0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cc2:	8d 81       	ldd	r24, Y+5	; 0x05
    1cc4:	9e 81       	ldd	r25, Y+6	; 0x06
    1cc6:	00 97       	sbiw	r24, 0x00	; 0
    1cc8:	69 f7       	brne	.-38     	; 0x1ca4 <KPD_u8GetKeyState+0xee>
    1cca:	14 c0       	rjmp	.+40     	; 0x1cf4 <KPD_u8GetKeyState+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ccc:	6f 81       	ldd	r22, Y+7	; 0x07
    1cce:	78 85       	ldd	r23, Y+8	; 0x08
    1cd0:	89 85       	ldd	r24, Y+9	; 0x09
    1cd2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cd4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cd8:	dc 01       	movw	r26, r24
    1cda:	cb 01       	movw	r24, r22
    1cdc:	9e 83       	std	Y+6, r25	; 0x06
    1cde:	8d 83       	std	Y+5, r24	; 0x05
    1ce0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ce2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ce4:	9a 83       	std	Y+2, r25	; 0x02
    1ce6:	89 83       	std	Y+1, r24	; 0x01
    1ce8:	89 81       	ldd	r24, Y+1	; 0x01
    1cea:	9a 81       	ldd	r25, Y+2	; 0x02
    1cec:	01 97       	sbiw	r24, 0x01	; 1
    1cee:	f1 f7       	brne	.-4      	; 0x1cec <KPD_u8GetKeyState+0x136>
    1cf0:	9a 83       	std	Y+2, r25	; 0x02
    1cf2:	89 83       	std	Y+1, r24	; 0x01
                {
                    //Debouncing 
                    _delay_ms(50); //leh mafish delay ba3d ma awsal lel nos 3ashan mat2asarsh bel bouncing bta3 el rego3
                    Local_u8PinState=DIO_u8GetPinValue(KPD_PORT,KPD_Au8ColsPins[LOCAl_u8colCounter]);
    1cf4:	89 89       	ldd	r24, Y+17	; 0x11
    1cf6:	88 2f       	mov	r24, r24
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	fc 01       	movw	r30, r24
    1cfc:	eb 5f       	subi	r30, 0xFB	; 251
    1cfe:	fe 4f       	sbci	r31, 0xFE	; 254
    1d00:	90 81       	ld	r25, Z
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	69 2f       	mov	r22, r25
    1d06:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <DIO_u8GetPinValue>
    1d0a:	88 8b       	std	Y+16, r24	; 0x10
    1d0c:	0c c0       	rjmp	.+24     	; 0x1d26 <KPD_u8GetKeyState+0x170>
                    //Check if the pin still low 
                    while(Local_u8PinState == PIN_LOW){
                        Local_u8PinState=DIO_u8GetPinValue(KPD_PORT,KPD_Au8ColsPins[LOCAl_u8colCounter]);
    1d0e:	89 89       	ldd	r24, Y+17	; 0x11
    1d10:	88 2f       	mov	r24, r24
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	fc 01       	movw	r30, r24
    1d16:	eb 5f       	subi	r30, 0xFB	; 251
    1d18:	fe 4f       	sbci	r31, 0xFE	; 254
    1d1a:	90 81       	ld	r25, Z
    1d1c:	81 e0       	ldi	r24, 0x01	; 1
    1d1e:	69 2f       	mov	r22, r25
    1d20:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <DIO_u8GetPinValue>
    1d24:	88 8b       	std	Y+16, r24	; 0x10
                {
                    //Debouncing 
                    _delay_ms(50); //leh mafish delay ba3d ma awsal lel nos 3ashan mat2asarsh bel bouncing bta3 el rego3
                    Local_u8PinState=DIO_u8GetPinValue(KPD_PORT,KPD_Au8ColsPins[LOCAl_u8colCounter]);
                    //Check if the pin still low 
                    while(Local_u8PinState == PIN_LOW){
    1d26:	88 89       	ldd	r24, Y+16	; 0x10
    1d28:	88 23       	and	r24, r24
    1d2a:	89 f3       	breq	.-30     	; 0x1d0e <KPD_u8GetKeyState+0x158>
                        Local_u8PinState=DIO_u8GetPinValue(KPD_PORT,KPD_Au8ColsPins[LOCAl_u8colCounter]);
                    }
                    Local_u8Button=KPD_Au8keys[LOCAl_u8RowsCounter][LOCAl_u8colCounter];
    1d2c:	8a 89       	ldd	r24, Y+18	; 0x12
    1d2e:	48 2f       	mov	r20, r24
    1d30:	50 e0       	ldi	r21, 0x00	; 0
    1d32:	89 89       	ldd	r24, Y+17	; 0x11
    1d34:	28 2f       	mov	r18, r24
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	ca 01       	movw	r24, r20
    1d3a:	88 0f       	add	r24, r24
    1d3c:	99 1f       	adc	r25, r25
    1d3e:	88 0f       	add	r24, r24
    1d40:	99 1f       	adc	r25, r25
    1d42:	82 0f       	add	r24, r18
    1d44:	93 1f       	adc	r25, r19
    1d46:	fc 01       	movw	r30, r24
    1d48:	ef 50       	subi	r30, 0x0F	; 15
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	80 81       	ld	r24, Z
    1d4e:	8b 8b       	std	Y+19, r24	; 0x13
                    LOCAL_u8Flag=1;
    1d50:	81 e0       	ldi	r24, 0x01	; 1
    1d52:	8f 87       	std	Y+15, r24	; 0x0f
    1d54:	07 c0       	rjmp	.+14     	; 0x1d64 <KPD_u8GetKeyState+0x1ae>
       //Activate each row => FOR LOOP ON THE PINS OF THE ROWS
       for(LOCAl_u8RowsCounter=0;LOCAl_u8RowsCounter<MAX_ROW_NUM;LOCAl_u8RowsCounter++){

            DIO_voidSetPinValue(KPD_PORT,KPD_Au8RowsPins[LOCAl_u8RowsCounter],PIN_LOW);
            //CHECK WHICH INPUT PIN HAS ZERO 
            for(LOCAl_u8colCounter=0 ;LOCAl_u8colCounter<MAX_COL_NUM;LOCAl_u8colCounter++){
    1d56:	89 89       	ldd	r24, Y+17	; 0x11
    1d58:	8f 5f       	subi	r24, 0xFF	; 255
    1d5a:	89 8b       	std	Y+17, r24	; 0x11
    1d5c:	89 89       	ldd	r24, Y+17	; 0x11
    1d5e:	84 30       	cpi	r24, 0x04	; 4
    1d60:	08 f4       	brcc	.+2      	; 0x1d64 <KPD_u8GetKeyState+0x1ae>
    1d62:	46 cf       	rjmp	.-372    	; 0x1bf0 <KPD_u8GetKeyState+0x3a>
                    LOCAL_u8Flag=1;
                    break;
                }
            }
        //Deactivate the activated row
        DIO_voidSetPinValue(KPD_PORT,KPD_Au8RowsPins[LOCAl_u8RowsCounter],PIN_HIGH);
    1d64:	8a 89       	ldd	r24, Y+18	; 0x12
    1d66:	88 2f       	mov	r24, r24
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	fc 01       	movw	r30, r24
    1d6c:	ef 5f       	subi	r30, 0xFF	; 255
    1d6e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d70:	90 81       	ld	r25, Z
    1d72:	81 e0       	ldi	r24, 0x01	; 1
    1d74:	69 2f       	mov	r22, r25
    1d76:	41 e0       	ldi	r20, 0x01	; 1
    1d78:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
        //Terminate the outer loop only when a button is pressed
        if(LOCAL_u8Flag==1) break;
    1d7c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d7e:	81 30       	cpi	r24, 0x01	; 1
    1d80:	39 f0       	breq	.+14     	; 0x1d90 <KPD_u8GetKeyState+0x1da>

u8 KPD_u8GetKeyState(){
    u8 Local_u8Button=NO_PRESSED_KEY;
    u8 LOCAl_u8RowsCounter,LOCAl_u8colCounter,Local_u8PinState , LOCAL_u8Flag=0;
       //Activate each row => FOR LOOP ON THE PINS OF THE ROWS
       for(LOCAl_u8RowsCounter=0;LOCAl_u8RowsCounter<MAX_ROW_NUM;LOCAl_u8RowsCounter++){
    1d82:	8a 89       	ldd	r24, Y+18	; 0x12
    1d84:	8f 5f       	subi	r24, 0xFF	; 255
    1d86:	8a 8b       	std	Y+18, r24	; 0x12
    1d88:	8a 89       	ldd	r24, Y+18	; 0x12
    1d8a:	84 30       	cpi	r24, 0x04	; 4
    1d8c:	08 f4       	brcc	.+2      	; 0x1d90 <KPD_u8GetKeyState+0x1da>
    1d8e:	22 cf       	rjmp	.-444    	; 0x1bd4 <KPD_u8GetKeyState+0x1e>
        //Deactivate the activated row
        DIO_voidSetPinValue(KPD_PORT,KPD_Au8RowsPins[LOCAl_u8RowsCounter],PIN_HIGH);
        //Terminate the outer loop only when a button is pressed
        if(LOCAL_u8Flag==1) break;
       }
    return Local_u8Button;
    1d90:	8b 89       	ldd	r24, Y+19	; 0x13
    1d92:	63 96       	adiw	r28, 0x13	; 19
    1d94:	0f b6       	in	r0, 0x3f	; 63
    1d96:	f8 94       	cli
    1d98:	de bf       	out	0x3e, r29	; 62
    1d9a:	0f be       	out	0x3f, r0	; 63
    1d9c:	cd bf       	out	0x3d, r28	; 61
    1d9e:	cf 91       	pop	r28
    1da0:	df 91       	pop	r29
    1da2:	08 95       	ret

00001da4 <LED_voidControlLed>:
#include "LED_interface.h"
#include "LED_private.h"
#include "LED_config.h"

void LED_voidControlLed( u8 Copy_u8PortNum,u8 Copy_u8PinNum, u8 Copy_u8PinValue)
{
    1da4:	df 93       	push	r29
    1da6:	cf 93       	push	r28
    1da8:	00 d0       	rcall	.+0      	; 0x1daa <LED_voidControlLed+0x6>
    1daa:	0f 92       	push	r0
    1dac:	cd b7       	in	r28, 0x3d	; 61
    1dae:	de b7       	in	r29, 0x3e	; 62
    1db0:	89 83       	std	Y+1, r24	; 0x01
    1db2:	6a 83       	std	Y+2, r22	; 0x02
    1db4:	4b 83       	std	Y+3, r20	; 0x03
        DIO_voidSetPinValue(Copy_u8PortNum,Copy_u8PinNum,Copy_u8PinValue);   
    1db6:	89 81       	ldd	r24, Y+1	; 0x01
    1db8:	6a 81       	ldd	r22, Y+2	; 0x02
    1dba:	4b 81       	ldd	r20, Y+3	; 0x03
    1dbc:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <DIO_voidSetPinValue>
    
}
    1dc0:	0f 90       	pop	r0
    1dc2:	0f 90       	pop	r0
    1dc4:	0f 90       	pop	r0
    1dc6:	cf 91       	pop	r28
    1dc8:	df 91       	pop	r29
    1dca:	08 95       	ret

00001dcc <LED_voidToggleLed>:


void LED_voidToggleLed(u8 Copy_u8PortNum,u8 Copy_u8PinNum){
    1dcc:	df 93       	push	r29
    1dce:	cf 93       	push	r28
    1dd0:	00 d0       	rcall	.+0      	; 0x1dd2 <LED_voidToggleLed+0x6>
    1dd2:	cd b7       	in	r28, 0x3d	; 61
    1dd4:	de b7       	in	r29, 0x3e	; 62
    1dd6:	89 83       	std	Y+1, r24	; 0x01
    1dd8:	6a 83       	std	Y+2, r22	; 0x02
    DIO_voidTogglePinValue(Copy_u8PortNum,Copy_u8PinNum);
    1dda:	89 81       	ldd	r24, Y+1	; 0x01
    1ddc:	6a 81       	ldd	r22, Y+2	; 0x02
    1dde:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <DIO_voidTogglePinValue>

}
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	cf 91       	pop	r28
    1de8:	df 91       	pop	r29
    1dea:	08 95       	ret

00001dec <LED_voidtControlAllLeds>:


void LED_voidtControlAllLeds(u8 Copy_u8PortNum,u8 Copy_u8PortValue){
    1dec:	df 93       	push	r29
    1dee:	cf 93       	push	r28
    1df0:	00 d0       	rcall	.+0      	; 0x1df2 <LED_voidtControlAllLeds+0x6>
    1df2:	cd b7       	in	r28, 0x3d	; 61
    1df4:	de b7       	in	r29, 0x3e	; 62
    1df6:	89 83       	std	Y+1, r24	; 0x01
    1df8:	6a 83       	std	Y+2, r22	; 0x02
//    {
//        DIO_VoidSetPortValue(Copy_u8PortNum,PORT_HIGH);
//    }else if(Copy_u8PortValue == PORT_LOW){
//        DIO_voidSetPinValue(Copy_u8PortNum,PIN_LOW);
//    }
	DIO_voidSetPortValue(Copy_u8PortNum,Copy_u8PortValue);
    1dfa:	89 81       	ldd	r24, Y+1	; 0x01
    1dfc:	6a 81       	ldd	r22, Y+2	; 0x02
    1dfe:	0e 94 90 0b 	call	0x1720	; 0x1720 <DIO_voidSetPortValue>
    
}
    1e02:	0f 90       	pop	r0
    1e04:	0f 90       	pop	r0
    1e06:	cf 91       	pop	r28
    1e08:	df 91       	pop	r29
    1e0a:	08 95       	ret

00001e0c <LED_voidToggleAllLeds>:

void LED_voidToggleAllLeds(u8 Copy_u8PortNum){
    1e0c:	df 93       	push	r29
    1e0e:	cf 93       	push	r28
    1e10:	0f 92       	push	r0
    1e12:	cd b7       	in	r28, 0x3d	; 61
    1e14:	de b7       	in	r29, 0x3e	; 62
    1e16:	89 83       	std	Y+1, r24	; 0x01
    DIO_voidTogglePortValue(Copy_u8PortNum);
    1e18:	89 81       	ldd	r24, Y+1	; 0x01
    1e1a:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <DIO_voidTogglePortValue>
}
    1e1e:	0f 90       	pop	r0
    1e20:	cf 91       	pop	r28
    1e22:	df 91       	pop	r29
    1e24:	08 95       	ret

00001e26 <main>:
#include "DIO_interface.h"
#include "CLCD_interface.h"
#include "KPD_interface.h"
#include "LED_interface.h"

void main(){
    1e26:	0f 93       	push	r16
    1e28:	1f 93       	push	r17
    1e2a:	df 93       	push	r29
    1e2c:	cf 93       	push	r28
    1e2e:	cd b7       	in	r28, 0x3d	; 61
    1e30:	de b7       	in	r29, 0x3e	; 62
    1e32:	c5 56       	subi	r28, 0x65	; 101
    1e34:	d2 40       	sbci	r29, 0x02	; 2
    1e36:	0f b6       	in	r0, 0x3f	; 63
    1e38:	f8 94       	cli
    1e3a:	de bf       	out	0x3e, r29	; 62
    1e3c:	0f be       	out	0x3f, r0	; 63
    1e3e:	cd bf       	out	0x3d, r28	; 61
	//LEDS port direction output
	DIO_voidSetPortDirection(PORT_u8B,PORT_OUT);
    1e40:	82 e0       	ldi	r24, 0x02	; 2
    1e42:	6f ef       	ldi	r22, 0xFF	; 255
    1e44:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <DIO_voidSetPortDirection>
	//CLCD SETUP
	CLCD_voidInit();
    1e48:	0e 94 d7 06 	call	0xdae	; 0xdae <CLCD_voidInit>
	//KPD SETUP
	KPD_voidInit();
    1e4c:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <KPD_voidInit>

	while(1){
		u8 Copy_u8KpdValue=KPD_u8GetKeyState();
    1e50:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    1e54:	fe 01       	movw	r30, r28
    1e56:	ed 59       	subi	r30, 0x9D	; 157
    1e58:	fd 4f       	sbci	r31, 0xFD	; 253
    1e5a:	80 83       	st	Z, r24
		if(Copy_u8KpdValue != NO_PRESSED_KEY){
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	ed 59       	subi	r30, 0x9D	; 157
    1e60:	fd 4f       	sbci	r31, 0xFD	; 253
    1e62:	80 81       	ld	r24, Z
    1e64:	8f 3f       	cpi	r24, 0xFF	; 255
    1e66:	a1 f3       	breq	.-24     	; 0x1e50 <main+0x2a>
			CLCD_voidClearDisplay();
    1e68:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	e9 5a       	subi	r30, 0xA9	; 169
    1e70:	fd 4f       	sbci	r31, 0xFD	; 253
    1e72:	80 e0       	ldi	r24, 0x00	; 0
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	a0 e8       	ldi	r26, 0x80	; 128
    1e78:	bf e3       	ldi	r27, 0x3F	; 63
    1e7a:	80 83       	st	Z, r24
    1e7c:	91 83       	std	Z+1, r25	; 0x01
    1e7e:	a2 83       	std	Z+2, r26	; 0x02
    1e80:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e82:	8e 01       	movw	r16, r28
    1e84:	0d 5a       	subi	r16, 0xAD	; 173
    1e86:	1d 4f       	sbci	r17, 0xFD	; 253
    1e88:	fe 01       	movw	r30, r28
    1e8a:	e9 5a       	subi	r30, 0xA9	; 169
    1e8c:	fd 4f       	sbci	r31, 0xFD	; 253
    1e8e:	60 81       	ld	r22, Z
    1e90:	71 81       	ldd	r23, Z+1	; 0x01
    1e92:	82 81       	ldd	r24, Z+2	; 0x02
    1e94:	93 81       	ldd	r25, Z+3	; 0x03
    1e96:	20 e0       	ldi	r18, 0x00	; 0
    1e98:	30 e0       	ldi	r19, 0x00	; 0
    1e9a:	4a ef       	ldi	r20, 0xFA	; 250
    1e9c:	54 e4       	ldi	r21, 0x44	; 68
    1e9e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea2:	dc 01       	movw	r26, r24
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	f8 01       	movw	r30, r16
    1ea8:	80 83       	st	Z, r24
    1eaa:	91 83       	std	Z+1, r25	; 0x01
    1eac:	a2 83       	std	Z+2, r26	; 0x02
    1eae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1eb0:	fe 01       	movw	r30, r28
    1eb2:	ed 5a       	subi	r30, 0xAD	; 173
    1eb4:	fd 4f       	sbci	r31, 0xFD	; 253
    1eb6:	60 81       	ld	r22, Z
    1eb8:	71 81       	ldd	r23, Z+1	; 0x01
    1eba:	82 81       	ldd	r24, Z+2	; 0x02
    1ebc:	93 81       	ldd	r25, Z+3	; 0x03
    1ebe:	20 e0       	ldi	r18, 0x00	; 0
    1ec0:	30 e0       	ldi	r19, 0x00	; 0
    1ec2:	40 e8       	ldi	r20, 0x80	; 128
    1ec4:	5f e3       	ldi	r21, 0x3F	; 63
    1ec6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1eca:	88 23       	and	r24, r24
    1ecc:	44 f4       	brge	.+16     	; 0x1ede <main+0xb8>
		__ticks = 1;
    1ece:	fe 01       	movw	r30, r28
    1ed0:	ef 5a       	subi	r30, 0xAF	; 175
    1ed2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ed4:	81 e0       	ldi	r24, 0x01	; 1
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	91 83       	std	Z+1, r25	; 0x01
    1eda:	80 83       	st	Z, r24
    1edc:	64 c0       	rjmp	.+200    	; 0x1fa6 <main+0x180>
	else if (__tmp > 65535)
    1ede:	fe 01       	movw	r30, r28
    1ee0:	ed 5a       	subi	r30, 0xAD	; 173
    1ee2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ee4:	60 81       	ld	r22, Z
    1ee6:	71 81       	ldd	r23, Z+1	; 0x01
    1ee8:	82 81       	ldd	r24, Z+2	; 0x02
    1eea:	93 81       	ldd	r25, Z+3	; 0x03
    1eec:	20 e0       	ldi	r18, 0x00	; 0
    1eee:	3f ef       	ldi	r19, 0xFF	; 255
    1ef0:	4f e7       	ldi	r20, 0x7F	; 127
    1ef2:	57 e4       	ldi	r21, 0x47	; 71
    1ef4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ef8:	18 16       	cp	r1, r24
    1efa:	0c f0       	brlt	.+2      	; 0x1efe <main+0xd8>
    1efc:	43 c0       	rjmp	.+134    	; 0x1f84 <main+0x15e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1efe:	fe 01       	movw	r30, r28
    1f00:	e9 5a       	subi	r30, 0xA9	; 169
    1f02:	fd 4f       	sbci	r31, 0xFD	; 253
    1f04:	60 81       	ld	r22, Z
    1f06:	71 81       	ldd	r23, Z+1	; 0x01
    1f08:	82 81       	ldd	r24, Z+2	; 0x02
    1f0a:	93 81       	ldd	r25, Z+3	; 0x03
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	40 e2       	ldi	r20, 0x20	; 32
    1f12:	51 e4       	ldi	r21, 0x41	; 65
    1f14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	8e 01       	movw	r16, r28
    1f1e:	0f 5a       	subi	r16, 0xAF	; 175
    1f20:	1d 4f       	sbci	r17, 0xFD	; 253
    1f22:	bc 01       	movw	r22, r24
    1f24:	cd 01       	movw	r24, r26
    1f26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f2a:	dc 01       	movw	r26, r24
    1f2c:	cb 01       	movw	r24, r22
    1f2e:	f8 01       	movw	r30, r16
    1f30:	91 83       	std	Z+1, r25	; 0x01
    1f32:	80 83       	st	Z, r24
    1f34:	1f c0       	rjmp	.+62     	; 0x1f74 <main+0x14e>
    1f36:	fe 01       	movw	r30, r28
    1f38:	e1 5b       	subi	r30, 0xB1	; 177
    1f3a:	fd 4f       	sbci	r31, 0xFD	; 253
    1f3c:	88 ec       	ldi	r24, 0xC8	; 200
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	91 83       	std	Z+1, r25	; 0x01
    1f42:	80 83       	st	Z, r24
    1f44:	fe 01       	movw	r30, r28
    1f46:	e1 5b       	subi	r30, 0xB1	; 177
    1f48:	fd 4f       	sbci	r31, 0xFD	; 253
    1f4a:	80 81       	ld	r24, Z
    1f4c:	91 81       	ldd	r25, Z+1	; 0x01
    1f4e:	01 97       	sbiw	r24, 0x01	; 1
    1f50:	f1 f7       	brne	.-4      	; 0x1f4e <main+0x128>
    1f52:	fe 01       	movw	r30, r28
    1f54:	e1 5b       	subi	r30, 0xB1	; 177
    1f56:	fd 4f       	sbci	r31, 0xFD	; 253
    1f58:	91 83       	std	Z+1, r25	; 0x01
    1f5a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f5c:	de 01       	movw	r26, r28
    1f5e:	af 5a       	subi	r26, 0xAF	; 175
    1f60:	bd 4f       	sbci	r27, 0xFD	; 253
    1f62:	fe 01       	movw	r30, r28
    1f64:	ef 5a       	subi	r30, 0xAF	; 175
    1f66:	fd 4f       	sbci	r31, 0xFD	; 253
    1f68:	80 81       	ld	r24, Z
    1f6a:	91 81       	ldd	r25, Z+1	; 0x01
    1f6c:	01 97       	sbiw	r24, 0x01	; 1
    1f6e:	11 96       	adiw	r26, 0x01	; 1
    1f70:	9c 93       	st	X, r25
    1f72:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f74:	fe 01       	movw	r30, r28
    1f76:	ef 5a       	subi	r30, 0xAF	; 175
    1f78:	fd 4f       	sbci	r31, 0xFD	; 253
    1f7a:	80 81       	ld	r24, Z
    1f7c:	91 81       	ldd	r25, Z+1	; 0x01
    1f7e:	00 97       	sbiw	r24, 0x00	; 0
    1f80:	d1 f6       	brne	.-76     	; 0x1f36 <main+0x110>
    1f82:	28 c0       	rjmp	.+80     	; 0x1fd4 <main+0x1ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f84:	8e 01       	movw	r16, r28
    1f86:	0f 5a       	subi	r16, 0xAF	; 175
    1f88:	1d 4f       	sbci	r17, 0xFD	; 253
    1f8a:	fe 01       	movw	r30, r28
    1f8c:	ed 5a       	subi	r30, 0xAD	; 173
    1f8e:	fd 4f       	sbci	r31, 0xFD	; 253
    1f90:	60 81       	ld	r22, Z
    1f92:	71 81       	ldd	r23, Z+1	; 0x01
    1f94:	82 81       	ldd	r24, Z+2	; 0x02
    1f96:	93 81       	ldd	r25, Z+3	; 0x03
    1f98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	cb 01       	movw	r24, r22
    1fa0:	f8 01       	movw	r30, r16
    1fa2:	91 83       	std	Z+1, r25	; 0x01
    1fa4:	80 83       	st	Z, r24
    1fa6:	de 01       	movw	r26, r28
    1fa8:	a3 5b       	subi	r26, 0xB3	; 179
    1faa:	bd 4f       	sbci	r27, 0xFD	; 253
    1fac:	fe 01       	movw	r30, r28
    1fae:	ef 5a       	subi	r30, 0xAF	; 175
    1fb0:	fd 4f       	sbci	r31, 0xFD	; 253
    1fb2:	80 81       	ld	r24, Z
    1fb4:	91 81       	ldd	r25, Z+1	; 0x01
    1fb6:	11 96       	adiw	r26, 0x01	; 1
    1fb8:	9c 93       	st	X, r25
    1fba:	8e 93       	st	-X, r24
    1fbc:	fe 01       	movw	r30, r28
    1fbe:	e3 5b       	subi	r30, 0xB3	; 179
    1fc0:	fd 4f       	sbci	r31, 0xFD	; 253
    1fc2:	80 81       	ld	r24, Z
    1fc4:	91 81       	ldd	r25, Z+1	; 0x01
    1fc6:	01 97       	sbiw	r24, 0x01	; 1
    1fc8:	f1 f7       	brne	.-4      	; 0x1fc6 <main+0x1a0>
    1fca:	fe 01       	movw	r30, r28
    1fcc:	e3 5b       	subi	r30, 0xB3	; 179
    1fce:	fd 4f       	sbci	r31, 0xFD	; 253
    1fd0:	91 83       	std	Z+1, r25	; 0x01
    1fd2:	80 83       	st	Z, r24
			_delay_ms(1);
			switch (Copy_u8KpdValue)
    1fd4:	fe 01       	movw	r30, r28
    1fd6:	ed 59       	subi	r30, 0x9D	; 157
    1fd8:	fd 4f       	sbci	r31, 0xFD	; 253
    1fda:	80 81       	ld	r24, Z
    1fdc:	28 2f       	mov	r18, r24
    1fde:	30 e0       	ldi	r19, 0x00	; 0
    1fe0:	cc 59       	subi	r28, 0x9C	; 156
    1fe2:	dd 4f       	sbci	r29, 0xFD	; 253
    1fe4:	39 83       	std	Y+1, r19	; 0x01
    1fe6:	28 83       	st	Y, r18
    1fe8:	c4 56       	subi	r28, 0x64	; 100
    1fea:	d2 40       	sbci	r29, 0x02	; 2
    1fec:	cc 59       	subi	r28, 0x9C	; 156
    1fee:	dd 4f       	sbci	r29, 0xFD	; 253
    1ff0:	88 81       	ld	r24, Y
    1ff2:	99 81       	ldd	r25, Y+1	; 0x01
    1ff4:	c4 56       	subi	r28, 0x64	; 100
    1ff6:	d2 40       	sbci	r29, 0x02	; 2
    1ff8:	84 30       	cpi	r24, 0x04	; 4
    1ffa:	91 05       	cpc	r25, r1
    1ffc:	11 f4       	brne	.+4      	; 0x2002 <main+0x1dc>
    1ffe:	0c 94 06 1a 	jmp	0x340c	; 0x340c <main+0x15e6>
    2002:	cc 59       	subi	r28, 0x9C	; 156
    2004:	dd 4f       	sbci	r29, 0xFD	; 253
    2006:	e8 81       	ld	r30, Y
    2008:	f9 81       	ldd	r31, Y+1	; 0x01
    200a:	c4 56       	subi	r28, 0x64	; 100
    200c:	d2 40       	sbci	r29, 0x02	; 2
    200e:	e5 30       	cpi	r30, 0x05	; 5
    2010:	f1 05       	cpc	r31, r1
    2012:	fc f4       	brge	.+62     	; 0x2052 <main+0x22c>
    2014:	cc 59       	subi	r28, 0x9C	; 156
    2016:	dd 4f       	sbci	r29, 0xFD	; 253
    2018:	28 81       	ld	r18, Y
    201a:	39 81       	ldd	r19, Y+1	; 0x01
    201c:	c4 56       	subi	r28, 0x64	; 100
    201e:	d2 40       	sbci	r29, 0x02	; 2
    2020:	22 30       	cpi	r18, 0x02	; 2
    2022:	31 05       	cpc	r19, r1
    2024:	09 f4       	brne	.+2      	; 0x2028 <main+0x202>
    2026:	de c3       	rjmp	.+1980   	; 0x27e4 <main+0x9be>
    2028:	cc 59       	subi	r28, 0x9C	; 156
    202a:	dd 4f       	sbci	r29, 0xFD	; 253
    202c:	88 81       	ld	r24, Y
    202e:	99 81       	ldd	r25, Y+1	; 0x01
    2030:	c4 56       	subi	r28, 0x64	; 100
    2032:	d2 40       	sbci	r29, 0x02	; 2
    2034:	83 30       	cpi	r24, 0x03	; 3
    2036:	91 05       	cpc	r25, r1
    2038:	0c f0       	brlt	.+2      	; 0x203c <main+0x216>
    203a:	15 c6       	rjmp	.+3114   	; 0x2c66 <main+0xe40>
    203c:	cc 59       	subi	r28, 0x9C	; 156
    203e:	dd 4f       	sbci	r29, 0xFD	; 253
    2040:	e8 81       	ld	r30, Y
    2042:	f9 81       	ldd	r31, Y+1	; 0x01
    2044:	c4 56       	subi	r28, 0x64	; 100
    2046:	d2 40       	sbci	r29, 0x02	; 2
    2048:	e1 30       	cpi	r30, 0x01	; 1
    204a:	f1 05       	cpc	r31, r1
    204c:	81 f1       	breq	.+96     	; 0x20ae <main+0x288>
    204e:	0c 94 0b 2e 	jmp	0x5c16	; 0x5c16 <main+0x3df0>
    2052:	cc 59       	subi	r28, 0x9C	; 156
    2054:	dd 4f       	sbci	r29, 0xFD	; 253
    2056:	28 81       	ld	r18, Y
    2058:	39 81       	ldd	r19, Y+1	; 0x01
    205a:	c4 56       	subi	r28, 0x64	; 100
    205c:	d2 40       	sbci	r29, 0x02	; 2
    205e:	26 30       	cpi	r18, 0x06	; 6
    2060:	31 05       	cpc	r19, r1
    2062:	11 f4       	brne	.+4      	; 0x2068 <main+0x242>
    2064:	0c 94 57 23 	jmp	0x46ae	; 0x46ae <main+0x2888>
    2068:	cc 59       	subi	r28, 0x9C	; 156
    206a:	dd 4f       	sbci	r29, 0xFD	; 253
    206c:	88 81       	ld	r24, Y
    206e:	99 81       	ldd	r25, Y+1	; 0x01
    2070:	c4 56       	subi	r28, 0x64	; 100
    2072:	d2 40       	sbci	r29, 0x02	; 2
    2074:	86 30       	cpi	r24, 0x06	; 6
    2076:	91 05       	cpc	r25, r1
    2078:	14 f4       	brge	.+4      	; 0x207e <main+0x258>
    207a:	0c 94 6b 1f 	jmp	0x3ed6	; 0x3ed6 <main+0x20b0>
    207e:	cc 59       	subi	r28, 0x9C	; 156
    2080:	dd 4f       	sbci	r29, 0xFD	; 253
    2082:	e8 81       	ld	r30, Y
    2084:	f9 81       	ldd	r31, Y+1	; 0x01
    2086:	c4 56       	subi	r28, 0x64	; 100
    2088:	d2 40       	sbci	r29, 0x02	; 2
    208a:	e7 30       	cpi	r30, 0x07	; 7
    208c:	f1 05       	cpc	r31, r1
    208e:	11 f4       	brne	.+4      	; 0x2094 <main+0x26e>
    2090:	0c 94 1e 27 	jmp	0x4e3c	; 0x4e3c <main+0x3016>
    2094:	cc 59       	subi	r28, 0x9C	; 156
    2096:	dd 4f       	sbci	r29, 0xFD	; 253
    2098:	28 81       	ld	r18, Y
    209a:	39 81       	ldd	r19, Y+1	; 0x01
    209c:	c4 56       	subi	r28, 0x64	; 100
    209e:	d2 40       	sbci	r29, 0x02	; 2
    20a0:	28 30       	cpi	r18, 0x08	; 8
    20a2:	31 05       	cpc	r19, r1
    20a4:	11 f4       	brne	.+4      	; 0x20aa <main+0x284>
    20a6:	0c 94 0d 2b 	jmp	0x561a	; 0x561a <main+0x37f4>
    20aa:	0c 94 0b 2e 	jmp	0x5c16	; 0x5c16 <main+0x3df0>
			{
			case 1:
				CLCD_voidSetPosition(0,0);
    20ae:	80 e0       	ldi	r24, 0x00	; 0
    20b0:	60 e0       	ldi	r22, 0x00	; 0
    20b2:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    20b6:	fe 01       	movw	r30, r28
    20b8:	e7 5b       	subi	r30, 0xB7	; 183
    20ba:	fd 4f       	sbci	r31, 0xFD	; 253
    20bc:	80 e0       	ldi	r24, 0x00	; 0
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	a0 e8       	ldi	r26, 0x80	; 128
    20c2:	bf e3       	ldi	r27, 0x3F	; 63
    20c4:	80 83       	st	Z, r24
    20c6:	91 83       	std	Z+1, r25	; 0x01
    20c8:	a2 83       	std	Z+2, r26	; 0x02
    20ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20cc:	8e 01       	movw	r16, r28
    20ce:	0b 5b       	subi	r16, 0xBB	; 187
    20d0:	1d 4f       	sbci	r17, 0xFD	; 253
    20d2:	fe 01       	movw	r30, r28
    20d4:	e7 5b       	subi	r30, 0xB7	; 183
    20d6:	fd 4f       	sbci	r31, 0xFD	; 253
    20d8:	60 81       	ld	r22, Z
    20da:	71 81       	ldd	r23, Z+1	; 0x01
    20dc:	82 81       	ldd	r24, Z+2	; 0x02
    20de:	93 81       	ldd	r25, Z+3	; 0x03
    20e0:	20 e0       	ldi	r18, 0x00	; 0
    20e2:	30 e0       	ldi	r19, 0x00	; 0
    20e4:	4a ef       	ldi	r20, 0xFA	; 250
    20e6:	54 e4       	ldi	r21, 0x44	; 68
    20e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ec:	dc 01       	movw	r26, r24
    20ee:	cb 01       	movw	r24, r22
    20f0:	f8 01       	movw	r30, r16
    20f2:	80 83       	st	Z, r24
    20f4:	91 83       	std	Z+1, r25	; 0x01
    20f6:	a2 83       	std	Z+2, r26	; 0x02
    20f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20fa:	fe 01       	movw	r30, r28
    20fc:	eb 5b       	subi	r30, 0xBB	; 187
    20fe:	fd 4f       	sbci	r31, 0xFD	; 253
    2100:	60 81       	ld	r22, Z
    2102:	71 81       	ldd	r23, Z+1	; 0x01
    2104:	82 81       	ldd	r24, Z+2	; 0x02
    2106:	93 81       	ldd	r25, Z+3	; 0x03
    2108:	20 e0       	ldi	r18, 0x00	; 0
    210a:	30 e0       	ldi	r19, 0x00	; 0
    210c:	40 e8       	ldi	r20, 0x80	; 128
    210e:	5f e3       	ldi	r21, 0x3F	; 63
    2110:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2114:	88 23       	and	r24, r24
    2116:	44 f4       	brge	.+16     	; 0x2128 <main+0x302>
		__ticks = 1;
    2118:	fe 01       	movw	r30, r28
    211a:	ed 5b       	subi	r30, 0xBD	; 189
    211c:	fd 4f       	sbci	r31, 0xFD	; 253
    211e:	81 e0       	ldi	r24, 0x01	; 1
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	91 83       	std	Z+1, r25	; 0x01
    2124:	80 83       	st	Z, r24
    2126:	64 c0       	rjmp	.+200    	; 0x21f0 <main+0x3ca>
	else if (__tmp > 65535)
    2128:	fe 01       	movw	r30, r28
    212a:	eb 5b       	subi	r30, 0xBB	; 187
    212c:	fd 4f       	sbci	r31, 0xFD	; 253
    212e:	60 81       	ld	r22, Z
    2130:	71 81       	ldd	r23, Z+1	; 0x01
    2132:	82 81       	ldd	r24, Z+2	; 0x02
    2134:	93 81       	ldd	r25, Z+3	; 0x03
    2136:	20 e0       	ldi	r18, 0x00	; 0
    2138:	3f ef       	ldi	r19, 0xFF	; 255
    213a:	4f e7       	ldi	r20, 0x7F	; 127
    213c:	57 e4       	ldi	r21, 0x47	; 71
    213e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2142:	18 16       	cp	r1, r24
    2144:	0c f0       	brlt	.+2      	; 0x2148 <main+0x322>
    2146:	43 c0       	rjmp	.+134    	; 0x21ce <main+0x3a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2148:	fe 01       	movw	r30, r28
    214a:	e7 5b       	subi	r30, 0xB7	; 183
    214c:	fd 4f       	sbci	r31, 0xFD	; 253
    214e:	60 81       	ld	r22, Z
    2150:	71 81       	ldd	r23, Z+1	; 0x01
    2152:	82 81       	ldd	r24, Z+2	; 0x02
    2154:	93 81       	ldd	r25, Z+3	; 0x03
    2156:	20 e0       	ldi	r18, 0x00	; 0
    2158:	30 e0       	ldi	r19, 0x00	; 0
    215a:	40 e2       	ldi	r20, 0x20	; 32
    215c:	51 e4       	ldi	r21, 0x41	; 65
    215e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2162:	dc 01       	movw	r26, r24
    2164:	cb 01       	movw	r24, r22
    2166:	8e 01       	movw	r16, r28
    2168:	0d 5b       	subi	r16, 0xBD	; 189
    216a:	1d 4f       	sbci	r17, 0xFD	; 253
    216c:	bc 01       	movw	r22, r24
    216e:	cd 01       	movw	r24, r26
    2170:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2174:	dc 01       	movw	r26, r24
    2176:	cb 01       	movw	r24, r22
    2178:	f8 01       	movw	r30, r16
    217a:	91 83       	std	Z+1, r25	; 0x01
    217c:	80 83       	st	Z, r24
    217e:	1f c0       	rjmp	.+62     	; 0x21be <main+0x398>
    2180:	fe 01       	movw	r30, r28
    2182:	ef 5b       	subi	r30, 0xBF	; 191
    2184:	fd 4f       	sbci	r31, 0xFD	; 253
    2186:	88 ec       	ldi	r24, 0xC8	; 200
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	91 83       	std	Z+1, r25	; 0x01
    218c:	80 83       	st	Z, r24
    218e:	fe 01       	movw	r30, r28
    2190:	ef 5b       	subi	r30, 0xBF	; 191
    2192:	fd 4f       	sbci	r31, 0xFD	; 253
    2194:	80 81       	ld	r24, Z
    2196:	91 81       	ldd	r25, Z+1	; 0x01
    2198:	01 97       	sbiw	r24, 0x01	; 1
    219a:	f1 f7       	brne	.-4      	; 0x2198 <main+0x372>
    219c:	fe 01       	movw	r30, r28
    219e:	ef 5b       	subi	r30, 0xBF	; 191
    21a0:	fd 4f       	sbci	r31, 0xFD	; 253
    21a2:	91 83       	std	Z+1, r25	; 0x01
    21a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21a6:	de 01       	movw	r26, r28
    21a8:	ad 5b       	subi	r26, 0xBD	; 189
    21aa:	bd 4f       	sbci	r27, 0xFD	; 253
    21ac:	fe 01       	movw	r30, r28
    21ae:	ed 5b       	subi	r30, 0xBD	; 189
    21b0:	fd 4f       	sbci	r31, 0xFD	; 253
    21b2:	80 81       	ld	r24, Z
    21b4:	91 81       	ldd	r25, Z+1	; 0x01
    21b6:	01 97       	sbiw	r24, 0x01	; 1
    21b8:	11 96       	adiw	r26, 0x01	; 1
    21ba:	9c 93       	st	X, r25
    21bc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21be:	fe 01       	movw	r30, r28
    21c0:	ed 5b       	subi	r30, 0xBD	; 189
    21c2:	fd 4f       	sbci	r31, 0xFD	; 253
    21c4:	80 81       	ld	r24, Z
    21c6:	91 81       	ldd	r25, Z+1	; 0x01
    21c8:	00 97       	sbiw	r24, 0x00	; 0
    21ca:	d1 f6       	brne	.-76     	; 0x2180 <main+0x35a>
    21cc:	27 c0       	rjmp	.+78     	; 0x221c <main+0x3f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ce:	8e 01       	movw	r16, r28
    21d0:	0d 5b       	subi	r16, 0xBD	; 189
    21d2:	1d 4f       	sbci	r17, 0xFD	; 253
    21d4:	fe 01       	movw	r30, r28
    21d6:	eb 5b       	subi	r30, 0xBB	; 187
    21d8:	fd 4f       	sbci	r31, 0xFD	; 253
    21da:	60 81       	ld	r22, Z
    21dc:	71 81       	ldd	r23, Z+1	; 0x01
    21de:	82 81       	ldd	r24, Z+2	; 0x02
    21e0:	93 81       	ldd	r25, Z+3	; 0x03
    21e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21e6:	dc 01       	movw	r26, r24
    21e8:	cb 01       	movw	r24, r22
    21ea:	f8 01       	movw	r30, r16
    21ec:	91 83       	std	Z+1, r25	; 0x01
    21ee:	80 83       	st	Z, r24
    21f0:	de 01       	movw	r26, r28
    21f2:	a1 5c       	subi	r26, 0xC1	; 193
    21f4:	bd 4f       	sbci	r27, 0xFD	; 253
    21f6:	fe 01       	movw	r30, r28
    21f8:	ed 5b       	subi	r30, 0xBD	; 189
    21fa:	fd 4f       	sbci	r31, 0xFD	; 253
    21fc:	80 81       	ld	r24, Z
    21fe:	91 81       	ldd	r25, Z+1	; 0x01
    2200:	8d 93       	st	X+, r24
    2202:	9c 93       	st	X, r25
    2204:	fe 01       	movw	r30, r28
    2206:	e1 5c       	subi	r30, 0xC1	; 193
    2208:	fd 4f       	sbci	r31, 0xFD	; 253
    220a:	80 81       	ld	r24, Z
    220c:	91 81       	ldd	r25, Z+1	; 0x01
    220e:	01 97       	sbiw	r24, 0x01	; 1
    2210:	f1 f7       	brne	.-4      	; 0x220e <main+0x3e8>
    2212:	fe 01       	movw	r30, r28
    2214:	e1 5c       	subi	r30, 0xC1	; 193
    2216:	fd 4f       	sbci	r31, 0xFD	; 253
    2218:	91 83       	std	Z+1, r25	; 0x01
    221a:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Blinking..");
    221c:	80 e6       	ldi	r24, 0x60	; 96
    221e:	90 e0       	ldi	r25, 0x00	; 0
    2220:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    2224:	80 e0       	ldi	r24, 0x00	; 0
    2226:	61 e0       	ldi	r22, 0x01	; 1
    2228:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    222c:	fe 01       	movw	r30, r28
    222e:	e5 5c       	subi	r30, 0xC5	; 197
    2230:	fd 4f       	sbci	r31, 0xFD	; 253
    2232:	80 e0       	ldi	r24, 0x00	; 0
    2234:	90 e0       	ldi	r25, 0x00	; 0
    2236:	a0 e8       	ldi	r26, 0x80	; 128
    2238:	bf e3       	ldi	r27, 0x3F	; 63
    223a:	80 83       	st	Z, r24
    223c:	91 83       	std	Z+1, r25	; 0x01
    223e:	a2 83       	std	Z+2, r26	; 0x02
    2240:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2242:	8e 01       	movw	r16, r28
    2244:	09 5c       	subi	r16, 0xC9	; 201
    2246:	1d 4f       	sbci	r17, 0xFD	; 253
    2248:	fe 01       	movw	r30, r28
    224a:	e5 5c       	subi	r30, 0xC5	; 197
    224c:	fd 4f       	sbci	r31, 0xFD	; 253
    224e:	60 81       	ld	r22, Z
    2250:	71 81       	ldd	r23, Z+1	; 0x01
    2252:	82 81       	ldd	r24, Z+2	; 0x02
    2254:	93 81       	ldd	r25, Z+3	; 0x03
    2256:	20 e0       	ldi	r18, 0x00	; 0
    2258:	30 e0       	ldi	r19, 0x00	; 0
    225a:	4a ef       	ldi	r20, 0xFA	; 250
    225c:	54 e4       	ldi	r21, 0x44	; 68
    225e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	f8 01       	movw	r30, r16
    2268:	80 83       	st	Z, r24
    226a:	91 83       	std	Z+1, r25	; 0x01
    226c:	a2 83       	std	Z+2, r26	; 0x02
    226e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2270:	fe 01       	movw	r30, r28
    2272:	e9 5c       	subi	r30, 0xC9	; 201
    2274:	fd 4f       	sbci	r31, 0xFD	; 253
    2276:	60 81       	ld	r22, Z
    2278:	71 81       	ldd	r23, Z+1	; 0x01
    227a:	82 81       	ldd	r24, Z+2	; 0x02
    227c:	93 81       	ldd	r25, Z+3	; 0x03
    227e:	20 e0       	ldi	r18, 0x00	; 0
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	40 e8       	ldi	r20, 0x80	; 128
    2284:	5f e3       	ldi	r21, 0x3F	; 63
    2286:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    228a:	88 23       	and	r24, r24
    228c:	44 f4       	brge	.+16     	; 0x229e <main+0x478>
		__ticks = 1;
    228e:	fe 01       	movw	r30, r28
    2290:	eb 5c       	subi	r30, 0xCB	; 203
    2292:	fd 4f       	sbci	r31, 0xFD	; 253
    2294:	81 e0       	ldi	r24, 0x01	; 1
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	91 83       	std	Z+1, r25	; 0x01
    229a:	80 83       	st	Z, r24
    229c:	64 c0       	rjmp	.+200    	; 0x2366 <main+0x540>
	else if (__tmp > 65535)
    229e:	fe 01       	movw	r30, r28
    22a0:	e9 5c       	subi	r30, 0xC9	; 201
    22a2:	fd 4f       	sbci	r31, 0xFD	; 253
    22a4:	60 81       	ld	r22, Z
    22a6:	71 81       	ldd	r23, Z+1	; 0x01
    22a8:	82 81       	ldd	r24, Z+2	; 0x02
    22aa:	93 81       	ldd	r25, Z+3	; 0x03
    22ac:	20 e0       	ldi	r18, 0x00	; 0
    22ae:	3f ef       	ldi	r19, 0xFF	; 255
    22b0:	4f e7       	ldi	r20, 0x7F	; 127
    22b2:	57 e4       	ldi	r21, 0x47	; 71
    22b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22b8:	18 16       	cp	r1, r24
    22ba:	0c f0       	brlt	.+2      	; 0x22be <main+0x498>
    22bc:	43 c0       	rjmp	.+134    	; 0x2344 <main+0x51e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22be:	fe 01       	movw	r30, r28
    22c0:	e5 5c       	subi	r30, 0xC5	; 197
    22c2:	fd 4f       	sbci	r31, 0xFD	; 253
    22c4:	60 81       	ld	r22, Z
    22c6:	71 81       	ldd	r23, Z+1	; 0x01
    22c8:	82 81       	ldd	r24, Z+2	; 0x02
    22ca:	93 81       	ldd	r25, Z+3	; 0x03
    22cc:	20 e0       	ldi	r18, 0x00	; 0
    22ce:	30 e0       	ldi	r19, 0x00	; 0
    22d0:	40 e2       	ldi	r20, 0x20	; 32
    22d2:	51 e4       	ldi	r21, 0x41	; 65
    22d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22d8:	dc 01       	movw	r26, r24
    22da:	cb 01       	movw	r24, r22
    22dc:	8e 01       	movw	r16, r28
    22de:	0b 5c       	subi	r16, 0xCB	; 203
    22e0:	1d 4f       	sbci	r17, 0xFD	; 253
    22e2:	bc 01       	movw	r22, r24
    22e4:	cd 01       	movw	r24, r26
    22e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22ea:	dc 01       	movw	r26, r24
    22ec:	cb 01       	movw	r24, r22
    22ee:	f8 01       	movw	r30, r16
    22f0:	91 83       	std	Z+1, r25	; 0x01
    22f2:	80 83       	st	Z, r24
    22f4:	1f c0       	rjmp	.+62     	; 0x2334 <main+0x50e>
    22f6:	fe 01       	movw	r30, r28
    22f8:	ed 5c       	subi	r30, 0xCD	; 205
    22fa:	fd 4f       	sbci	r31, 0xFD	; 253
    22fc:	88 ec       	ldi	r24, 0xC8	; 200
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	91 83       	std	Z+1, r25	; 0x01
    2302:	80 83       	st	Z, r24
    2304:	fe 01       	movw	r30, r28
    2306:	ed 5c       	subi	r30, 0xCD	; 205
    2308:	fd 4f       	sbci	r31, 0xFD	; 253
    230a:	80 81       	ld	r24, Z
    230c:	91 81       	ldd	r25, Z+1	; 0x01
    230e:	01 97       	sbiw	r24, 0x01	; 1
    2310:	f1 f7       	brne	.-4      	; 0x230e <main+0x4e8>
    2312:	fe 01       	movw	r30, r28
    2314:	ed 5c       	subi	r30, 0xCD	; 205
    2316:	fd 4f       	sbci	r31, 0xFD	; 253
    2318:	91 83       	std	Z+1, r25	; 0x01
    231a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    231c:	de 01       	movw	r26, r28
    231e:	ab 5c       	subi	r26, 0xCB	; 203
    2320:	bd 4f       	sbci	r27, 0xFD	; 253
    2322:	fe 01       	movw	r30, r28
    2324:	eb 5c       	subi	r30, 0xCB	; 203
    2326:	fd 4f       	sbci	r31, 0xFD	; 253
    2328:	80 81       	ld	r24, Z
    232a:	91 81       	ldd	r25, Z+1	; 0x01
    232c:	01 97       	sbiw	r24, 0x01	; 1
    232e:	11 96       	adiw	r26, 0x01	; 1
    2330:	9c 93       	st	X, r25
    2332:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2334:	fe 01       	movw	r30, r28
    2336:	eb 5c       	subi	r30, 0xCB	; 203
    2338:	fd 4f       	sbci	r31, 0xFD	; 253
    233a:	80 81       	ld	r24, Z
    233c:	91 81       	ldd	r25, Z+1	; 0x01
    233e:	00 97       	sbiw	r24, 0x00	; 0
    2340:	d1 f6       	brne	.-76     	; 0x22f6 <main+0x4d0>
    2342:	27 c0       	rjmp	.+78     	; 0x2392 <main+0x56c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2344:	8e 01       	movw	r16, r28
    2346:	0b 5c       	subi	r16, 0xCB	; 203
    2348:	1d 4f       	sbci	r17, 0xFD	; 253
    234a:	fe 01       	movw	r30, r28
    234c:	e9 5c       	subi	r30, 0xC9	; 201
    234e:	fd 4f       	sbci	r31, 0xFD	; 253
    2350:	60 81       	ld	r22, Z
    2352:	71 81       	ldd	r23, Z+1	; 0x01
    2354:	82 81       	ldd	r24, Z+2	; 0x02
    2356:	93 81       	ldd	r25, Z+3	; 0x03
    2358:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    235c:	dc 01       	movw	r26, r24
    235e:	cb 01       	movw	r24, r22
    2360:	f8 01       	movw	r30, r16
    2362:	91 83       	std	Z+1, r25	; 0x01
    2364:	80 83       	st	Z, r24
    2366:	de 01       	movw	r26, r28
    2368:	af 5c       	subi	r26, 0xCF	; 207
    236a:	bd 4f       	sbci	r27, 0xFD	; 253
    236c:	fe 01       	movw	r30, r28
    236e:	eb 5c       	subi	r30, 0xCB	; 203
    2370:	fd 4f       	sbci	r31, 0xFD	; 253
    2372:	80 81       	ld	r24, Z
    2374:	91 81       	ldd	r25, Z+1	; 0x01
    2376:	8d 93       	st	X+, r24
    2378:	9c 93       	st	X, r25
    237a:	fe 01       	movw	r30, r28
    237c:	ef 5c       	subi	r30, 0xCF	; 207
    237e:	fd 4f       	sbci	r31, 0xFD	; 253
    2380:	80 81       	ld	r24, Z
    2382:	91 81       	ldd	r25, Z+1	; 0x01
    2384:	01 97       	sbiw	r24, 0x01	; 1
    2386:	f1 f7       	brne	.-4      	; 0x2384 <main+0x55e>
    2388:	fe 01       	movw	r30, r28
    238a:	ef 5c       	subi	r30, 0xCF	; 207
    238c:	fd 4f       	sbci	r31, 0xFD	; 253
    238e:	91 83       	std	Z+1, r25	; 0x01
    2390:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    2392:	8b e6       	ldi	r24, 0x6B	; 107
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				LED_voidtControlAllLeds(PORT_u8B ,PORT_HIGH);
    239a:	82 e0       	ldi	r24, 0x02	; 2
    239c:	6f ef       	ldi	r22, 0xFF	; 255
    239e:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
    23a2:	fe 01       	movw	r30, r28
    23a4:	e3 5d       	subi	r30, 0xD3	; 211
    23a6:	fd 4f       	sbci	r31, 0xFD	; 253
    23a8:	80 e0       	ldi	r24, 0x00	; 0
    23aa:	90 e0       	ldi	r25, 0x00	; 0
    23ac:	aa e7       	ldi	r26, 0x7A	; 122
    23ae:	b4 e4       	ldi	r27, 0x44	; 68
    23b0:	80 83       	st	Z, r24
    23b2:	91 83       	std	Z+1, r25	; 0x01
    23b4:	a2 83       	std	Z+2, r26	; 0x02
    23b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23b8:	8e 01       	movw	r16, r28
    23ba:	07 5d       	subi	r16, 0xD7	; 215
    23bc:	1d 4f       	sbci	r17, 0xFD	; 253
    23be:	fe 01       	movw	r30, r28
    23c0:	e3 5d       	subi	r30, 0xD3	; 211
    23c2:	fd 4f       	sbci	r31, 0xFD	; 253
    23c4:	60 81       	ld	r22, Z
    23c6:	71 81       	ldd	r23, Z+1	; 0x01
    23c8:	82 81       	ldd	r24, Z+2	; 0x02
    23ca:	93 81       	ldd	r25, Z+3	; 0x03
    23cc:	20 e0       	ldi	r18, 0x00	; 0
    23ce:	30 e0       	ldi	r19, 0x00	; 0
    23d0:	4a ef       	ldi	r20, 0xFA	; 250
    23d2:	54 e4       	ldi	r21, 0x44	; 68
    23d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23d8:	dc 01       	movw	r26, r24
    23da:	cb 01       	movw	r24, r22
    23dc:	f8 01       	movw	r30, r16
    23de:	80 83       	st	Z, r24
    23e0:	91 83       	std	Z+1, r25	; 0x01
    23e2:	a2 83       	std	Z+2, r26	; 0x02
    23e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23e6:	fe 01       	movw	r30, r28
    23e8:	e7 5d       	subi	r30, 0xD7	; 215
    23ea:	fd 4f       	sbci	r31, 0xFD	; 253
    23ec:	60 81       	ld	r22, Z
    23ee:	71 81       	ldd	r23, Z+1	; 0x01
    23f0:	82 81       	ldd	r24, Z+2	; 0x02
    23f2:	93 81       	ldd	r25, Z+3	; 0x03
    23f4:	20 e0       	ldi	r18, 0x00	; 0
    23f6:	30 e0       	ldi	r19, 0x00	; 0
    23f8:	40 e8       	ldi	r20, 0x80	; 128
    23fa:	5f e3       	ldi	r21, 0x3F	; 63
    23fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2400:	88 23       	and	r24, r24
    2402:	44 f4       	brge	.+16     	; 0x2414 <main+0x5ee>
		__ticks = 1;
    2404:	fe 01       	movw	r30, r28
    2406:	e9 5d       	subi	r30, 0xD9	; 217
    2408:	fd 4f       	sbci	r31, 0xFD	; 253
    240a:	81 e0       	ldi	r24, 0x01	; 1
    240c:	90 e0       	ldi	r25, 0x00	; 0
    240e:	91 83       	std	Z+1, r25	; 0x01
    2410:	80 83       	st	Z, r24
    2412:	64 c0       	rjmp	.+200    	; 0x24dc <main+0x6b6>
	else if (__tmp > 65535)
    2414:	fe 01       	movw	r30, r28
    2416:	e7 5d       	subi	r30, 0xD7	; 215
    2418:	fd 4f       	sbci	r31, 0xFD	; 253
    241a:	60 81       	ld	r22, Z
    241c:	71 81       	ldd	r23, Z+1	; 0x01
    241e:	82 81       	ldd	r24, Z+2	; 0x02
    2420:	93 81       	ldd	r25, Z+3	; 0x03
    2422:	20 e0       	ldi	r18, 0x00	; 0
    2424:	3f ef       	ldi	r19, 0xFF	; 255
    2426:	4f e7       	ldi	r20, 0x7F	; 127
    2428:	57 e4       	ldi	r21, 0x47	; 71
    242a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    242e:	18 16       	cp	r1, r24
    2430:	0c f0       	brlt	.+2      	; 0x2434 <main+0x60e>
    2432:	43 c0       	rjmp	.+134    	; 0x24ba <main+0x694>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2434:	fe 01       	movw	r30, r28
    2436:	e3 5d       	subi	r30, 0xD3	; 211
    2438:	fd 4f       	sbci	r31, 0xFD	; 253
    243a:	60 81       	ld	r22, Z
    243c:	71 81       	ldd	r23, Z+1	; 0x01
    243e:	82 81       	ldd	r24, Z+2	; 0x02
    2440:	93 81       	ldd	r25, Z+3	; 0x03
    2442:	20 e0       	ldi	r18, 0x00	; 0
    2444:	30 e0       	ldi	r19, 0x00	; 0
    2446:	40 e2       	ldi	r20, 0x20	; 32
    2448:	51 e4       	ldi	r21, 0x41	; 65
    244a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    244e:	dc 01       	movw	r26, r24
    2450:	cb 01       	movw	r24, r22
    2452:	8e 01       	movw	r16, r28
    2454:	09 5d       	subi	r16, 0xD9	; 217
    2456:	1d 4f       	sbci	r17, 0xFD	; 253
    2458:	bc 01       	movw	r22, r24
    245a:	cd 01       	movw	r24, r26
    245c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2460:	dc 01       	movw	r26, r24
    2462:	cb 01       	movw	r24, r22
    2464:	f8 01       	movw	r30, r16
    2466:	91 83       	std	Z+1, r25	; 0x01
    2468:	80 83       	st	Z, r24
    246a:	1f c0       	rjmp	.+62     	; 0x24aa <main+0x684>
    246c:	fe 01       	movw	r30, r28
    246e:	eb 5d       	subi	r30, 0xDB	; 219
    2470:	fd 4f       	sbci	r31, 0xFD	; 253
    2472:	88 ec       	ldi	r24, 0xC8	; 200
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	91 83       	std	Z+1, r25	; 0x01
    2478:	80 83       	st	Z, r24
    247a:	fe 01       	movw	r30, r28
    247c:	eb 5d       	subi	r30, 0xDB	; 219
    247e:	fd 4f       	sbci	r31, 0xFD	; 253
    2480:	80 81       	ld	r24, Z
    2482:	91 81       	ldd	r25, Z+1	; 0x01
    2484:	01 97       	sbiw	r24, 0x01	; 1
    2486:	f1 f7       	brne	.-4      	; 0x2484 <main+0x65e>
    2488:	fe 01       	movw	r30, r28
    248a:	eb 5d       	subi	r30, 0xDB	; 219
    248c:	fd 4f       	sbci	r31, 0xFD	; 253
    248e:	91 83       	std	Z+1, r25	; 0x01
    2490:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2492:	de 01       	movw	r26, r28
    2494:	a9 5d       	subi	r26, 0xD9	; 217
    2496:	bd 4f       	sbci	r27, 0xFD	; 253
    2498:	fe 01       	movw	r30, r28
    249a:	e9 5d       	subi	r30, 0xD9	; 217
    249c:	fd 4f       	sbci	r31, 0xFD	; 253
    249e:	80 81       	ld	r24, Z
    24a0:	91 81       	ldd	r25, Z+1	; 0x01
    24a2:	01 97       	sbiw	r24, 0x01	; 1
    24a4:	11 96       	adiw	r26, 0x01	; 1
    24a6:	9c 93       	st	X, r25
    24a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24aa:	fe 01       	movw	r30, r28
    24ac:	e9 5d       	subi	r30, 0xD9	; 217
    24ae:	fd 4f       	sbci	r31, 0xFD	; 253
    24b0:	80 81       	ld	r24, Z
    24b2:	91 81       	ldd	r25, Z+1	; 0x01
    24b4:	00 97       	sbiw	r24, 0x00	; 0
    24b6:	d1 f6       	brne	.-76     	; 0x246c <main+0x646>
    24b8:	27 c0       	rjmp	.+78     	; 0x2508 <main+0x6e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24ba:	8e 01       	movw	r16, r28
    24bc:	09 5d       	subi	r16, 0xD9	; 217
    24be:	1d 4f       	sbci	r17, 0xFD	; 253
    24c0:	fe 01       	movw	r30, r28
    24c2:	e7 5d       	subi	r30, 0xD7	; 215
    24c4:	fd 4f       	sbci	r31, 0xFD	; 253
    24c6:	60 81       	ld	r22, Z
    24c8:	71 81       	ldd	r23, Z+1	; 0x01
    24ca:	82 81       	ldd	r24, Z+2	; 0x02
    24cc:	93 81       	ldd	r25, Z+3	; 0x03
    24ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24d2:	dc 01       	movw	r26, r24
    24d4:	cb 01       	movw	r24, r22
    24d6:	f8 01       	movw	r30, r16
    24d8:	91 83       	std	Z+1, r25	; 0x01
    24da:	80 83       	st	Z, r24
    24dc:	de 01       	movw	r26, r28
    24de:	ad 5d       	subi	r26, 0xDD	; 221
    24e0:	bd 4f       	sbci	r27, 0xFD	; 253
    24e2:	fe 01       	movw	r30, r28
    24e4:	e9 5d       	subi	r30, 0xD9	; 217
    24e6:	fd 4f       	sbci	r31, 0xFD	; 253
    24e8:	80 81       	ld	r24, Z
    24ea:	91 81       	ldd	r25, Z+1	; 0x01
    24ec:	8d 93       	st	X+, r24
    24ee:	9c 93       	st	X, r25
    24f0:	fe 01       	movw	r30, r28
    24f2:	ed 5d       	subi	r30, 0xDD	; 221
    24f4:	fd 4f       	sbci	r31, 0xFD	; 253
    24f6:	80 81       	ld	r24, Z
    24f8:	91 81       	ldd	r25, Z+1	; 0x01
    24fa:	01 97       	sbiw	r24, 0x01	; 1
    24fc:	f1 f7       	brne	.-4      	; 0x24fa <main+0x6d4>
    24fe:	fe 01       	movw	r30, r28
    2500:	ed 5d       	subi	r30, 0xDD	; 221
    2502:	fd 4f       	sbci	r31, 0xFD	; 253
    2504:	91 83       	std	Z+1, r25	; 0x01
    2506:	80 83       	st	Z, r24
				_delay_ms(1000);
				LED_voidtControlAllLeds(PORT_u8B ,PORT_LOW);
    2508:	82 e0       	ldi	r24, 0x02	; 2
    250a:	60 e0       	ldi	r22, 0x00	; 0
    250c:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
    2510:	fe 01       	movw	r30, r28
    2512:	e1 5e       	subi	r30, 0xE1	; 225
    2514:	fd 4f       	sbci	r31, 0xFD	; 253
    2516:	80 e0       	ldi	r24, 0x00	; 0
    2518:	90 e0       	ldi	r25, 0x00	; 0
    251a:	aa e7       	ldi	r26, 0x7A	; 122
    251c:	b4 e4       	ldi	r27, 0x44	; 68
    251e:	80 83       	st	Z, r24
    2520:	91 83       	std	Z+1, r25	; 0x01
    2522:	a2 83       	std	Z+2, r26	; 0x02
    2524:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2526:	8e 01       	movw	r16, r28
    2528:	05 5e       	subi	r16, 0xE5	; 229
    252a:	1d 4f       	sbci	r17, 0xFD	; 253
    252c:	fe 01       	movw	r30, r28
    252e:	e1 5e       	subi	r30, 0xE1	; 225
    2530:	fd 4f       	sbci	r31, 0xFD	; 253
    2532:	60 81       	ld	r22, Z
    2534:	71 81       	ldd	r23, Z+1	; 0x01
    2536:	82 81       	ldd	r24, Z+2	; 0x02
    2538:	93 81       	ldd	r25, Z+3	; 0x03
    253a:	20 e0       	ldi	r18, 0x00	; 0
    253c:	30 e0       	ldi	r19, 0x00	; 0
    253e:	4a ef       	ldi	r20, 0xFA	; 250
    2540:	54 e4       	ldi	r21, 0x44	; 68
    2542:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2546:	dc 01       	movw	r26, r24
    2548:	cb 01       	movw	r24, r22
    254a:	f8 01       	movw	r30, r16
    254c:	80 83       	st	Z, r24
    254e:	91 83       	std	Z+1, r25	; 0x01
    2550:	a2 83       	std	Z+2, r26	; 0x02
    2552:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2554:	fe 01       	movw	r30, r28
    2556:	e5 5e       	subi	r30, 0xE5	; 229
    2558:	fd 4f       	sbci	r31, 0xFD	; 253
    255a:	60 81       	ld	r22, Z
    255c:	71 81       	ldd	r23, Z+1	; 0x01
    255e:	82 81       	ldd	r24, Z+2	; 0x02
    2560:	93 81       	ldd	r25, Z+3	; 0x03
    2562:	20 e0       	ldi	r18, 0x00	; 0
    2564:	30 e0       	ldi	r19, 0x00	; 0
    2566:	40 e8       	ldi	r20, 0x80	; 128
    2568:	5f e3       	ldi	r21, 0x3F	; 63
    256a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    256e:	88 23       	and	r24, r24
    2570:	44 f4       	brge	.+16     	; 0x2582 <main+0x75c>
		__ticks = 1;
    2572:	fe 01       	movw	r30, r28
    2574:	e7 5e       	subi	r30, 0xE7	; 231
    2576:	fd 4f       	sbci	r31, 0xFD	; 253
    2578:	81 e0       	ldi	r24, 0x01	; 1
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	91 83       	std	Z+1, r25	; 0x01
    257e:	80 83       	st	Z, r24
    2580:	64 c0       	rjmp	.+200    	; 0x264a <main+0x824>
	else if (__tmp > 65535)
    2582:	fe 01       	movw	r30, r28
    2584:	e5 5e       	subi	r30, 0xE5	; 229
    2586:	fd 4f       	sbci	r31, 0xFD	; 253
    2588:	60 81       	ld	r22, Z
    258a:	71 81       	ldd	r23, Z+1	; 0x01
    258c:	82 81       	ldd	r24, Z+2	; 0x02
    258e:	93 81       	ldd	r25, Z+3	; 0x03
    2590:	20 e0       	ldi	r18, 0x00	; 0
    2592:	3f ef       	ldi	r19, 0xFF	; 255
    2594:	4f e7       	ldi	r20, 0x7F	; 127
    2596:	57 e4       	ldi	r21, 0x47	; 71
    2598:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    259c:	18 16       	cp	r1, r24
    259e:	0c f0       	brlt	.+2      	; 0x25a2 <main+0x77c>
    25a0:	43 c0       	rjmp	.+134    	; 0x2628 <main+0x802>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25a2:	fe 01       	movw	r30, r28
    25a4:	e1 5e       	subi	r30, 0xE1	; 225
    25a6:	fd 4f       	sbci	r31, 0xFD	; 253
    25a8:	60 81       	ld	r22, Z
    25aa:	71 81       	ldd	r23, Z+1	; 0x01
    25ac:	82 81       	ldd	r24, Z+2	; 0x02
    25ae:	93 81       	ldd	r25, Z+3	; 0x03
    25b0:	20 e0       	ldi	r18, 0x00	; 0
    25b2:	30 e0       	ldi	r19, 0x00	; 0
    25b4:	40 e2       	ldi	r20, 0x20	; 32
    25b6:	51 e4       	ldi	r21, 0x41	; 65
    25b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25bc:	dc 01       	movw	r26, r24
    25be:	cb 01       	movw	r24, r22
    25c0:	8e 01       	movw	r16, r28
    25c2:	07 5e       	subi	r16, 0xE7	; 231
    25c4:	1d 4f       	sbci	r17, 0xFD	; 253
    25c6:	bc 01       	movw	r22, r24
    25c8:	cd 01       	movw	r24, r26
    25ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25ce:	dc 01       	movw	r26, r24
    25d0:	cb 01       	movw	r24, r22
    25d2:	f8 01       	movw	r30, r16
    25d4:	91 83       	std	Z+1, r25	; 0x01
    25d6:	80 83       	st	Z, r24
    25d8:	1f c0       	rjmp	.+62     	; 0x2618 <main+0x7f2>
    25da:	fe 01       	movw	r30, r28
    25dc:	e9 5e       	subi	r30, 0xE9	; 233
    25de:	fd 4f       	sbci	r31, 0xFD	; 253
    25e0:	88 ec       	ldi	r24, 0xC8	; 200
    25e2:	90 e0       	ldi	r25, 0x00	; 0
    25e4:	91 83       	std	Z+1, r25	; 0x01
    25e6:	80 83       	st	Z, r24
    25e8:	fe 01       	movw	r30, r28
    25ea:	e9 5e       	subi	r30, 0xE9	; 233
    25ec:	fd 4f       	sbci	r31, 0xFD	; 253
    25ee:	80 81       	ld	r24, Z
    25f0:	91 81       	ldd	r25, Z+1	; 0x01
    25f2:	01 97       	sbiw	r24, 0x01	; 1
    25f4:	f1 f7       	brne	.-4      	; 0x25f2 <main+0x7cc>
    25f6:	fe 01       	movw	r30, r28
    25f8:	e9 5e       	subi	r30, 0xE9	; 233
    25fa:	fd 4f       	sbci	r31, 0xFD	; 253
    25fc:	91 83       	std	Z+1, r25	; 0x01
    25fe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2600:	de 01       	movw	r26, r28
    2602:	a7 5e       	subi	r26, 0xE7	; 231
    2604:	bd 4f       	sbci	r27, 0xFD	; 253
    2606:	fe 01       	movw	r30, r28
    2608:	e7 5e       	subi	r30, 0xE7	; 231
    260a:	fd 4f       	sbci	r31, 0xFD	; 253
    260c:	80 81       	ld	r24, Z
    260e:	91 81       	ldd	r25, Z+1	; 0x01
    2610:	01 97       	sbiw	r24, 0x01	; 1
    2612:	11 96       	adiw	r26, 0x01	; 1
    2614:	9c 93       	st	X, r25
    2616:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2618:	fe 01       	movw	r30, r28
    261a:	e7 5e       	subi	r30, 0xE7	; 231
    261c:	fd 4f       	sbci	r31, 0xFD	; 253
    261e:	80 81       	ld	r24, Z
    2620:	91 81       	ldd	r25, Z+1	; 0x01
    2622:	00 97       	sbiw	r24, 0x00	; 0
    2624:	d1 f6       	brne	.-76     	; 0x25da <main+0x7b4>
    2626:	27 c0       	rjmp	.+78     	; 0x2676 <main+0x850>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2628:	8e 01       	movw	r16, r28
    262a:	07 5e       	subi	r16, 0xE7	; 231
    262c:	1d 4f       	sbci	r17, 0xFD	; 253
    262e:	fe 01       	movw	r30, r28
    2630:	e5 5e       	subi	r30, 0xE5	; 229
    2632:	fd 4f       	sbci	r31, 0xFD	; 253
    2634:	60 81       	ld	r22, Z
    2636:	71 81       	ldd	r23, Z+1	; 0x01
    2638:	82 81       	ldd	r24, Z+2	; 0x02
    263a:	93 81       	ldd	r25, Z+3	; 0x03
    263c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2640:	dc 01       	movw	r26, r24
    2642:	cb 01       	movw	r24, r22
    2644:	f8 01       	movw	r30, r16
    2646:	91 83       	std	Z+1, r25	; 0x01
    2648:	80 83       	st	Z, r24
    264a:	de 01       	movw	r26, r28
    264c:	ab 5e       	subi	r26, 0xEB	; 235
    264e:	bd 4f       	sbci	r27, 0xFD	; 253
    2650:	fe 01       	movw	r30, r28
    2652:	e7 5e       	subi	r30, 0xE7	; 231
    2654:	fd 4f       	sbci	r31, 0xFD	; 253
    2656:	80 81       	ld	r24, Z
    2658:	91 81       	ldd	r25, Z+1	; 0x01
    265a:	8d 93       	st	X+, r24
    265c:	9c 93       	st	X, r25
    265e:	fe 01       	movw	r30, r28
    2660:	eb 5e       	subi	r30, 0xEB	; 235
    2662:	fd 4f       	sbci	r31, 0xFD	; 253
    2664:	80 81       	ld	r24, Z
    2666:	91 81       	ldd	r25, Z+1	; 0x01
    2668:	01 97       	sbiw	r24, 0x01	; 1
    266a:	f1 f7       	brne	.-4      	; 0x2668 <main+0x842>
    266c:	fe 01       	movw	r30, r28
    266e:	eb 5e       	subi	r30, 0xEB	; 235
    2670:	fd 4f       	sbci	r31, 0xFD	; 253
    2672:	91 83       	std	Z+1, r25	; 0x01
    2674:	80 83       	st	Z, r24
				_delay_ms(1000);
				CLCD_voidClearDisplay();
    2676:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    267a:	fe 01       	movw	r30, r28
    267c:	ef 5e       	subi	r30, 0xEF	; 239
    267e:	fd 4f       	sbci	r31, 0xFD	; 253
    2680:	80 e0       	ldi	r24, 0x00	; 0
    2682:	90 e0       	ldi	r25, 0x00	; 0
    2684:	a0 e8       	ldi	r26, 0x80	; 128
    2686:	bf e3       	ldi	r27, 0x3F	; 63
    2688:	80 83       	st	Z, r24
    268a:	91 83       	std	Z+1, r25	; 0x01
    268c:	a2 83       	std	Z+2, r26	; 0x02
    268e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2690:	8e 01       	movw	r16, r28
    2692:	03 5f       	subi	r16, 0xF3	; 243
    2694:	1d 4f       	sbci	r17, 0xFD	; 253
    2696:	fe 01       	movw	r30, r28
    2698:	ef 5e       	subi	r30, 0xEF	; 239
    269a:	fd 4f       	sbci	r31, 0xFD	; 253
    269c:	60 81       	ld	r22, Z
    269e:	71 81       	ldd	r23, Z+1	; 0x01
    26a0:	82 81       	ldd	r24, Z+2	; 0x02
    26a2:	93 81       	ldd	r25, Z+3	; 0x03
    26a4:	20 e0       	ldi	r18, 0x00	; 0
    26a6:	30 e0       	ldi	r19, 0x00	; 0
    26a8:	4a ef       	ldi	r20, 0xFA	; 250
    26aa:	54 e4       	ldi	r21, 0x44	; 68
    26ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26b0:	dc 01       	movw	r26, r24
    26b2:	cb 01       	movw	r24, r22
    26b4:	f8 01       	movw	r30, r16
    26b6:	80 83       	st	Z, r24
    26b8:	91 83       	std	Z+1, r25	; 0x01
    26ba:	a2 83       	std	Z+2, r26	; 0x02
    26bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26be:	fe 01       	movw	r30, r28
    26c0:	e3 5f       	subi	r30, 0xF3	; 243
    26c2:	fd 4f       	sbci	r31, 0xFD	; 253
    26c4:	60 81       	ld	r22, Z
    26c6:	71 81       	ldd	r23, Z+1	; 0x01
    26c8:	82 81       	ldd	r24, Z+2	; 0x02
    26ca:	93 81       	ldd	r25, Z+3	; 0x03
    26cc:	20 e0       	ldi	r18, 0x00	; 0
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	40 e8       	ldi	r20, 0x80	; 128
    26d2:	5f e3       	ldi	r21, 0x3F	; 63
    26d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26d8:	88 23       	and	r24, r24
    26da:	44 f4       	brge	.+16     	; 0x26ec <main+0x8c6>
		__ticks = 1;
    26dc:	fe 01       	movw	r30, r28
    26de:	e5 5f       	subi	r30, 0xF5	; 245
    26e0:	fd 4f       	sbci	r31, 0xFD	; 253
    26e2:	81 e0       	ldi	r24, 0x01	; 1
    26e4:	90 e0       	ldi	r25, 0x00	; 0
    26e6:	91 83       	std	Z+1, r25	; 0x01
    26e8:	80 83       	st	Z, r24
    26ea:	64 c0       	rjmp	.+200    	; 0x27b4 <main+0x98e>
	else if (__tmp > 65535)
    26ec:	fe 01       	movw	r30, r28
    26ee:	e3 5f       	subi	r30, 0xF3	; 243
    26f0:	fd 4f       	sbci	r31, 0xFD	; 253
    26f2:	60 81       	ld	r22, Z
    26f4:	71 81       	ldd	r23, Z+1	; 0x01
    26f6:	82 81       	ldd	r24, Z+2	; 0x02
    26f8:	93 81       	ldd	r25, Z+3	; 0x03
    26fa:	20 e0       	ldi	r18, 0x00	; 0
    26fc:	3f ef       	ldi	r19, 0xFF	; 255
    26fe:	4f e7       	ldi	r20, 0x7F	; 127
    2700:	57 e4       	ldi	r21, 0x47	; 71
    2702:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2706:	18 16       	cp	r1, r24
    2708:	0c f0       	brlt	.+2      	; 0x270c <main+0x8e6>
    270a:	43 c0       	rjmp	.+134    	; 0x2792 <main+0x96c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    270c:	fe 01       	movw	r30, r28
    270e:	ef 5e       	subi	r30, 0xEF	; 239
    2710:	fd 4f       	sbci	r31, 0xFD	; 253
    2712:	60 81       	ld	r22, Z
    2714:	71 81       	ldd	r23, Z+1	; 0x01
    2716:	82 81       	ldd	r24, Z+2	; 0x02
    2718:	93 81       	ldd	r25, Z+3	; 0x03
    271a:	20 e0       	ldi	r18, 0x00	; 0
    271c:	30 e0       	ldi	r19, 0x00	; 0
    271e:	40 e2       	ldi	r20, 0x20	; 32
    2720:	51 e4       	ldi	r21, 0x41	; 65
    2722:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2726:	dc 01       	movw	r26, r24
    2728:	cb 01       	movw	r24, r22
    272a:	8e 01       	movw	r16, r28
    272c:	05 5f       	subi	r16, 0xF5	; 245
    272e:	1d 4f       	sbci	r17, 0xFD	; 253
    2730:	bc 01       	movw	r22, r24
    2732:	cd 01       	movw	r24, r26
    2734:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2738:	dc 01       	movw	r26, r24
    273a:	cb 01       	movw	r24, r22
    273c:	f8 01       	movw	r30, r16
    273e:	91 83       	std	Z+1, r25	; 0x01
    2740:	80 83       	st	Z, r24
    2742:	1f c0       	rjmp	.+62     	; 0x2782 <main+0x95c>
    2744:	fe 01       	movw	r30, r28
    2746:	e7 5f       	subi	r30, 0xF7	; 247
    2748:	fd 4f       	sbci	r31, 0xFD	; 253
    274a:	88 ec       	ldi	r24, 0xC8	; 200
    274c:	90 e0       	ldi	r25, 0x00	; 0
    274e:	91 83       	std	Z+1, r25	; 0x01
    2750:	80 83       	st	Z, r24
    2752:	fe 01       	movw	r30, r28
    2754:	e7 5f       	subi	r30, 0xF7	; 247
    2756:	fd 4f       	sbci	r31, 0xFD	; 253
    2758:	80 81       	ld	r24, Z
    275a:	91 81       	ldd	r25, Z+1	; 0x01
    275c:	01 97       	sbiw	r24, 0x01	; 1
    275e:	f1 f7       	brne	.-4      	; 0x275c <main+0x936>
    2760:	fe 01       	movw	r30, r28
    2762:	e7 5f       	subi	r30, 0xF7	; 247
    2764:	fd 4f       	sbci	r31, 0xFD	; 253
    2766:	91 83       	std	Z+1, r25	; 0x01
    2768:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    276a:	de 01       	movw	r26, r28
    276c:	a5 5f       	subi	r26, 0xF5	; 245
    276e:	bd 4f       	sbci	r27, 0xFD	; 253
    2770:	fe 01       	movw	r30, r28
    2772:	e5 5f       	subi	r30, 0xF5	; 245
    2774:	fd 4f       	sbci	r31, 0xFD	; 253
    2776:	80 81       	ld	r24, Z
    2778:	91 81       	ldd	r25, Z+1	; 0x01
    277a:	01 97       	sbiw	r24, 0x01	; 1
    277c:	11 96       	adiw	r26, 0x01	; 1
    277e:	9c 93       	st	X, r25
    2780:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2782:	fe 01       	movw	r30, r28
    2784:	e5 5f       	subi	r30, 0xF5	; 245
    2786:	fd 4f       	sbci	r31, 0xFD	; 253
    2788:	80 81       	ld	r24, Z
    278a:	91 81       	ldd	r25, Z+1	; 0x01
    278c:	00 97       	sbiw	r24, 0x00	; 0
    278e:	d1 f6       	brne	.-76     	; 0x2744 <main+0x91e>
    2790:	5f cb       	rjmp	.-2370   	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2792:	8e 01       	movw	r16, r28
    2794:	05 5f       	subi	r16, 0xF5	; 245
    2796:	1d 4f       	sbci	r17, 0xFD	; 253
    2798:	fe 01       	movw	r30, r28
    279a:	e3 5f       	subi	r30, 0xF3	; 243
    279c:	fd 4f       	sbci	r31, 0xFD	; 253
    279e:	60 81       	ld	r22, Z
    27a0:	71 81       	ldd	r23, Z+1	; 0x01
    27a2:	82 81       	ldd	r24, Z+2	; 0x02
    27a4:	93 81       	ldd	r25, Z+3	; 0x03
    27a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27aa:	dc 01       	movw	r26, r24
    27ac:	cb 01       	movw	r24, r22
    27ae:	f8 01       	movw	r30, r16
    27b0:	91 83       	std	Z+1, r25	; 0x01
    27b2:	80 83       	st	Z, r24
    27b4:	de 01       	movw	r26, r28
    27b6:	a9 5f       	subi	r26, 0xF9	; 249
    27b8:	bd 4f       	sbci	r27, 0xFD	; 253
    27ba:	fe 01       	movw	r30, r28
    27bc:	e5 5f       	subi	r30, 0xF5	; 245
    27be:	fd 4f       	sbci	r31, 0xFD	; 253
    27c0:	80 81       	ld	r24, Z
    27c2:	91 81       	ldd	r25, Z+1	; 0x01
    27c4:	11 96       	adiw	r26, 0x01	; 1
    27c6:	9c 93       	st	X, r25
    27c8:	8e 93       	st	-X, r24
    27ca:	fe 01       	movw	r30, r28
    27cc:	e9 5f       	subi	r30, 0xF9	; 249
    27ce:	fd 4f       	sbci	r31, 0xFD	; 253
    27d0:	80 81       	ld	r24, Z
    27d2:	91 81       	ldd	r25, Z+1	; 0x01
    27d4:	01 97       	sbiw	r24, 0x01	; 1
    27d6:	f1 f7       	brne	.-4      	; 0x27d4 <main+0x9ae>
    27d8:	fe 01       	movw	r30, r28
    27da:	e9 5f       	subi	r30, 0xF9	; 249
    27dc:	fd 4f       	sbci	r31, 0xFD	; 253
    27de:	91 83       	std	Z+1, r25	; 0x01
    27e0:	80 83       	st	Z, r24
    27e2:	36 cb       	rjmp	.-2452   	; 0x1e50 <main+0x2a>
								_delay_ms(1);
				break;

			case 2:
				CLCD_voidSetPosition(0,0);
    27e4:	80 e0       	ldi	r24, 0x00	; 0
    27e6:	60 e0       	ldi	r22, 0x00	; 0
    27e8:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    27ec:	fe 01       	movw	r30, r28
    27ee:	ed 5f       	subi	r30, 0xFD	; 253
    27f0:	fd 4f       	sbci	r31, 0xFD	; 253
    27f2:	80 e0       	ldi	r24, 0x00	; 0
    27f4:	90 e0       	ldi	r25, 0x00	; 0
    27f6:	a0 e8       	ldi	r26, 0x80	; 128
    27f8:	bf e3       	ldi	r27, 0x3F	; 63
    27fa:	80 83       	st	Z, r24
    27fc:	91 83       	std	Z+1, r25	; 0x01
    27fe:	a2 83       	std	Z+2, r26	; 0x02
    2800:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2802:	8e 01       	movw	r16, r28
    2804:	01 50       	subi	r16, 0x01	; 1
    2806:	1e 4f       	sbci	r17, 0xFE	; 254
    2808:	fe 01       	movw	r30, r28
    280a:	ed 5f       	subi	r30, 0xFD	; 253
    280c:	fd 4f       	sbci	r31, 0xFD	; 253
    280e:	60 81       	ld	r22, Z
    2810:	71 81       	ldd	r23, Z+1	; 0x01
    2812:	82 81       	ldd	r24, Z+2	; 0x02
    2814:	93 81       	ldd	r25, Z+3	; 0x03
    2816:	20 e0       	ldi	r18, 0x00	; 0
    2818:	30 e0       	ldi	r19, 0x00	; 0
    281a:	4a ef       	ldi	r20, 0xFA	; 250
    281c:	54 e4       	ldi	r21, 0x44	; 68
    281e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2822:	dc 01       	movw	r26, r24
    2824:	cb 01       	movw	r24, r22
    2826:	f8 01       	movw	r30, r16
    2828:	80 83       	st	Z, r24
    282a:	91 83       	std	Z+1, r25	; 0x01
    282c:	a2 83       	std	Z+2, r26	; 0x02
    282e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2830:	fe 01       	movw	r30, r28
    2832:	e1 50       	subi	r30, 0x01	; 1
    2834:	fe 4f       	sbci	r31, 0xFE	; 254
    2836:	60 81       	ld	r22, Z
    2838:	71 81       	ldd	r23, Z+1	; 0x01
    283a:	82 81       	ldd	r24, Z+2	; 0x02
    283c:	93 81       	ldd	r25, Z+3	; 0x03
    283e:	20 e0       	ldi	r18, 0x00	; 0
    2840:	30 e0       	ldi	r19, 0x00	; 0
    2842:	40 e8       	ldi	r20, 0x80	; 128
    2844:	5f e3       	ldi	r21, 0x3F	; 63
    2846:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    284a:	88 23       	and	r24, r24
    284c:	44 f4       	brge	.+16     	; 0x285e <main+0xa38>
		__ticks = 1;
    284e:	fe 01       	movw	r30, r28
    2850:	e3 50       	subi	r30, 0x03	; 3
    2852:	fe 4f       	sbci	r31, 0xFE	; 254
    2854:	81 e0       	ldi	r24, 0x01	; 1
    2856:	90 e0       	ldi	r25, 0x00	; 0
    2858:	91 83       	std	Z+1, r25	; 0x01
    285a:	80 83       	st	Z, r24
    285c:	64 c0       	rjmp	.+200    	; 0x2926 <main+0xb00>
	else if (__tmp > 65535)
    285e:	fe 01       	movw	r30, r28
    2860:	e1 50       	subi	r30, 0x01	; 1
    2862:	fe 4f       	sbci	r31, 0xFE	; 254
    2864:	60 81       	ld	r22, Z
    2866:	71 81       	ldd	r23, Z+1	; 0x01
    2868:	82 81       	ldd	r24, Z+2	; 0x02
    286a:	93 81       	ldd	r25, Z+3	; 0x03
    286c:	20 e0       	ldi	r18, 0x00	; 0
    286e:	3f ef       	ldi	r19, 0xFF	; 255
    2870:	4f e7       	ldi	r20, 0x7F	; 127
    2872:	57 e4       	ldi	r21, 0x47	; 71
    2874:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2878:	18 16       	cp	r1, r24
    287a:	0c f0       	brlt	.+2      	; 0x287e <main+0xa58>
    287c:	43 c0       	rjmp	.+134    	; 0x2904 <main+0xade>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    287e:	fe 01       	movw	r30, r28
    2880:	ed 5f       	subi	r30, 0xFD	; 253
    2882:	fd 4f       	sbci	r31, 0xFD	; 253
    2884:	60 81       	ld	r22, Z
    2886:	71 81       	ldd	r23, Z+1	; 0x01
    2888:	82 81       	ldd	r24, Z+2	; 0x02
    288a:	93 81       	ldd	r25, Z+3	; 0x03
    288c:	20 e0       	ldi	r18, 0x00	; 0
    288e:	30 e0       	ldi	r19, 0x00	; 0
    2890:	40 e2       	ldi	r20, 0x20	; 32
    2892:	51 e4       	ldi	r21, 0x41	; 65
    2894:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2898:	dc 01       	movw	r26, r24
    289a:	cb 01       	movw	r24, r22
    289c:	8e 01       	movw	r16, r28
    289e:	03 50       	subi	r16, 0x03	; 3
    28a0:	1e 4f       	sbci	r17, 0xFE	; 254
    28a2:	bc 01       	movw	r22, r24
    28a4:	cd 01       	movw	r24, r26
    28a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28aa:	dc 01       	movw	r26, r24
    28ac:	cb 01       	movw	r24, r22
    28ae:	f8 01       	movw	r30, r16
    28b0:	91 83       	std	Z+1, r25	; 0x01
    28b2:	80 83       	st	Z, r24
    28b4:	1f c0       	rjmp	.+62     	; 0x28f4 <main+0xace>
    28b6:	fe 01       	movw	r30, r28
    28b8:	e5 50       	subi	r30, 0x05	; 5
    28ba:	fe 4f       	sbci	r31, 0xFE	; 254
    28bc:	88 ec       	ldi	r24, 0xC8	; 200
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	80 83       	st	Z, r24
    28c4:	fe 01       	movw	r30, r28
    28c6:	e5 50       	subi	r30, 0x05	; 5
    28c8:	fe 4f       	sbci	r31, 0xFE	; 254
    28ca:	80 81       	ld	r24, Z
    28cc:	91 81       	ldd	r25, Z+1	; 0x01
    28ce:	01 97       	sbiw	r24, 0x01	; 1
    28d0:	f1 f7       	brne	.-4      	; 0x28ce <main+0xaa8>
    28d2:	fe 01       	movw	r30, r28
    28d4:	e5 50       	subi	r30, 0x05	; 5
    28d6:	fe 4f       	sbci	r31, 0xFE	; 254
    28d8:	91 83       	std	Z+1, r25	; 0x01
    28da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28dc:	de 01       	movw	r26, r28
    28de:	a3 50       	subi	r26, 0x03	; 3
    28e0:	be 4f       	sbci	r27, 0xFE	; 254
    28e2:	fe 01       	movw	r30, r28
    28e4:	e3 50       	subi	r30, 0x03	; 3
    28e6:	fe 4f       	sbci	r31, 0xFE	; 254
    28e8:	80 81       	ld	r24, Z
    28ea:	91 81       	ldd	r25, Z+1	; 0x01
    28ec:	01 97       	sbiw	r24, 0x01	; 1
    28ee:	11 96       	adiw	r26, 0x01	; 1
    28f0:	9c 93       	st	X, r25
    28f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28f4:	fe 01       	movw	r30, r28
    28f6:	e3 50       	subi	r30, 0x03	; 3
    28f8:	fe 4f       	sbci	r31, 0xFE	; 254
    28fa:	80 81       	ld	r24, Z
    28fc:	91 81       	ldd	r25, Z+1	; 0x01
    28fe:	00 97       	sbiw	r24, 0x00	; 0
    2900:	d1 f6       	brne	.-76     	; 0x28b6 <main+0xa90>
    2902:	27 c0       	rjmp	.+78     	; 0x2952 <main+0xb2c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2904:	8e 01       	movw	r16, r28
    2906:	03 50       	subi	r16, 0x03	; 3
    2908:	1e 4f       	sbci	r17, 0xFE	; 254
    290a:	fe 01       	movw	r30, r28
    290c:	e1 50       	subi	r30, 0x01	; 1
    290e:	fe 4f       	sbci	r31, 0xFE	; 254
    2910:	60 81       	ld	r22, Z
    2912:	71 81       	ldd	r23, Z+1	; 0x01
    2914:	82 81       	ldd	r24, Z+2	; 0x02
    2916:	93 81       	ldd	r25, Z+3	; 0x03
    2918:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    291c:	dc 01       	movw	r26, r24
    291e:	cb 01       	movw	r24, r22
    2920:	f8 01       	movw	r30, r16
    2922:	91 83       	std	Z+1, r25	; 0x01
    2924:	80 83       	st	Z, r24
    2926:	de 01       	movw	r26, r28
    2928:	a7 50       	subi	r26, 0x07	; 7
    292a:	be 4f       	sbci	r27, 0xFE	; 254
    292c:	fe 01       	movw	r30, r28
    292e:	e3 50       	subi	r30, 0x03	; 3
    2930:	fe 4f       	sbci	r31, 0xFE	; 254
    2932:	80 81       	ld	r24, Z
    2934:	91 81       	ldd	r25, Z+1	; 0x01
    2936:	8d 93       	st	X+, r24
    2938:	9c 93       	st	X, r25
    293a:	fe 01       	movw	r30, r28
    293c:	e7 50       	subi	r30, 0x07	; 7
    293e:	fe 4f       	sbci	r31, 0xFE	; 254
    2940:	80 81       	ld	r24, Z
    2942:	91 81       	ldd	r25, Z+1	; 0x01
    2944:	01 97       	sbiw	r24, 0x01	; 1
    2946:	f1 f7       	brne	.-4      	; 0x2944 <main+0xb1e>
    2948:	fe 01       	movw	r30, r28
    294a:	e7 50       	subi	r30, 0x07	; 7
    294c:	fe 4f       	sbci	r31, 0xFE	; 254
    294e:	91 83       	std	Z+1, r25	; 0x01
    2950:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("SETTING ON..");
    2952:	86 e7       	ldi	r24, 0x76	; 118
    2954:	90 e0       	ldi	r25, 0x00	; 0
    2956:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    295a:	80 e0       	ldi	r24, 0x00	; 0
    295c:	61 e0       	ldi	r22, 0x01	; 1
    295e:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    2962:	fe 01       	movw	r30, r28
    2964:	eb 50       	subi	r30, 0x0B	; 11
    2966:	fe 4f       	sbci	r31, 0xFE	; 254
    2968:	80 e0       	ldi	r24, 0x00	; 0
    296a:	90 e0       	ldi	r25, 0x00	; 0
    296c:	a0 e8       	ldi	r26, 0x80	; 128
    296e:	bf e3       	ldi	r27, 0x3F	; 63
    2970:	80 83       	st	Z, r24
    2972:	91 83       	std	Z+1, r25	; 0x01
    2974:	a2 83       	std	Z+2, r26	; 0x02
    2976:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2978:	8e 01       	movw	r16, r28
    297a:	0f 50       	subi	r16, 0x0F	; 15
    297c:	1e 4f       	sbci	r17, 0xFE	; 254
    297e:	fe 01       	movw	r30, r28
    2980:	eb 50       	subi	r30, 0x0B	; 11
    2982:	fe 4f       	sbci	r31, 0xFE	; 254
    2984:	60 81       	ld	r22, Z
    2986:	71 81       	ldd	r23, Z+1	; 0x01
    2988:	82 81       	ldd	r24, Z+2	; 0x02
    298a:	93 81       	ldd	r25, Z+3	; 0x03
    298c:	20 e0       	ldi	r18, 0x00	; 0
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	4a ef       	ldi	r20, 0xFA	; 250
    2992:	54 e4       	ldi	r21, 0x44	; 68
    2994:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2998:	dc 01       	movw	r26, r24
    299a:	cb 01       	movw	r24, r22
    299c:	f8 01       	movw	r30, r16
    299e:	80 83       	st	Z, r24
    29a0:	91 83       	std	Z+1, r25	; 0x01
    29a2:	a2 83       	std	Z+2, r26	; 0x02
    29a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29a6:	fe 01       	movw	r30, r28
    29a8:	ef 50       	subi	r30, 0x0F	; 15
    29aa:	fe 4f       	sbci	r31, 0xFE	; 254
    29ac:	60 81       	ld	r22, Z
    29ae:	71 81       	ldd	r23, Z+1	; 0x01
    29b0:	82 81       	ldd	r24, Z+2	; 0x02
    29b2:	93 81       	ldd	r25, Z+3	; 0x03
    29b4:	20 e0       	ldi	r18, 0x00	; 0
    29b6:	30 e0       	ldi	r19, 0x00	; 0
    29b8:	40 e8       	ldi	r20, 0x80	; 128
    29ba:	5f e3       	ldi	r21, 0x3F	; 63
    29bc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29c0:	88 23       	and	r24, r24
    29c2:	44 f4       	brge	.+16     	; 0x29d4 <main+0xbae>
		__ticks = 1;
    29c4:	fe 01       	movw	r30, r28
    29c6:	e1 51       	subi	r30, 0x11	; 17
    29c8:	fe 4f       	sbci	r31, 0xFE	; 254
    29ca:	81 e0       	ldi	r24, 0x01	; 1
    29cc:	90 e0       	ldi	r25, 0x00	; 0
    29ce:	91 83       	std	Z+1, r25	; 0x01
    29d0:	80 83       	st	Z, r24
    29d2:	64 c0       	rjmp	.+200    	; 0x2a9c <main+0xc76>
	else if (__tmp > 65535)
    29d4:	fe 01       	movw	r30, r28
    29d6:	ef 50       	subi	r30, 0x0F	; 15
    29d8:	fe 4f       	sbci	r31, 0xFE	; 254
    29da:	60 81       	ld	r22, Z
    29dc:	71 81       	ldd	r23, Z+1	; 0x01
    29de:	82 81       	ldd	r24, Z+2	; 0x02
    29e0:	93 81       	ldd	r25, Z+3	; 0x03
    29e2:	20 e0       	ldi	r18, 0x00	; 0
    29e4:	3f ef       	ldi	r19, 0xFF	; 255
    29e6:	4f e7       	ldi	r20, 0x7F	; 127
    29e8:	57 e4       	ldi	r21, 0x47	; 71
    29ea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29ee:	18 16       	cp	r1, r24
    29f0:	0c f0       	brlt	.+2      	; 0x29f4 <main+0xbce>
    29f2:	43 c0       	rjmp	.+134    	; 0x2a7a <main+0xc54>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29f4:	fe 01       	movw	r30, r28
    29f6:	eb 50       	subi	r30, 0x0B	; 11
    29f8:	fe 4f       	sbci	r31, 0xFE	; 254
    29fa:	60 81       	ld	r22, Z
    29fc:	71 81       	ldd	r23, Z+1	; 0x01
    29fe:	82 81       	ldd	r24, Z+2	; 0x02
    2a00:	93 81       	ldd	r25, Z+3	; 0x03
    2a02:	20 e0       	ldi	r18, 0x00	; 0
    2a04:	30 e0       	ldi	r19, 0x00	; 0
    2a06:	40 e2       	ldi	r20, 0x20	; 32
    2a08:	51 e4       	ldi	r21, 0x41	; 65
    2a0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a0e:	dc 01       	movw	r26, r24
    2a10:	cb 01       	movw	r24, r22
    2a12:	8e 01       	movw	r16, r28
    2a14:	01 51       	subi	r16, 0x11	; 17
    2a16:	1e 4f       	sbci	r17, 0xFE	; 254
    2a18:	bc 01       	movw	r22, r24
    2a1a:	cd 01       	movw	r24, r26
    2a1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a20:	dc 01       	movw	r26, r24
    2a22:	cb 01       	movw	r24, r22
    2a24:	f8 01       	movw	r30, r16
    2a26:	91 83       	std	Z+1, r25	; 0x01
    2a28:	80 83       	st	Z, r24
    2a2a:	1f c0       	rjmp	.+62     	; 0x2a6a <main+0xc44>
    2a2c:	fe 01       	movw	r30, r28
    2a2e:	e3 51       	subi	r30, 0x13	; 19
    2a30:	fe 4f       	sbci	r31, 0xFE	; 254
    2a32:	88 ec       	ldi	r24, 0xC8	; 200
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	91 83       	std	Z+1, r25	; 0x01
    2a38:	80 83       	st	Z, r24
    2a3a:	fe 01       	movw	r30, r28
    2a3c:	e3 51       	subi	r30, 0x13	; 19
    2a3e:	fe 4f       	sbci	r31, 0xFE	; 254
    2a40:	80 81       	ld	r24, Z
    2a42:	91 81       	ldd	r25, Z+1	; 0x01
    2a44:	01 97       	sbiw	r24, 0x01	; 1
    2a46:	f1 f7       	brne	.-4      	; 0x2a44 <main+0xc1e>
    2a48:	fe 01       	movw	r30, r28
    2a4a:	e3 51       	subi	r30, 0x13	; 19
    2a4c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a4e:	91 83       	std	Z+1, r25	; 0x01
    2a50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a52:	de 01       	movw	r26, r28
    2a54:	a1 51       	subi	r26, 0x11	; 17
    2a56:	be 4f       	sbci	r27, 0xFE	; 254
    2a58:	fe 01       	movw	r30, r28
    2a5a:	e1 51       	subi	r30, 0x11	; 17
    2a5c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a5e:	80 81       	ld	r24, Z
    2a60:	91 81       	ldd	r25, Z+1	; 0x01
    2a62:	01 97       	sbiw	r24, 0x01	; 1
    2a64:	11 96       	adiw	r26, 0x01	; 1
    2a66:	9c 93       	st	X, r25
    2a68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a6a:	fe 01       	movw	r30, r28
    2a6c:	e1 51       	subi	r30, 0x11	; 17
    2a6e:	fe 4f       	sbci	r31, 0xFE	; 254
    2a70:	80 81       	ld	r24, Z
    2a72:	91 81       	ldd	r25, Z+1	; 0x01
    2a74:	00 97       	sbiw	r24, 0x00	; 0
    2a76:	d1 f6       	brne	.-76     	; 0x2a2c <main+0xc06>
    2a78:	27 c0       	rjmp	.+78     	; 0x2ac8 <main+0xca2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a7a:	8e 01       	movw	r16, r28
    2a7c:	01 51       	subi	r16, 0x11	; 17
    2a7e:	1e 4f       	sbci	r17, 0xFE	; 254
    2a80:	fe 01       	movw	r30, r28
    2a82:	ef 50       	subi	r30, 0x0F	; 15
    2a84:	fe 4f       	sbci	r31, 0xFE	; 254
    2a86:	60 81       	ld	r22, Z
    2a88:	71 81       	ldd	r23, Z+1	; 0x01
    2a8a:	82 81       	ldd	r24, Z+2	; 0x02
    2a8c:	93 81       	ldd	r25, Z+3	; 0x03
    2a8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a92:	dc 01       	movw	r26, r24
    2a94:	cb 01       	movw	r24, r22
    2a96:	f8 01       	movw	r30, r16
    2a98:	91 83       	std	Z+1, r25	; 0x01
    2a9a:	80 83       	st	Z, r24
    2a9c:	de 01       	movw	r26, r28
    2a9e:	a5 51       	subi	r26, 0x15	; 21
    2aa0:	be 4f       	sbci	r27, 0xFE	; 254
    2aa2:	fe 01       	movw	r30, r28
    2aa4:	e1 51       	subi	r30, 0x11	; 17
    2aa6:	fe 4f       	sbci	r31, 0xFE	; 254
    2aa8:	80 81       	ld	r24, Z
    2aaa:	91 81       	ldd	r25, Z+1	; 0x01
    2aac:	8d 93       	st	X+, r24
    2aae:	9c 93       	st	X, r25
    2ab0:	fe 01       	movw	r30, r28
    2ab2:	e5 51       	subi	r30, 0x15	; 21
    2ab4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ab6:	80 81       	ld	r24, Z
    2ab8:	91 81       	ldd	r25, Z+1	; 0x01
    2aba:	01 97       	sbiw	r24, 0x01	; 1
    2abc:	f1 f7       	brne	.-4      	; 0x2aba <main+0xc94>
    2abe:	fe 01       	movw	r30, r28
    2ac0:	e5 51       	subi	r30, 0x15	; 21
    2ac2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ac4:	91 83       	std	Z+1, r25	; 0x01
    2ac6:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    2ac8:	8b e6       	ldi	r24, 0x6B	; 107
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    2ad0:	09 c0       	rjmp	.+18     	; 0x2ae4 <main+0xcbe>
				while(Copy_u8KpdValue != 13){
					LED_voidToggleAllLeds(PORT_u8B);
    2ad2:	82 e0       	ldi	r24, 0x02	; 2
    2ad4:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <LED_voidToggleAllLeds>
					Copy_u8KpdValue=KPD_u8GetKeyState();
    2ad8:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    2adc:	fe 01       	movw	r30, r28
    2ade:	ed 59       	subi	r30, 0x9D	; 157
    2ae0:	fd 4f       	sbci	r31, 0xFD	; 253
    2ae2:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("SETTING ON..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
    2ae4:	fe 01       	movw	r30, r28
    2ae6:	ed 59       	subi	r30, 0x9D	; 157
    2ae8:	fd 4f       	sbci	r31, 0xFD	; 253
    2aea:	80 81       	ld	r24, Z
    2aec:	8d 30       	cpi	r24, 0x0D	; 13
    2aee:	89 f7       	brne	.-30     	; 0x2ad2 <main+0xcac>
					LED_voidToggleAllLeds(PORT_u8B);
					Copy_u8KpdValue=KPD_u8GetKeyState();
				}
				LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    2af0:	82 e0       	ldi	r24, 0x02	; 2
    2af2:	60 e0       	ldi	r22, 0x00	; 0
    2af4:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
				CLCD_voidClearDisplay();
    2af8:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    2afc:	fe 01       	movw	r30, r28
    2afe:	e9 51       	subi	r30, 0x19	; 25
    2b00:	fe 4f       	sbci	r31, 0xFE	; 254
    2b02:	80 e0       	ldi	r24, 0x00	; 0
    2b04:	90 e0       	ldi	r25, 0x00	; 0
    2b06:	a0 e8       	ldi	r26, 0x80	; 128
    2b08:	bf e3       	ldi	r27, 0x3F	; 63
    2b0a:	80 83       	st	Z, r24
    2b0c:	91 83       	std	Z+1, r25	; 0x01
    2b0e:	a2 83       	std	Z+2, r26	; 0x02
    2b10:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b12:	8e 01       	movw	r16, r28
    2b14:	0d 51       	subi	r16, 0x1D	; 29
    2b16:	1e 4f       	sbci	r17, 0xFE	; 254
    2b18:	fe 01       	movw	r30, r28
    2b1a:	e9 51       	subi	r30, 0x19	; 25
    2b1c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b1e:	60 81       	ld	r22, Z
    2b20:	71 81       	ldd	r23, Z+1	; 0x01
    2b22:	82 81       	ldd	r24, Z+2	; 0x02
    2b24:	93 81       	ldd	r25, Z+3	; 0x03
    2b26:	20 e0       	ldi	r18, 0x00	; 0
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	4a ef       	ldi	r20, 0xFA	; 250
    2b2c:	54 e4       	ldi	r21, 0x44	; 68
    2b2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b32:	dc 01       	movw	r26, r24
    2b34:	cb 01       	movw	r24, r22
    2b36:	f8 01       	movw	r30, r16
    2b38:	80 83       	st	Z, r24
    2b3a:	91 83       	std	Z+1, r25	; 0x01
    2b3c:	a2 83       	std	Z+2, r26	; 0x02
    2b3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b40:	fe 01       	movw	r30, r28
    2b42:	ed 51       	subi	r30, 0x1D	; 29
    2b44:	fe 4f       	sbci	r31, 0xFE	; 254
    2b46:	60 81       	ld	r22, Z
    2b48:	71 81       	ldd	r23, Z+1	; 0x01
    2b4a:	82 81       	ldd	r24, Z+2	; 0x02
    2b4c:	93 81       	ldd	r25, Z+3	; 0x03
    2b4e:	20 e0       	ldi	r18, 0x00	; 0
    2b50:	30 e0       	ldi	r19, 0x00	; 0
    2b52:	40 e8       	ldi	r20, 0x80	; 128
    2b54:	5f e3       	ldi	r21, 0x3F	; 63
    2b56:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b5a:	88 23       	and	r24, r24
    2b5c:	44 f4       	brge	.+16     	; 0x2b6e <main+0xd48>
		__ticks = 1;
    2b5e:	fe 01       	movw	r30, r28
    2b60:	ef 51       	subi	r30, 0x1F	; 31
    2b62:	fe 4f       	sbci	r31, 0xFE	; 254
    2b64:	81 e0       	ldi	r24, 0x01	; 1
    2b66:	90 e0       	ldi	r25, 0x00	; 0
    2b68:	91 83       	std	Z+1, r25	; 0x01
    2b6a:	80 83       	st	Z, r24
    2b6c:	64 c0       	rjmp	.+200    	; 0x2c36 <main+0xe10>
	else if (__tmp > 65535)
    2b6e:	fe 01       	movw	r30, r28
    2b70:	ed 51       	subi	r30, 0x1D	; 29
    2b72:	fe 4f       	sbci	r31, 0xFE	; 254
    2b74:	60 81       	ld	r22, Z
    2b76:	71 81       	ldd	r23, Z+1	; 0x01
    2b78:	82 81       	ldd	r24, Z+2	; 0x02
    2b7a:	93 81       	ldd	r25, Z+3	; 0x03
    2b7c:	20 e0       	ldi	r18, 0x00	; 0
    2b7e:	3f ef       	ldi	r19, 0xFF	; 255
    2b80:	4f e7       	ldi	r20, 0x7F	; 127
    2b82:	57 e4       	ldi	r21, 0x47	; 71
    2b84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b88:	18 16       	cp	r1, r24
    2b8a:	0c f0       	brlt	.+2      	; 0x2b8e <main+0xd68>
    2b8c:	43 c0       	rjmp	.+134    	; 0x2c14 <main+0xdee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b8e:	fe 01       	movw	r30, r28
    2b90:	e9 51       	subi	r30, 0x19	; 25
    2b92:	fe 4f       	sbci	r31, 0xFE	; 254
    2b94:	60 81       	ld	r22, Z
    2b96:	71 81       	ldd	r23, Z+1	; 0x01
    2b98:	82 81       	ldd	r24, Z+2	; 0x02
    2b9a:	93 81       	ldd	r25, Z+3	; 0x03
    2b9c:	20 e0       	ldi	r18, 0x00	; 0
    2b9e:	30 e0       	ldi	r19, 0x00	; 0
    2ba0:	40 e2       	ldi	r20, 0x20	; 32
    2ba2:	51 e4       	ldi	r21, 0x41	; 65
    2ba4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ba8:	dc 01       	movw	r26, r24
    2baa:	cb 01       	movw	r24, r22
    2bac:	8e 01       	movw	r16, r28
    2bae:	0f 51       	subi	r16, 0x1F	; 31
    2bb0:	1e 4f       	sbci	r17, 0xFE	; 254
    2bb2:	bc 01       	movw	r22, r24
    2bb4:	cd 01       	movw	r24, r26
    2bb6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bba:	dc 01       	movw	r26, r24
    2bbc:	cb 01       	movw	r24, r22
    2bbe:	f8 01       	movw	r30, r16
    2bc0:	91 83       	std	Z+1, r25	; 0x01
    2bc2:	80 83       	st	Z, r24
    2bc4:	1f c0       	rjmp	.+62     	; 0x2c04 <main+0xdde>
    2bc6:	fe 01       	movw	r30, r28
    2bc8:	e1 52       	subi	r30, 0x21	; 33
    2bca:	fe 4f       	sbci	r31, 0xFE	; 254
    2bcc:	88 ec       	ldi	r24, 0xC8	; 200
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	91 83       	std	Z+1, r25	; 0x01
    2bd2:	80 83       	st	Z, r24
    2bd4:	fe 01       	movw	r30, r28
    2bd6:	e1 52       	subi	r30, 0x21	; 33
    2bd8:	fe 4f       	sbci	r31, 0xFE	; 254
    2bda:	80 81       	ld	r24, Z
    2bdc:	91 81       	ldd	r25, Z+1	; 0x01
    2bde:	01 97       	sbiw	r24, 0x01	; 1
    2be0:	f1 f7       	brne	.-4      	; 0x2bde <main+0xdb8>
    2be2:	fe 01       	movw	r30, r28
    2be4:	e1 52       	subi	r30, 0x21	; 33
    2be6:	fe 4f       	sbci	r31, 0xFE	; 254
    2be8:	91 83       	std	Z+1, r25	; 0x01
    2bea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bec:	de 01       	movw	r26, r28
    2bee:	af 51       	subi	r26, 0x1F	; 31
    2bf0:	be 4f       	sbci	r27, 0xFE	; 254
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	ef 51       	subi	r30, 0x1F	; 31
    2bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf8:	80 81       	ld	r24, Z
    2bfa:	91 81       	ldd	r25, Z+1	; 0x01
    2bfc:	01 97       	sbiw	r24, 0x01	; 1
    2bfe:	11 96       	adiw	r26, 0x01	; 1
    2c00:	9c 93       	st	X, r25
    2c02:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c04:	fe 01       	movw	r30, r28
    2c06:	ef 51       	subi	r30, 0x1F	; 31
    2c08:	fe 4f       	sbci	r31, 0xFE	; 254
    2c0a:	80 81       	ld	r24, Z
    2c0c:	91 81       	ldd	r25, Z+1	; 0x01
    2c0e:	00 97       	sbiw	r24, 0x00	; 0
    2c10:	d1 f6       	brne	.-76     	; 0x2bc6 <main+0xda0>
    2c12:	1e c9       	rjmp	.-3524   	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c14:	8e 01       	movw	r16, r28
    2c16:	0f 51       	subi	r16, 0x1F	; 31
    2c18:	1e 4f       	sbci	r17, 0xFE	; 254
    2c1a:	fe 01       	movw	r30, r28
    2c1c:	ed 51       	subi	r30, 0x1D	; 29
    2c1e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c20:	60 81       	ld	r22, Z
    2c22:	71 81       	ldd	r23, Z+1	; 0x01
    2c24:	82 81       	ldd	r24, Z+2	; 0x02
    2c26:	93 81       	ldd	r25, Z+3	; 0x03
    2c28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c2c:	dc 01       	movw	r26, r24
    2c2e:	cb 01       	movw	r24, r22
    2c30:	f8 01       	movw	r30, r16
    2c32:	91 83       	std	Z+1, r25	; 0x01
    2c34:	80 83       	st	Z, r24
    2c36:	de 01       	movw	r26, r28
    2c38:	a3 52       	subi	r26, 0x23	; 35
    2c3a:	be 4f       	sbci	r27, 0xFE	; 254
    2c3c:	fe 01       	movw	r30, r28
    2c3e:	ef 51       	subi	r30, 0x1F	; 31
    2c40:	fe 4f       	sbci	r31, 0xFE	; 254
    2c42:	80 81       	ld	r24, Z
    2c44:	91 81       	ldd	r25, Z+1	; 0x01
    2c46:	11 96       	adiw	r26, 0x01	; 1
    2c48:	9c 93       	st	X, r25
    2c4a:	8e 93       	st	-X, r24
    2c4c:	fe 01       	movw	r30, r28
    2c4e:	e3 52       	subi	r30, 0x23	; 35
    2c50:	fe 4f       	sbci	r31, 0xFE	; 254
    2c52:	80 81       	ld	r24, Z
    2c54:	91 81       	ldd	r25, Z+1	; 0x01
    2c56:	01 97       	sbiw	r24, 0x01	; 1
    2c58:	f1 f7       	brne	.-4      	; 0x2c56 <main+0xe30>
    2c5a:	fe 01       	movw	r30, r28
    2c5c:	e3 52       	subi	r30, 0x23	; 35
    2c5e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c60:	91 83       	std	Z+1, r25	; 0x01
    2c62:	80 83       	st	Z, r24
    2c64:	f5 c8       	rjmp	.-3606   	; 0x1e50 <main+0x2a>
				_delay_ms(1);
				break;
			case 3:
				CLCD_voidSetPosition(0,0);
    2c66:	80 e0       	ldi	r24, 0x00	; 0
    2c68:	60 e0       	ldi	r22, 0x00	; 0
    2c6a:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    2c6e:	fe 01       	movw	r30, r28
    2c70:	e7 52       	subi	r30, 0x27	; 39
    2c72:	fe 4f       	sbci	r31, 0xFE	; 254
    2c74:	80 e0       	ldi	r24, 0x00	; 0
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	a0 e8       	ldi	r26, 0x80	; 128
    2c7a:	bf e3       	ldi	r27, 0x3F	; 63
    2c7c:	80 83       	st	Z, r24
    2c7e:	91 83       	std	Z+1, r25	; 0x01
    2c80:	a2 83       	std	Z+2, r26	; 0x02
    2c82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c84:	8e 01       	movw	r16, r28
    2c86:	0b 52       	subi	r16, 0x2B	; 43
    2c88:	1e 4f       	sbci	r17, 0xFE	; 254
    2c8a:	fe 01       	movw	r30, r28
    2c8c:	e7 52       	subi	r30, 0x27	; 39
    2c8e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c90:	60 81       	ld	r22, Z
    2c92:	71 81       	ldd	r23, Z+1	; 0x01
    2c94:	82 81       	ldd	r24, Z+2	; 0x02
    2c96:	93 81       	ldd	r25, Z+3	; 0x03
    2c98:	20 e0       	ldi	r18, 0x00	; 0
    2c9a:	30 e0       	ldi	r19, 0x00	; 0
    2c9c:	4a ef       	ldi	r20, 0xFA	; 250
    2c9e:	54 e4       	ldi	r21, 0x44	; 68
    2ca0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ca4:	dc 01       	movw	r26, r24
    2ca6:	cb 01       	movw	r24, r22
    2ca8:	f8 01       	movw	r30, r16
    2caa:	80 83       	st	Z, r24
    2cac:	91 83       	std	Z+1, r25	; 0x01
    2cae:	a2 83       	std	Z+2, r26	; 0x02
    2cb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cb2:	fe 01       	movw	r30, r28
    2cb4:	eb 52       	subi	r30, 0x2B	; 43
    2cb6:	fe 4f       	sbci	r31, 0xFE	; 254
    2cb8:	60 81       	ld	r22, Z
    2cba:	71 81       	ldd	r23, Z+1	; 0x01
    2cbc:	82 81       	ldd	r24, Z+2	; 0x02
    2cbe:	93 81       	ldd	r25, Z+3	; 0x03
    2cc0:	20 e0       	ldi	r18, 0x00	; 0
    2cc2:	30 e0       	ldi	r19, 0x00	; 0
    2cc4:	40 e8       	ldi	r20, 0x80	; 128
    2cc6:	5f e3       	ldi	r21, 0x3F	; 63
    2cc8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ccc:	88 23       	and	r24, r24
    2cce:	44 f4       	brge	.+16     	; 0x2ce0 <main+0xeba>
		__ticks = 1;
    2cd0:	fe 01       	movw	r30, r28
    2cd2:	ed 52       	subi	r30, 0x2D	; 45
    2cd4:	fe 4f       	sbci	r31, 0xFE	; 254
    2cd6:	81 e0       	ldi	r24, 0x01	; 1
    2cd8:	90 e0       	ldi	r25, 0x00	; 0
    2cda:	91 83       	std	Z+1, r25	; 0x01
    2cdc:	80 83       	st	Z, r24
    2cde:	64 c0       	rjmp	.+200    	; 0x2da8 <main+0xf82>
	else if (__tmp > 65535)
    2ce0:	fe 01       	movw	r30, r28
    2ce2:	eb 52       	subi	r30, 0x2B	; 43
    2ce4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ce6:	60 81       	ld	r22, Z
    2ce8:	71 81       	ldd	r23, Z+1	; 0x01
    2cea:	82 81       	ldd	r24, Z+2	; 0x02
    2cec:	93 81       	ldd	r25, Z+3	; 0x03
    2cee:	20 e0       	ldi	r18, 0x00	; 0
    2cf0:	3f ef       	ldi	r19, 0xFF	; 255
    2cf2:	4f e7       	ldi	r20, 0x7F	; 127
    2cf4:	57 e4       	ldi	r21, 0x47	; 71
    2cf6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cfa:	18 16       	cp	r1, r24
    2cfc:	0c f0       	brlt	.+2      	; 0x2d00 <main+0xeda>
    2cfe:	43 c0       	rjmp	.+134    	; 0x2d86 <main+0xf60>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d00:	fe 01       	movw	r30, r28
    2d02:	e7 52       	subi	r30, 0x27	; 39
    2d04:	fe 4f       	sbci	r31, 0xFE	; 254
    2d06:	60 81       	ld	r22, Z
    2d08:	71 81       	ldd	r23, Z+1	; 0x01
    2d0a:	82 81       	ldd	r24, Z+2	; 0x02
    2d0c:	93 81       	ldd	r25, Z+3	; 0x03
    2d0e:	20 e0       	ldi	r18, 0x00	; 0
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	40 e2       	ldi	r20, 0x20	; 32
    2d14:	51 e4       	ldi	r21, 0x41	; 65
    2d16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d1a:	dc 01       	movw	r26, r24
    2d1c:	cb 01       	movw	r24, r22
    2d1e:	8e 01       	movw	r16, r28
    2d20:	0d 52       	subi	r16, 0x2D	; 45
    2d22:	1e 4f       	sbci	r17, 0xFE	; 254
    2d24:	bc 01       	movw	r22, r24
    2d26:	cd 01       	movw	r24, r26
    2d28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d2c:	dc 01       	movw	r26, r24
    2d2e:	cb 01       	movw	r24, r22
    2d30:	f8 01       	movw	r30, r16
    2d32:	91 83       	std	Z+1, r25	; 0x01
    2d34:	80 83       	st	Z, r24
    2d36:	1f c0       	rjmp	.+62     	; 0x2d76 <main+0xf50>
    2d38:	fe 01       	movw	r30, r28
    2d3a:	ef 52       	subi	r30, 0x2F	; 47
    2d3c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d3e:	88 ec       	ldi	r24, 0xC8	; 200
    2d40:	90 e0       	ldi	r25, 0x00	; 0
    2d42:	91 83       	std	Z+1, r25	; 0x01
    2d44:	80 83       	st	Z, r24
    2d46:	fe 01       	movw	r30, r28
    2d48:	ef 52       	subi	r30, 0x2F	; 47
    2d4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d4c:	80 81       	ld	r24, Z
    2d4e:	91 81       	ldd	r25, Z+1	; 0x01
    2d50:	01 97       	sbiw	r24, 0x01	; 1
    2d52:	f1 f7       	brne	.-4      	; 0x2d50 <main+0xf2a>
    2d54:	fe 01       	movw	r30, r28
    2d56:	ef 52       	subi	r30, 0x2F	; 47
    2d58:	fe 4f       	sbci	r31, 0xFE	; 254
    2d5a:	91 83       	std	Z+1, r25	; 0x01
    2d5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d5e:	de 01       	movw	r26, r28
    2d60:	ad 52       	subi	r26, 0x2D	; 45
    2d62:	be 4f       	sbci	r27, 0xFE	; 254
    2d64:	fe 01       	movw	r30, r28
    2d66:	ed 52       	subi	r30, 0x2D	; 45
    2d68:	fe 4f       	sbci	r31, 0xFE	; 254
    2d6a:	80 81       	ld	r24, Z
    2d6c:	91 81       	ldd	r25, Z+1	; 0x01
    2d6e:	01 97       	sbiw	r24, 0x01	; 1
    2d70:	11 96       	adiw	r26, 0x01	; 1
    2d72:	9c 93       	st	X, r25
    2d74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d76:	fe 01       	movw	r30, r28
    2d78:	ed 52       	subi	r30, 0x2D	; 45
    2d7a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d7c:	80 81       	ld	r24, Z
    2d7e:	91 81       	ldd	r25, Z+1	; 0x01
    2d80:	00 97       	sbiw	r24, 0x00	; 0
    2d82:	d1 f6       	brne	.-76     	; 0x2d38 <main+0xf12>
    2d84:	27 c0       	rjmp	.+78     	; 0x2dd4 <main+0xfae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d86:	8e 01       	movw	r16, r28
    2d88:	0d 52       	subi	r16, 0x2D	; 45
    2d8a:	1e 4f       	sbci	r17, 0xFE	; 254
    2d8c:	fe 01       	movw	r30, r28
    2d8e:	eb 52       	subi	r30, 0x2B	; 43
    2d90:	fe 4f       	sbci	r31, 0xFE	; 254
    2d92:	60 81       	ld	r22, Z
    2d94:	71 81       	ldd	r23, Z+1	; 0x01
    2d96:	82 81       	ldd	r24, Z+2	; 0x02
    2d98:	93 81       	ldd	r25, Z+3	; 0x03
    2d9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d9e:	dc 01       	movw	r26, r24
    2da0:	cb 01       	movw	r24, r22
    2da2:	f8 01       	movw	r30, r16
    2da4:	91 83       	std	Z+1, r25	; 0x01
    2da6:	80 83       	st	Z, r24
    2da8:	de 01       	movw	r26, r28
    2daa:	a1 53       	subi	r26, 0x31	; 49
    2dac:	be 4f       	sbci	r27, 0xFE	; 254
    2dae:	fe 01       	movw	r30, r28
    2db0:	ed 52       	subi	r30, 0x2D	; 45
    2db2:	fe 4f       	sbci	r31, 0xFE	; 254
    2db4:	80 81       	ld	r24, Z
    2db6:	91 81       	ldd	r25, Z+1	; 0x01
    2db8:	8d 93       	st	X+, r24
    2dba:	9c 93       	st	X, r25
    2dbc:	fe 01       	movw	r30, r28
    2dbe:	e1 53       	subi	r30, 0x31	; 49
    2dc0:	fe 4f       	sbci	r31, 0xFE	; 254
    2dc2:	80 81       	ld	r24, Z
    2dc4:	91 81       	ldd	r25, Z+1	; 0x01
    2dc6:	01 97       	sbiw	r24, 0x01	; 1
    2dc8:	f1 f7       	brne	.-4      	; 0x2dc6 <main+0xfa0>
    2dca:	fe 01       	movw	r30, r28
    2dcc:	e1 53       	subi	r30, 0x31	; 49
    2dce:	fe 4f       	sbci	r31, 0xFE	; 254
    2dd0:	91 83       	std	Z+1, r25	; 0x01
    2dd2:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Chaser..");
    2dd4:	83 e8       	ldi	r24, 0x83	; 131
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    2ddc:	80 e0       	ldi	r24, 0x00	; 0
    2dde:	61 e0       	ldi	r22, 0x01	; 1
    2de0:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    2de4:	fe 01       	movw	r30, r28
    2de6:	e5 53       	subi	r30, 0x35	; 53
    2de8:	fe 4f       	sbci	r31, 0xFE	; 254
    2dea:	80 e0       	ldi	r24, 0x00	; 0
    2dec:	90 e0       	ldi	r25, 0x00	; 0
    2dee:	a0 e8       	ldi	r26, 0x80	; 128
    2df0:	bf e3       	ldi	r27, 0x3F	; 63
    2df2:	80 83       	st	Z, r24
    2df4:	91 83       	std	Z+1, r25	; 0x01
    2df6:	a2 83       	std	Z+2, r26	; 0x02
    2df8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dfa:	8e 01       	movw	r16, r28
    2dfc:	09 53       	subi	r16, 0x39	; 57
    2dfe:	1e 4f       	sbci	r17, 0xFE	; 254
    2e00:	fe 01       	movw	r30, r28
    2e02:	e5 53       	subi	r30, 0x35	; 53
    2e04:	fe 4f       	sbci	r31, 0xFE	; 254
    2e06:	60 81       	ld	r22, Z
    2e08:	71 81       	ldd	r23, Z+1	; 0x01
    2e0a:	82 81       	ldd	r24, Z+2	; 0x02
    2e0c:	93 81       	ldd	r25, Z+3	; 0x03
    2e0e:	20 e0       	ldi	r18, 0x00	; 0
    2e10:	30 e0       	ldi	r19, 0x00	; 0
    2e12:	4a ef       	ldi	r20, 0xFA	; 250
    2e14:	54 e4       	ldi	r21, 0x44	; 68
    2e16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e1a:	dc 01       	movw	r26, r24
    2e1c:	cb 01       	movw	r24, r22
    2e1e:	f8 01       	movw	r30, r16
    2e20:	80 83       	st	Z, r24
    2e22:	91 83       	std	Z+1, r25	; 0x01
    2e24:	a2 83       	std	Z+2, r26	; 0x02
    2e26:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e28:	fe 01       	movw	r30, r28
    2e2a:	e9 53       	subi	r30, 0x39	; 57
    2e2c:	fe 4f       	sbci	r31, 0xFE	; 254
    2e2e:	60 81       	ld	r22, Z
    2e30:	71 81       	ldd	r23, Z+1	; 0x01
    2e32:	82 81       	ldd	r24, Z+2	; 0x02
    2e34:	93 81       	ldd	r25, Z+3	; 0x03
    2e36:	20 e0       	ldi	r18, 0x00	; 0
    2e38:	30 e0       	ldi	r19, 0x00	; 0
    2e3a:	40 e8       	ldi	r20, 0x80	; 128
    2e3c:	5f e3       	ldi	r21, 0x3F	; 63
    2e3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e42:	88 23       	and	r24, r24
    2e44:	44 f4       	brge	.+16     	; 0x2e56 <main+0x1030>
		__ticks = 1;
    2e46:	fe 01       	movw	r30, r28
    2e48:	eb 53       	subi	r30, 0x3B	; 59
    2e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e4c:	81 e0       	ldi	r24, 0x01	; 1
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	91 83       	std	Z+1, r25	; 0x01
    2e52:	80 83       	st	Z, r24
    2e54:	64 c0       	rjmp	.+200    	; 0x2f1e <main+0x10f8>
	else if (__tmp > 65535)
    2e56:	fe 01       	movw	r30, r28
    2e58:	e9 53       	subi	r30, 0x39	; 57
    2e5a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e5c:	60 81       	ld	r22, Z
    2e5e:	71 81       	ldd	r23, Z+1	; 0x01
    2e60:	82 81       	ldd	r24, Z+2	; 0x02
    2e62:	93 81       	ldd	r25, Z+3	; 0x03
    2e64:	20 e0       	ldi	r18, 0x00	; 0
    2e66:	3f ef       	ldi	r19, 0xFF	; 255
    2e68:	4f e7       	ldi	r20, 0x7F	; 127
    2e6a:	57 e4       	ldi	r21, 0x47	; 71
    2e6c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e70:	18 16       	cp	r1, r24
    2e72:	0c f0       	brlt	.+2      	; 0x2e76 <main+0x1050>
    2e74:	43 c0       	rjmp	.+134    	; 0x2efc <main+0x10d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e76:	fe 01       	movw	r30, r28
    2e78:	e5 53       	subi	r30, 0x35	; 53
    2e7a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e7c:	60 81       	ld	r22, Z
    2e7e:	71 81       	ldd	r23, Z+1	; 0x01
    2e80:	82 81       	ldd	r24, Z+2	; 0x02
    2e82:	93 81       	ldd	r25, Z+3	; 0x03
    2e84:	20 e0       	ldi	r18, 0x00	; 0
    2e86:	30 e0       	ldi	r19, 0x00	; 0
    2e88:	40 e2       	ldi	r20, 0x20	; 32
    2e8a:	51 e4       	ldi	r21, 0x41	; 65
    2e8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e90:	dc 01       	movw	r26, r24
    2e92:	cb 01       	movw	r24, r22
    2e94:	8e 01       	movw	r16, r28
    2e96:	0b 53       	subi	r16, 0x3B	; 59
    2e98:	1e 4f       	sbci	r17, 0xFE	; 254
    2e9a:	bc 01       	movw	r22, r24
    2e9c:	cd 01       	movw	r24, r26
    2e9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ea2:	dc 01       	movw	r26, r24
    2ea4:	cb 01       	movw	r24, r22
    2ea6:	f8 01       	movw	r30, r16
    2ea8:	91 83       	std	Z+1, r25	; 0x01
    2eaa:	80 83       	st	Z, r24
    2eac:	1f c0       	rjmp	.+62     	; 0x2eec <main+0x10c6>
    2eae:	fe 01       	movw	r30, r28
    2eb0:	ed 53       	subi	r30, 0x3D	; 61
    2eb2:	fe 4f       	sbci	r31, 0xFE	; 254
    2eb4:	88 ec       	ldi	r24, 0xC8	; 200
    2eb6:	90 e0       	ldi	r25, 0x00	; 0
    2eb8:	91 83       	std	Z+1, r25	; 0x01
    2eba:	80 83       	st	Z, r24
    2ebc:	fe 01       	movw	r30, r28
    2ebe:	ed 53       	subi	r30, 0x3D	; 61
    2ec0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ec2:	80 81       	ld	r24, Z
    2ec4:	91 81       	ldd	r25, Z+1	; 0x01
    2ec6:	01 97       	sbiw	r24, 0x01	; 1
    2ec8:	f1 f7       	brne	.-4      	; 0x2ec6 <main+0x10a0>
    2eca:	fe 01       	movw	r30, r28
    2ecc:	ed 53       	subi	r30, 0x3D	; 61
    2ece:	fe 4f       	sbci	r31, 0xFE	; 254
    2ed0:	91 83       	std	Z+1, r25	; 0x01
    2ed2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ed4:	de 01       	movw	r26, r28
    2ed6:	ab 53       	subi	r26, 0x3B	; 59
    2ed8:	be 4f       	sbci	r27, 0xFE	; 254
    2eda:	fe 01       	movw	r30, r28
    2edc:	eb 53       	subi	r30, 0x3B	; 59
    2ede:	fe 4f       	sbci	r31, 0xFE	; 254
    2ee0:	80 81       	ld	r24, Z
    2ee2:	91 81       	ldd	r25, Z+1	; 0x01
    2ee4:	01 97       	sbiw	r24, 0x01	; 1
    2ee6:	11 96       	adiw	r26, 0x01	; 1
    2ee8:	9c 93       	st	X, r25
    2eea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2eec:	fe 01       	movw	r30, r28
    2eee:	eb 53       	subi	r30, 0x3B	; 59
    2ef0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ef2:	80 81       	ld	r24, Z
    2ef4:	91 81       	ldd	r25, Z+1	; 0x01
    2ef6:	00 97       	sbiw	r24, 0x00	; 0
    2ef8:	d1 f6       	brne	.-76     	; 0x2eae <main+0x1088>
    2efa:	27 c0       	rjmp	.+78     	; 0x2f4a <main+0x1124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2efc:	8e 01       	movw	r16, r28
    2efe:	0b 53       	subi	r16, 0x3B	; 59
    2f00:	1e 4f       	sbci	r17, 0xFE	; 254
    2f02:	fe 01       	movw	r30, r28
    2f04:	e9 53       	subi	r30, 0x39	; 57
    2f06:	fe 4f       	sbci	r31, 0xFE	; 254
    2f08:	60 81       	ld	r22, Z
    2f0a:	71 81       	ldd	r23, Z+1	; 0x01
    2f0c:	82 81       	ldd	r24, Z+2	; 0x02
    2f0e:	93 81       	ldd	r25, Z+3	; 0x03
    2f10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f14:	dc 01       	movw	r26, r24
    2f16:	cb 01       	movw	r24, r22
    2f18:	f8 01       	movw	r30, r16
    2f1a:	91 83       	std	Z+1, r25	; 0x01
    2f1c:	80 83       	st	Z, r24
    2f1e:	de 01       	movw	r26, r28
    2f20:	af 53       	subi	r26, 0x3F	; 63
    2f22:	be 4f       	sbci	r27, 0xFE	; 254
    2f24:	fe 01       	movw	r30, r28
    2f26:	eb 53       	subi	r30, 0x3B	; 59
    2f28:	fe 4f       	sbci	r31, 0xFE	; 254
    2f2a:	80 81       	ld	r24, Z
    2f2c:	91 81       	ldd	r25, Z+1	; 0x01
    2f2e:	8d 93       	st	X+, r24
    2f30:	9c 93       	st	X, r25
    2f32:	fe 01       	movw	r30, r28
    2f34:	ef 53       	subi	r30, 0x3F	; 63
    2f36:	fe 4f       	sbci	r31, 0xFE	; 254
    2f38:	80 81       	ld	r24, Z
    2f3a:	91 81       	ldd	r25, Z+1	; 0x01
    2f3c:	01 97       	sbiw	r24, 0x01	; 1
    2f3e:	f1 f7       	brne	.-4      	; 0x2f3c <main+0x1116>
    2f40:	fe 01       	movw	r30, r28
    2f42:	ef 53       	subi	r30, 0x3F	; 63
    2f44:	fe 4f       	sbci	r31, 0xFE	; 254
    2f46:	91 83       	std	Z+1, r25	; 0x01
    2f48:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    2f4a:	8b e6       	ldi	r24, 0x6B	; 107
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    2f52:	98 c1       	rjmp	.+816    	; 0x3284 <main+0x145e>
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<8 ;i++){
    2f54:	fe 01       	movw	r30, r28
    2f56:	ee 59       	subi	r30, 0x9E	; 158
    2f58:	fd 4f       	sbci	r31, 0xFD	; 253
    2f5a:	10 82       	st	Z, r1
    2f5c:	8c c1       	rjmp	.+792    	; 0x3276 <main+0x1450>
						Copy_u8KpdValue=KPD_u8GetKeyState();
    2f5e:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    2f62:	fe 01       	movw	r30, r28
    2f64:	ed 59       	subi	r30, 0x9D	; 157
    2f66:	fd 4f       	sbci	r31, 0xFD	; 253
    2f68:	80 83       	st	Z, r24
						if(Copy_u8KpdValue==13) break;
    2f6a:	fe 01       	movw	r30, r28
    2f6c:	ed 59       	subi	r30, 0x9D	; 157
    2f6e:	fd 4f       	sbci	r31, 0xFD	; 253
    2f70:	80 81       	ld	r24, Z
    2f72:	8d 30       	cpi	r24, 0x0D	; 13
    2f74:	09 f4       	brne	.+2      	; 0x2f78 <main+0x1152>
    2f76:	86 c1       	rjmp	.+780    	; 0x3284 <main+0x145e>
						LED_voidControlLed( PORT_u8B,i, PIN_HIGH);
    2f78:	fe 01       	movw	r30, r28
    2f7a:	ee 59       	subi	r30, 0x9E	; 158
    2f7c:	fd 4f       	sbci	r31, 0xFD	; 253
    2f7e:	82 e0       	ldi	r24, 0x02	; 2
    2f80:	60 81       	ld	r22, Z
    2f82:	41 e0       	ldi	r20, 0x01	; 1
    2f84:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    2f88:	fe 01       	movw	r30, r28
    2f8a:	e3 54       	subi	r30, 0x43	; 67
    2f8c:	fe 4f       	sbci	r31, 0xFE	; 254
    2f8e:	80 e0       	ldi	r24, 0x00	; 0
    2f90:	90 e0       	ldi	r25, 0x00	; 0
    2f92:	aa ef       	ldi	r26, 0xFA	; 250
    2f94:	b3 e4       	ldi	r27, 0x43	; 67
    2f96:	80 83       	st	Z, r24
    2f98:	91 83       	std	Z+1, r25	; 0x01
    2f9a:	a2 83       	std	Z+2, r26	; 0x02
    2f9c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f9e:	8e 01       	movw	r16, r28
    2fa0:	07 54       	subi	r16, 0x47	; 71
    2fa2:	1e 4f       	sbci	r17, 0xFE	; 254
    2fa4:	fe 01       	movw	r30, r28
    2fa6:	e3 54       	subi	r30, 0x43	; 67
    2fa8:	fe 4f       	sbci	r31, 0xFE	; 254
    2faa:	60 81       	ld	r22, Z
    2fac:	71 81       	ldd	r23, Z+1	; 0x01
    2fae:	82 81       	ldd	r24, Z+2	; 0x02
    2fb0:	93 81       	ldd	r25, Z+3	; 0x03
    2fb2:	20 e0       	ldi	r18, 0x00	; 0
    2fb4:	30 e0       	ldi	r19, 0x00	; 0
    2fb6:	4a ef       	ldi	r20, 0xFA	; 250
    2fb8:	54 e4       	ldi	r21, 0x44	; 68
    2fba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fbe:	dc 01       	movw	r26, r24
    2fc0:	cb 01       	movw	r24, r22
    2fc2:	f8 01       	movw	r30, r16
    2fc4:	80 83       	st	Z, r24
    2fc6:	91 83       	std	Z+1, r25	; 0x01
    2fc8:	a2 83       	std	Z+2, r26	; 0x02
    2fca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fcc:	fe 01       	movw	r30, r28
    2fce:	e7 54       	subi	r30, 0x47	; 71
    2fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    2fd2:	60 81       	ld	r22, Z
    2fd4:	71 81       	ldd	r23, Z+1	; 0x01
    2fd6:	82 81       	ldd	r24, Z+2	; 0x02
    2fd8:	93 81       	ldd	r25, Z+3	; 0x03
    2fda:	20 e0       	ldi	r18, 0x00	; 0
    2fdc:	30 e0       	ldi	r19, 0x00	; 0
    2fde:	40 e8       	ldi	r20, 0x80	; 128
    2fe0:	5f e3       	ldi	r21, 0x3F	; 63
    2fe2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fe6:	88 23       	and	r24, r24
    2fe8:	44 f4       	brge	.+16     	; 0x2ffa <main+0x11d4>
		__ticks = 1;
    2fea:	fe 01       	movw	r30, r28
    2fec:	e9 54       	subi	r30, 0x49	; 73
    2fee:	fe 4f       	sbci	r31, 0xFE	; 254
    2ff0:	81 e0       	ldi	r24, 0x01	; 1
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	91 83       	std	Z+1, r25	; 0x01
    2ff6:	80 83       	st	Z, r24
    2ff8:	64 c0       	rjmp	.+200    	; 0x30c2 <main+0x129c>
	else if (__tmp > 65535)
    2ffa:	fe 01       	movw	r30, r28
    2ffc:	e7 54       	subi	r30, 0x47	; 71
    2ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    3000:	60 81       	ld	r22, Z
    3002:	71 81       	ldd	r23, Z+1	; 0x01
    3004:	82 81       	ldd	r24, Z+2	; 0x02
    3006:	93 81       	ldd	r25, Z+3	; 0x03
    3008:	20 e0       	ldi	r18, 0x00	; 0
    300a:	3f ef       	ldi	r19, 0xFF	; 255
    300c:	4f e7       	ldi	r20, 0x7F	; 127
    300e:	57 e4       	ldi	r21, 0x47	; 71
    3010:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3014:	18 16       	cp	r1, r24
    3016:	0c f0       	brlt	.+2      	; 0x301a <main+0x11f4>
    3018:	43 c0       	rjmp	.+134    	; 0x30a0 <main+0x127a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    301a:	fe 01       	movw	r30, r28
    301c:	e3 54       	subi	r30, 0x43	; 67
    301e:	fe 4f       	sbci	r31, 0xFE	; 254
    3020:	60 81       	ld	r22, Z
    3022:	71 81       	ldd	r23, Z+1	; 0x01
    3024:	82 81       	ldd	r24, Z+2	; 0x02
    3026:	93 81       	ldd	r25, Z+3	; 0x03
    3028:	20 e0       	ldi	r18, 0x00	; 0
    302a:	30 e0       	ldi	r19, 0x00	; 0
    302c:	40 e2       	ldi	r20, 0x20	; 32
    302e:	51 e4       	ldi	r21, 0x41	; 65
    3030:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3034:	dc 01       	movw	r26, r24
    3036:	cb 01       	movw	r24, r22
    3038:	8e 01       	movw	r16, r28
    303a:	09 54       	subi	r16, 0x49	; 73
    303c:	1e 4f       	sbci	r17, 0xFE	; 254
    303e:	bc 01       	movw	r22, r24
    3040:	cd 01       	movw	r24, r26
    3042:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3046:	dc 01       	movw	r26, r24
    3048:	cb 01       	movw	r24, r22
    304a:	f8 01       	movw	r30, r16
    304c:	91 83       	std	Z+1, r25	; 0x01
    304e:	80 83       	st	Z, r24
    3050:	1f c0       	rjmp	.+62     	; 0x3090 <main+0x126a>
    3052:	fe 01       	movw	r30, r28
    3054:	eb 54       	subi	r30, 0x4B	; 75
    3056:	fe 4f       	sbci	r31, 0xFE	; 254
    3058:	88 ec       	ldi	r24, 0xC8	; 200
    305a:	90 e0       	ldi	r25, 0x00	; 0
    305c:	91 83       	std	Z+1, r25	; 0x01
    305e:	80 83       	st	Z, r24
    3060:	fe 01       	movw	r30, r28
    3062:	eb 54       	subi	r30, 0x4B	; 75
    3064:	fe 4f       	sbci	r31, 0xFE	; 254
    3066:	80 81       	ld	r24, Z
    3068:	91 81       	ldd	r25, Z+1	; 0x01
    306a:	01 97       	sbiw	r24, 0x01	; 1
    306c:	f1 f7       	brne	.-4      	; 0x306a <main+0x1244>
    306e:	fe 01       	movw	r30, r28
    3070:	eb 54       	subi	r30, 0x4B	; 75
    3072:	fe 4f       	sbci	r31, 0xFE	; 254
    3074:	91 83       	std	Z+1, r25	; 0x01
    3076:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3078:	de 01       	movw	r26, r28
    307a:	a9 54       	subi	r26, 0x49	; 73
    307c:	be 4f       	sbci	r27, 0xFE	; 254
    307e:	fe 01       	movw	r30, r28
    3080:	e9 54       	subi	r30, 0x49	; 73
    3082:	fe 4f       	sbci	r31, 0xFE	; 254
    3084:	80 81       	ld	r24, Z
    3086:	91 81       	ldd	r25, Z+1	; 0x01
    3088:	01 97       	sbiw	r24, 0x01	; 1
    308a:	11 96       	adiw	r26, 0x01	; 1
    308c:	9c 93       	st	X, r25
    308e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3090:	fe 01       	movw	r30, r28
    3092:	e9 54       	subi	r30, 0x49	; 73
    3094:	fe 4f       	sbci	r31, 0xFE	; 254
    3096:	80 81       	ld	r24, Z
    3098:	91 81       	ldd	r25, Z+1	; 0x01
    309a:	00 97       	sbiw	r24, 0x00	; 0
    309c:	d1 f6       	brne	.-76     	; 0x3052 <main+0x122c>
    309e:	27 c0       	rjmp	.+78     	; 0x30ee <main+0x12c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30a0:	8e 01       	movw	r16, r28
    30a2:	09 54       	subi	r16, 0x49	; 73
    30a4:	1e 4f       	sbci	r17, 0xFE	; 254
    30a6:	fe 01       	movw	r30, r28
    30a8:	e7 54       	subi	r30, 0x47	; 71
    30aa:	fe 4f       	sbci	r31, 0xFE	; 254
    30ac:	60 81       	ld	r22, Z
    30ae:	71 81       	ldd	r23, Z+1	; 0x01
    30b0:	82 81       	ldd	r24, Z+2	; 0x02
    30b2:	93 81       	ldd	r25, Z+3	; 0x03
    30b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30b8:	dc 01       	movw	r26, r24
    30ba:	cb 01       	movw	r24, r22
    30bc:	f8 01       	movw	r30, r16
    30be:	91 83       	std	Z+1, r25	; 0x01
    30c0:	80 83       	st	Z, r24
    30c2:	de 01       	movw	r26, r28
    30c4:	ad 54       	subi	r26, 0x4D	; 77
    30c6:	be 4f       	sbci	r27, 0xFE	; 254
    30c8:	fe 01       	movw	r30, r28
    30ca:	e9 54       	subi	r30, 0x49	; 73
    30cc:	fe 4f       	sbci	r31, 0xFE	; 254
    30ce:	80 81       	ld	r24, Z
    30d0:	91 81       	ldd	r25, Z+1	; 0x01
    30d2:	8d 93       	st	X+, r24
    30d4:	9c 93       	st	X, r25
    30d6:	fe 01       	movw	r30, r28
    30d8:	ed 54       	subi	r30, 0x4D	; 77
    30da:	fe 4f       	sbci	r31, 0xFE	; 254
    30dc:	80 81       	ld	r24, Z
    30de:	91 81       	ldd	r25, Z+1	; 0x01
    30e0:	01 97       	sbiw	r24, 0x01	; 1
    30e2:	f1 f7       	brne	.-4      	; 0x30e0 <main+0x12ba>
    30e4:	fe 01       	movw	r30, r28
    30e6:	ed 54       	subi	r30, 0x4D	; 77
    30e8:	fe 4f       	sbci	r31, 0xFE	; 254
    30ea:	91 83       	std	Z+1, r25	; 0x01
    30ec:	80 83       	st	Z, r24
						_delay_ms(500);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
    30ee:	fe 01       	movw	r30, r28
    30f0:	ee 59       	subi	r30, 0x9E	; 158
    30f2:	fd 4f       	sbci	r31, 0xFD	; 253
    30f4:	82 e0       	ldi	r24, 0x02	; 2
    30f6:	60 81       	ld	r22, Z
    30f8:	40 e0       	ldi	r20, 0x00	; 0
    30fa:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    30fe:	fe 01       	movw	r30, r28
    3100:	e1 55       	subi	r30, 0x51	; 81
    3102:	fe 4f       	sbci	r31, 0xFE	; 254
    3104:	80 e0       	ldi	r24, 0x00	; 0
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	a8 ec       	ldi	r26, 0xC8	; 200
    310a:	b2 e4       	ldi	r27, 0x42	; 66
    310c:	80 83       	st	Z, r24
    310e:	91 83       	std	Z+1, r25	; 0x01
    3110:	a2 83       	std	Z+2, r26	; 0x02
    3112:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3114:	8e 01       	movw	r16, r28
    3116:	05 55       	subi	r16, 0x55	; 85
    3118:	1e 4f       	sbci	r17, 0xFE	; 254
    311a:	fe 01       	movw	r30, r28
    311c:	e1 55       	subi	r30, 0x51	; 81
    311e:	fe 4f       	sbci	r31, 0xFE	; 254
    3120:	60 81       	ld	r22, Z
    3122:	71 81       	ldd	r23, Z+1	; 0x01
    3124:	82 81       	ldd	r24, Z+2	; 0x02
    3126:	93 81       	ldd	r25, Z+3	; 0x03
    3128:	20 e0       	ldi	r18, 0x00	; 0
    312a:	30 e0       	ldi	r19, 0x00	; 0
    312c:	4a ef       	ldi	r20, 0xFA	; 250
    312e:	54 e4       	ldi	r21, 0x44	; 68
    3130:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3134:	dc 01       	movw	r26, r24
    3136:	cb 01       	movw	r24, r22
    3138:	f8 01       	movw	r30, r16
    313a:	80 83       	st	Z, r24
    313c:	91 83       	std	Z+1, r25	; 0x01
    313e:	a2 83       	std	Z+2, r26	; 0x02
    3140:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3142:	fe 01       	movw	r30, r28
    3144:	e5 55       	subi	r30, 0x55	; 85
    3146:	fe 4f       	sbci	r31, 0xFE	; 254
    3148:	60 81       	ld	r22, Z
    314a:	71 81       	ldd	r23, Z+1	; 0x01
    314c:	82 81       	ldd	r24, Z+2	; 0x02
    314e:	93 81       	ldd	r25, Z+3	; 0x03
    3150:	20 e0       	ldi	r18, 0x00	; 0
    3152:	30 e0       	ldi	r19, 0x00	; 0
    3154:	40 e8       	ldi	r20, 0x80	; 128
    3156:	5f e3       	ldi	r21, 0x3F	; 63
    3158:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    315c:	88 23       	and	r24, r24
    315e:	44 f4       	brge	.+16     	; 0x3170 <main+0x134a>
		__ticks = 1;
    3160:	fe 01       	movw	r30, r28
    3162:	e7 55       	subi	r30, 0x57	; 87
    3164:	fe 4f       	sbci	r31, 0xFE	; 254
    3166:	81 e0       	ldi	r24, 0x01	; 1
    3168:	90 e0       	ldi	r25, 0x00	; 0
    316a:	91 83       	std	Z+1, r25	; 0x01
    316c:	80 83       	st	Z, r24
    316e:	64 c0       	rjmp	.+200    	; 0x3238 <main+0x1412>
	else if (__tmp > 65535)
    3170:	fe 01       	movw	r30, r28
    3172:	e5 55       	subi	r30, 0x55	; 85
    3174:	fe 4f       	sbci	r31, 0xFE	; 254
    3176:	60 81       	ld	r22, Z
    3178:	71 81       	ldd	r23, Z+1	; 0x01
    317a:	82 81       	ldd	r24, Z+2	; 0x02
    317c:	93 81       	ldd	r25, Z+3	; 0x03
    317e:	20 e0       	ldi	r18, 0x00	; 0
    3180:	3f ef       	ldi	r19, 0xFF	; 255
    3182:	4f e7       	ldi	r20, 0x7F	; 127
    3184:	57 e4       	ldi	r21, 0x47	; 71
    3186:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    318a:	18 16       	cp	r1, r24
    318c:	0c f0       	brlt	.+2      	; 0x3190 <main+0x136a>
    318e:	43 c0       	rjmp	.+134    	; 0x3216 <main+0x13f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3190:	fe 01       	movw	r30, r28
    3192:	e1 55       	subi	r30, 0x51	; 81
    3194:	fe 4f       	sbci	r31, 0xFE	; 254
    3196:	60 81       	ld	r22, Z
    3198:	71 81       	ldd	r23, Z+1	; 0x01
    319a:	82 81       	ldd	r24, Z+2	; 0x02
    319c:	93 81       	ldd	r25, Z+3	; 0x03
    319e:	20 e0       	ldi	r18, 0x00	; 0
    31a0:	30 e0       	ldi	r19, 0x00	; 0
    31a2:	40 e2       	ldi	r20, 0x20	; 32
    31a4:	51 e4       	ldi	r21, 0x41	; 65
    31a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31aa:	dc 01       	movw	r26, r24
    31ac:	cb 01       	movw	r24, r22
    31ae:	8e 01       	movw	r16, r28
    31b0:	07 55       	subi	r16, 0x57	; 87
    31b2:	1e 4f       	sbci	r17, 0xFE	; 254
    31b4:	bc 01       	movw	r22, r24
    31b6:	cd 01       	movw	r24, r26
    31b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31bc:	dc 01       	movw	r26, r24
    31be:	cb 01       	movw	r24, r22
    31c0:	f8 01       	movw	r30, r16
    31c2:	91 83       	std	Z+1, r25	; 0x01
    31c4:	80 83       	st	Z, r24
    31c6:	1f c0       	rjmp	.+62     	; 0x3206 <main+0x13e0>
    31c8:	fe 01       	movw	r30, r28
    31ca:	e9 55       	subi	r30, 0x59	; 89
    31cc:	fe 4f       	sbci	r31, 0xFE	; 254
    31ce:	88 ec       	ldi	r24, 0xC8	; 200
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	91 83       	std	Z+1, r25	; 0x01
    31d4:	80 83       	st	Z, r24
    31d6:	fe 01       	movw	r30, r28
    31d8:	e9 55       	subi	r30, 0x59	; 89
    31da:	fe 4f       	sbci	r31, 0xFE	; 254
    31dc:	80 81       	ld	r24, Z
    31de:	91 81       	ldd	r25, Z+1	; 0x01
    31e0:	01 97       	sbiw	r24, 0x01	; 1
    31e2:	f1 f7       	brne	.-4      	; 0x31e0 <main+0x13ba>
    31e4:	fe 01       	movw	r30, r28
    31e6:	e9 55       	subi	r30, 0x59	; 89
    31e8:	fe 4f       	sbci	r31, 0xFE	; 254
    31ea:	91 83       	std	Z+1, r25	; 0x01
    31ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ee:	de 01       	movw	r26, r28
    31f0:	a7 55       	subi	r26, 0x57	; 87
    31f2:	be 4f       	sbci	r27, 0xFE	; 254
    31f4:	fe 01       	movw	r30, r28
    31f6:	e7 55       	subi	r30, 0x57	; 87
    31f8:	fe 4f       	sbci	r31, 0xFE	; 254
    31fa:	80 81       	ld	r24, Z
    31fc:	91 81       	ldd	r25, Z+1	; 0x01
    31fe:	01 97       	sbiw	r24, 0x01	; 1
    3200:	11 96       	adiw	r26, 0x01	; 1
    3202:	9c 93       	st	X, r25
    3204:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3206:	fe 01       	movw	r30, r28
    3208:	e7 55       	subi	r30, 0x57	; 87
    320a:	fe 4f       	sbci	r31, 0xFE	; 254
    320c:	80 81       	ld	r24, Z
    320e:	91 81       	ldd	r25, Z+1	; 0x01
    3210:	00 97       	sbiw	r24, 0x00	; 0
    3212:	d1 f6       	brne	.-76     	; 0x31c8 <main+0x13a2>
    3214:	27 c0       	rjmp	.+78     	; 0x3264 <main+0x143e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3216:	8e 01       	movw	r16, r28
    3218:	07 55       	subi	r16, 0x57	; 87
    321a:	1e 4f       	sbci	r17, 0xFE	; 254
    321c:	fe 01       	movw	r30, r28
    321e:	e5 55       	subi	r30, 0x55	; 85
    3220:	fe 4f       	sbci	r31, 0xFE	; 254
    3222:	60 81       	ld	r22, Z
    3224:	71 81       	ldd	r23, Z+1	; 0x01
    3226:	82 81       	ldd	r24, Z+2	; 0x02
    3228:	93 81       	ldd	r25, Z+3	; 0x03
    322a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    322e:	dc 01       	movw	r26, r24
    3230:	cb 01       	movw	r24, r22
    3232:	f8 01       	movw	r30, r16
    3234:	91 83       	std	Z+1, r25	; 0x01
    3236:	80 83       	st	Z, r24
    3238:	de 01       	movw	r26, r28
    323a:	ab 55       	subi	r26, 0x5B	; 91
    323c:	be 4f       	sbci	r27, 0xFE	; 254
    323e:	fe 01       	movw	r30, r28
    3240:	e7 55       	subi	r30, 0x57	; 87
    3242:	fe 4f       	sbci	r31, 0xFE	; 254
    3244:	80 81       	ld	r24, Z
    3246:	91 81       	ldd	r25, Z+1	; 0x01
    3248:	8d 93       	st	X+, r24
    324a:	9c 93       	st	X, r25
    324c:	fe 01       	movw	r30, r28
    324e:	eb 55       	subi	r30, 0x5B	; 91
    3250:	fe 4f       	sbci	r31, 0xFE	; 254
    3252:	80 81       	ld	r24, Z
    3254:	91 81       	ldd	r25, Z+1	; 0x01
    3256:	01 97       	sbiw	r24, 0x01	; 1
    3258:	f1 f7       	brne	.-4      	; 0x3256 <main+0x1430>
    325a:	fe 01       	movw	r30, r28
    325c:	eb 55       	subi	r30, 0x5B	; 91
    325e:	fe 4f       	sbci	r31, 0xFE	; 254
    3260:	91 83       	std	Z+1, r25	; 0x01
    3262:	80 83       	st	Z, r24
				CLCD_voidSendString("Chaser..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<8 ;i++){
    3264:	de 01       	movw	r26, r28
    3266:	ae 59       	subi	r26, 0x9E	; 158
    3268:	bd 4f       	sbci	r27, 0xFD	; 253
    326a:	fe 01       	movw	r30, r28
    326c:	ee 59       	subi	r30, 0x9E	; 158
    326e:	fd 4f       	sbci	r31, 0xFD	; 253
    3270:	80 81       	ld	r24, Z
    3272:	8f 5f       	subi	r24, 0xFF	; 255
    3274:	8c 93       	st	X, r24
    3276:	fe 01       	movw	r30, r28
    3278:	ee 59       	subi	r30, 0x9E	; 158
    327a:	fd 4f       	sbci	r31, 0xFD	; 253
    327c:	80 81       	ld	r24, Z
    327e:	88 30       	cpi	r24, 0x08	; 8
    3280:	08 f4       	brcc	.+2      	; 0x3284 <main+0x145e>
    3282:	6d ce       	rjmp	.-806    	; 0x2f5e <main+0x1138>
				_delay_ms(1);
				CLCD_voidSendString("Chaser..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
    3284:	fe 01       	movw	r30, r28
    3286:	ed 59       	subi	r30, 0x9D	; 157
    3288:	fd 4f       	sbci	r31, 0xFD	; 253
    328a:	80 81       	ld	r24, Z
    328c:	8d 30       	cpi	r24, 0x0D	; 13
    328e:	09 f0       	breq	.+2      	; 0x3292 <main+0x146c>
    3290:	61 ce       	rjmp	.-830    	; 0x2f54 <main+0x112e>
						_delay_ms(500);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
						_delay_ms(100);
					}
				}
				LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    3292:	82 e0       	ldi	r24, 0x02	; 2
    3294:	60 e0       	ldi	r22, 0x00	; 0
    3296:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
				CLCD_voidClearDisplay();
    329a:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    329e:	fe 01       	movw	r30, r28
    32a0:	ef 55       	subi	r30, 0x5F	; 95
    32a2:	fe 4f       	sbci	r31, 0xFE	; 254
    32a4:	80 e0       	ldi	r24, 0x00	; 0
    32a6:	90 e0       	ldi	r25, 0x00	; 0
    32a8:	a0 e8       	ldi	r26, 0x80	; 128
    32aa:	bf e3       	ldi	r27, 0x3F	; 63
    32ac:	80 83       	st	Z, r24
    32ae:	91 83       	std	Z+1, r25	; 0x01
    32b0:	a2 83       	std	Z+2, r26	; 0x02
    32b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32b4:	8e 01       	movw	r16, r28
    32b6:	03 56       	subi	r16, 0x63	; 99
    32b8:	1e 4f       	sbci	r17, 0xFE	; 254
    32ba:	fe 01       	movw	r30, r28
    32bc:	ef 55       	subi	r30, 0x5F	; 95
    32be:	fe 4f       	sbci	r31, 0xFE	; 254
    32c0:	60 81       	ld	r22, Z
    32c2:	71 81       	ldd	r23, Z+1	; 0x01
    32c4:	82 81       	ldd	r24, Z+2	; 0x02
    32c6:	93 81       	ldd	r25, Z+3	; 0x03
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	4a ef       	ldi	r20, 0xFA	; 250
    32ce:	54 e4       	ldi	r21, 0x44	; 68
    32d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32d4:	dc 01       	movw	r26, r24
    32d6:	cb 01       	movw	r24, r22
    32d8:	f8 01       	movw	r30, r16
    32da:	80 83       	st	Z, r24
    32dc:	91 83       	std	Z+1, r25	; 0x01
    32de:	a2 83       	std	Z+2, r26	; 0x02
    32e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32e2:	fe 01       	movw	r30, r28
    32e4:	e3 56       	subi	r30, 0x63	; 99
    32e6:	fe 4f       	sbci	r31, 0xFE	; 254
    32e8:	60 81       	ld	r22, Z
    32ea:	71 81       	ldd	r23, Z+1	; 0x01
    32ec:	82 81       	ldd	r24, Z+2	; 0x02
    32ee:	93 81       	ldd	r25, Z+3	; 0x03
    32f0:	20 e0       	ldi	r18, 0x00	; 0
    32f2:	30 e0       	ldi	r19, 0x00	; 0
    32f4:	40 e8       	ldi	r20, 0x80	; 128
    32f6:	5f e3       	ldi	r21, 0x3F	; 63
    32f8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32fc:	88 23       	and	r24, r24
    32fe:	44 f4       	brge	.+16     	; 0x3310 <main+0x14ea>
		__ticks = 1;
    3300:	fe 01       	movw	r30, r28
    3302:	e5 56       	subi	r30, 0x65	; 101
    3304:	fe 4f       	sbci	r31, 0xFE	; 254
    3306:	81 e0       	ldi	r24, 0x01	; 1
    3308:	90 e0       	ldi	r25, 0x00	; 0
    330a:	91 83       	std	Z+1, r25	; 0x01
    330c:	80 83       	st	Z, r24
    330e:	65 c0       	rjmp	.+202    	; 0x33da <main+0x15b4>
	else if (__tmp > 65535)
    3310:	fe 01       	movw	r30, r28
    3312:	e3 56       	subi	r30, 0x63	; 99
    3314:	fe 4f       	sbci	r31, 0xFE	; 254
    3316:	60 81       	ld	r22, Z
    3318:	71 81       	ldd	r23, Z+1	; 0x01
    331a:	82 81       	ldd	r24, Z+2	; 0x02
    331c:	93 81       	ldd	r25, Z+3	; 0x03
    331e:	20 e0       	ldi	r18, 0x00	; 0
    3320:	3f ef       	ldi	r19, 0xFF	; 255
    3322:	4f e7       	ldi	r20, 0x7F	; 127
    3324:	57 e4       	ldi	r21, 0x47	; 71
    3326:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    332a:	18 16       	cp	r1, r24
    332c:	0c f0       	brlt	.+2      	; 0x3330 <main+0x150a>
    332e:	44 c0       	rjmp	.+136    	; 0x33b8 <main+0x1592>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3330:	fe 01       	movw	r30, r28
    3332:	ef 55       	subi	r30, 0x5F	; 95
    3334:	fe 4f       	sbci	r31, 0xFE	; 254
    3336:	60 81       	ld	r22, Z
    3338:	71 81       	ldd	r23, Z+1	; 0x01
    333a:	82 81       	ldd	r24, Z+2	; 0x02
    333c:	93 81       	ldd	r25, Z+3	; 0x03
    333e:	20 e0       	ldi	r18, 0x00	; 0
    3340:	30 e0       	ldi	r19, 0x00	; 0
    3342:	40 e2       	ldi	r20, 0x20	; 32
    3344:	51 e4       	ldi	r21, 0x41	; 65
    3346:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    334a:	dc 01       	movw	r26, r24
    334c:	cb 01       	movw	r24, r22
    334e:	8e 01       	movw	r16, r28
    3350:	05 56       	subi	r16, 0x65	; 101
    3352:	1e 4f       	sbci	r17, 0xFE	; 254
    3354:	bc 01       	movw	r22, r24
    3356:	cd 01       	movw	r24, r26
    3358:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    335c:	dc 01       	movw	r26, r24
    335e:	cb 01       	movw	r24, r22
    3360:	f8 01       	movw	r30, r16
    3362:	91 83       	std	Z+1, r25	; 0x01
    3364:	80 83       	st	Z, r24
    3366:	1f c0       	rjmp	.+62     	; 0x33a6 <main+0x1580>
    3368:	fe 01       	movw	r30, r28
    336a:	e7 56       	subi	r30, 0x67	; 103
    336c:	fe 4f       	sbci	r31, 0xFE	; 254
    336e:	88 ec       	ldi	r24, 0xC8	; 200
    3370:	90 e0       	ldi	r25, 0x00	; 0
    3372:	91 83       	std	Z+1, r25	; 0x01
    3374:	80 83       	st	Z, r24
    3376:	fe 01       	movw	r30, r28
    3378:	e7 56       	subi	r30, 0x67	; 103
    337a:	fe 4f       	sbci	r31, 0xFE	; 254
    337c:	80 81       	ld	r24, Z
    337e:	91 81       	ldd	r25, Z+1	; 0x01
    3380:	01 97       	sbiw	r24, 0x01	; 1
    3382:	f1 f7       	brne	.-4      	; 0x3380 <main+0x155a>
    3384:	fe 01       	movw	r30, r28
    3386:	e7 56       	subi	r30, 0x67	; 103
    3388:	fe 4f       	sbci	r31, 0xFE	; 254
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    338e:	de 01       	movw	r26, r28
    3390:	a5 56       	subi	r26, 0x65	; 101
    3392:	be 4f       	sbci	r27, 0xFE	; 254
    3394:	fe 01       	movw	r30, r28
    3396:	e5 56       	subi	r30, 0x65	; 101
    3398:	fe 4f       	sbci	r31, 0xFE	; 254
    339a:	80 81       	ld	r24, Z
    339c:	91 81       	ldd	r25, Z+1	; 0x01
    339e:	01 97       	sbiw	r24, 0x01	; 1
    33a0:	11 96       	adiw	r26, 0x01	; 1
    33a2:	9c 93       	st	X, r25
    33a4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33a6:	fe 01       	movw	r30, r28
    33a8:	e5 56       	subi	r30, 0x65	; 101
    33aa:	fe 4f       	sbci	r31, 0xFE	; 254
    33ac:	80 81       	ld	r24, Z
    33ae:	91 81       	ldd	r25, Z+1	; 0x01
    33b0:	00 97       	sbiw	r24, 0x00	; 0
    33b2:	d1 f6       	brne	.-76     	; 0x3368 <main+0x1542>
    33b4:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33b8:	8e 01       	movw	r16, r28
    33ba:	05 56       	subi	r16, 0x65	; 101
    33bc:	1e 4f       	sbci	r17, 0xFE	; 254
    33be:	fe 01       	movw	r30, r28
    33c0:	e3 56       	subi	r30, 0x63	; 99
    33c2:	fe 4f       	sbci	r31, 0xFE	; 254
    33c4:	60 81       	ld	r22, Z
    33c6:	71 81       	ldd	r23, Z+1	; 0x01
    33c8:	82 81       	ldd	r24, Z+2	; 0x02
    33ca:	93 81       	ldd	r25, Z+3	; 0x03
    33cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33d0:	dc 01       	movw	r26, r24
    33d2:	cb 01       	movw	r24, r22
    33d4:	f8 01       	movw	r30, r16
    33d6:	91 83       	std	Z+1, r25	; 0x01
    33d8:	80 83       	st	Z, r24
    33da:	de 01       	movw	r26, r28
    33dc:	a9 56       	subi	r26, 0x69	; 105
    33de:	be 4f       	sbci	r27, 0xFE	; 254
    33e0:	fe 01       	movw	r30, r28
    33e2:	e5 56       	subi	r30, 0x65	; 101
    33e4:	fe 4f       	sbci	r31, 0xFE	; 254
    33e6:	80 81       	ld	r24, Z
    33e8:	91 81       	ldd	r25, Z+1	; 0x01
    33ea:	11 96       	adiw	r26, 0x01	; 1
    33ec:	9c 93       	st	X, r25
    33ee:	8e 93       	st	-X, r24
    33f0:	fe 01       	movw	r30, r28
    33f2:	e9 56       	subi	r30, 0x69	; 105
    33f4:	fe 4f       	sbci	r31, 0xFE	; 254
    33f6:	80 81       	ld	r24, Z
    33f8:	91 81       	ldd	r25, Z+1	; 0x01
    33fa:	01 97       	sbiw	r24, 0x01	; 1
    33fc:	f1 f7       	brne	.-4      	; 0x33fa <main+0x15d4>
    33fe:	fe 01       	movw	r30, r28
    3400:	e9 56       	subi	r30, 0x69	; 105
    3402:	fe 4f       	sbci	r31, 0xFE	; 254
    3404:	91 83       	std	Z+1, r25	; 0x01
    3406:	80 83       	st	Z, r24
    3408:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
				_delay_ms(1);
				break;
			case 4:
				CLCD_voidSetPosition(0,0);
    340c:	80 e0       	ldi	r24, 0x00	; 0
    340e:	60 e0       	ldi	r22, 0x00	; 0
    3410:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    3414:	fe 01       	movw	r30, r28
    3416:	ed 56       	subi	r30, 0x6D	; 109
    3418:	fe 4f       	sbci	r31, 0xFE	; 254
    341a:	80 e0       	ldi	r24, 0x00	; 0
    341c:	90 e0       	ldi	r25, 0x00	; 0
    341e:	a0 e8       	ldi	r26, 0x80	; 128
    3420:	bf e3       	ldi	r27, 0x3F	; 63
    3422:	80 83       	st	Z, r24
    3424:	91 83       	std	Z+1, r25	; 0x01
    3426:	a2 83       	std	Z+2, r26	; 0x02
    3428:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    342a:	8e 01       	movw	r16, r28
    342c:	01 57       	subi	r16, 0x71	; 113
    342e:	1e 4f       	sbci	r17, 0xFE	; 254
    3430:	fe 01       	movw	r30, r28
    3432:	ed 56       	subi	r30, 0x6D	; 109
    3434:	fe 4f       	sbci	r31, 0xFE	; 254
    3436:	60 81       	ld	r22, Z
    3438:	71 81       	ldd	r23, Z+1	; 0x01
    343a:	82 81       	ldd	r24, Z+2	; 0x02
    343c:	93 81       	ldd	r25, Z+3	; 0x03
    343e:	20 e0       	ldi	r18, 0x00	; 0
    3440:	30 e0       	ldi	r19, 0x00	; 0
    3442:	4a ef       	ldi	r20, 0xFA	; 250
    3444:	54 e4       	ldi	r21, 0x44	; 68
    3446:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    344a:	dc 01       	movw	r26, r24
    344c:	cb 01       	movw	r24, r22
    344e:	f8 01       	movw	r30, r16
    3450:	80 83       	st	Z, r24
    3452:	91 83       	std	Z+1, r25	; 0x01
    3454:	a2 83       	std	Z+2, r26	; 0x02
    3456:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3458:	fe 01       	movw	r30, r28
    345a:	e1 57       	subi	r30, 0x71	; 113
    345c:	fe 4f       	sbci	r31, 0xFE	; 254
    345e:	60 81       	ld	r22, Z
    3460:	71 81       	ldd	r23, Z+1	; 0x01
    3462:	82 81       	ldd	r24, Z+2	; 0x02
    3464:	93 81       	ldd	r25, Z+3	; 0x03
    3466:	20 e0       	ldi	r18, 0x00	; 0
    3468:	30 e0       	ldi	r19, 0x00	; 0
    346a:	40 e8       	ldi	r20, 0x80	; 128
    346c:	5f e3       	ldi	r21, 0x3F	; 63
    346e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3472:	88 23       	and	r24, r24
    3474:	44 f4       	brge	.+16     	; 0x3486 <main+0x1660>
		__ticks = 1;
    3476:	fe 01       	movw	r30, r28
    3478:	e3 57       	subi	r30, 0x73	; 115
    347a:	fe 4f       	sbci	r31, 0xFE	; 254
    347c:	81 e0       	ldi	r24, 0x01	; 1
    347e:	90 e0       	ldi	r25, 0x00	; 0
    3480:	91 83       	std	Z+1, r25	; 0x01
    3482:	80 83       	st	Z, r24
    3484:	64 c0       	rjmp	.+200    	; 0x354e <main+0x1728>
	else if (__tmp > 65535)
    3486:	fe 01       	movw	r30, r28
    3488:	e1 57       	subi	r30, 0x71	; 113
    348a:	fe 4f       	sbci	r31, 0xFE	; 254
    348c:	60 81       	ld	r22, Z
    348e:	71 81       	ldd	r23, Z+1	; 0x01
    3490:	82 81       	ldd	r24, Z+2	; 0x02
    3492:	93 81       	ldd	r25, Z+3	; 0x03
    3494:	20 e0       	ldi	r18, 0x00	; 0
    3496:	3f ef       	ldi	r19, 0xFF	; 255
    3498:	4f e7       	ldi	r20, 0x7F	; 127
    349a:	57 e4       	ldi	r21, 0x47	; 71
    349c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34a0:	18 16       	cp	r1, r24
    34a2:	0c f0       	brlt	.+2      	; 0x34a6 <main+0x1680>
    34a4:	43 c0       	rjmp	.+134    	; 0x352c <main+0x1706>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34a6:	fe 01       	movw	r30, r28
    34a8:	ed 56       	subi	r30, 0x6D	; 109
    34aa:	fe 4f       	sbci	r31, 0xFE	; 254
    34ac:	60 81       	ld	r22, Z
    34ae:	71 81       	ldd	r23, Z+1	; 0x01
    34b0:	82 81       	ldd	r24, Z+2	; 0x02
    34b2:	93 81       	ldd	r25, Z+3	; 0x03
    34b4:	20 e0       	ldi	r18, 0x00	; 0
    34b6:	30 e0       	ldi	r19, 0x00	; 0
    34b8:	40 e2       	ldi	r20, 0x20	; 32
    34ba:	51 e4       	ldi	r21, 0x41	; 65
    34bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34c0:	dc 01       	movw	r26, r24
    34c2:	cb 01       	movw	r24, r22
    34c4:	8e 01       	movw	r16, r28
    34c6:	03 57       	subi	r16, 0x73	; 115
    34c8:	1e 4f       	sbci	r17, 0xFE	; 254
    34ca:	bc 01       	movw	r22, r24
    34cc:	cd 01       	movw	r24, r26
    34ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	f8 01       	movw	r30, r16
    34d8:	91 83       	std	Z+1, r25	; 0x01
    34da:	80 83       	st	Z, r24
    34dc:	1f c0       	rjmp	.+62     	; 0x351c <main+0x16f6>
    34de:	fe 01       	movw	r30, r28
    34e0:	e5 57       	subi	r30, 0x75	; 117
    34e2:	fe 4f       	sbci	r31, 0xFE	; 254
    34e4:	88 ec       	ldi	r24, 0xC8	; 200
    34e6:	90 e0       	ldi	r25, 0x00	; 0
    34e8:	91 83       	std	Z+1, r25	; 0x01
    34ea:	80 83       	st	Z, r24
    34ec:	fe 01       	movw	r30, r28
    34ee:	e5 57       	subi	r30, 0x75	; 117
    34f0:	fe 4f       	sbci	r31, 0xFE	; 254
    34f2:	80 81       	ld	r24, Z
    34f4:	91 81       	ldd	r25, Z+1	; 0x01
    34f6:	01 97       	sbiw	r24, 0x01	; 1
    34f8:	f1 f7       	brne	.-4      	; 0x34f6 <main+0x16d0>
    34fa:	fe 01       	movw	r30, r28
    34fc:	e5 57       	subi	r30, 0x75	; 117
    34fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3500:	91 83       	std	Z+1, r25	; 0x01
    3502:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3504:	de 01       	movw	r26, r28
    3506:	a3 57       	subi	r26, 0x73	; 115
    3508:	be 4f       	sbci	r27, 0xFE	; 254
    350a:	fe 01       	movw	r30, r28
    350c:	e3 57       	subi	r30, 0x73	; 115
    350e:	fe 4f       	sbci	r31, 0xFE	; 254
    3510:	80 81       	ld	r24, Z
    3512:	91 81       	ldd	r25, Z+1	; 0x01
    3514:	01 97       	sbiw	r24, 0x01	; 1
    3516:	11 96       	adiw	r26, 0x01	; 1
    3518:	9c 93       	st	X, r25
    351a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    351c:	fe 01       	movw	r30, r28
    351e:	e3 57       	subi	r30, 0x73	; 115
    3520:	fe 4f       	sbci	r31, 0xFE	; 254
    3522:	80 81       	ld	r24, Z
    3524:	91 81       	ldd	r25, Z+1	; 0x01
    3526:	00 97       	sbiw	r24, 0x00	; 0
    3528:	d1 f6       	brne	.-76     	; 0x34de <main+0x16b8>
    352a:	27 c0       	rjmp	.+78     	; 0x357a <main+0x1754>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    352c:	8e 01       	movw	r16, r28
    352e:	03 57       	subi	r16, 0x73	; 115
    3530:	1e 4f       	sbci	r17, 0xFE	; 254
    3532:	fe 01       	movw	r30, r28
    3534:	e1 57       	subi	r30, 0x71	; 113
    3536:	fe 4f       	sbci	r31, 0xFE	; 254
    3538:	60 81       	ld	r22, Z
    353a:	71 81       	ldd	r23, Z+1	; 0x01
    353c:	82 81       	ldd	r24, Z+2	; 0x02
    353e:	93 81       	ldd	r25, Z+3	; 0x03
    3540:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3544:	dc 01       	movw	r26, r24
    3546:	cb 01       	movw	r24, r22
    3548:	f8 01       	movw	r30, r16
    354a:	91 83       	std	Z+1, r25	; 0x01
    354c:	80 83       	st	Z, r24
    354e:	de 01       	movw	r26, r28
    3550:	a7 57       	subi	r26, 0x77	; 119
    3552:	be 4f       	sbci	r27, 0xFE	; 254
    3554:	fe 01       	movw	r30, r28
    3556:	e3 57       	subi	r30, 0x73	; 115
    3558:	fe 4f       	sbci	r31, 0xFE	; 254
    355a:	80 81       	ld	r24, Z
    355c:	91 81       	ldd	r25, Z+1	; 0x01
    355e:	8d 93       	st	X+, r24
    3560:	9c 93       	st	X, r25
    3562:	fe 01       	movw	r30, r28
    3564:	e7 57       	subi	r30, 0x77	; 119
    3566:	fe 4f       	sbci	r31, 0xFE	; 254
    3568:	80 81       	ld	r24, Z
    356a:	91 81       	ldd	r25, Z+1	; 0x01
    356c:	01 97       	sbiw	r24, 0x01	; 1
    356e:	f1 f7       	brne	.-4      	; 0x356c <main+0x1746>
    3570:	fe 01       	movw	r30, r28
    3572:	e7 57       	subi	r30, 0x77	; 119
    3574:	fe 4f       	sbci	r31, 0xFE	; 254
    3576:	91 83       	std	Z+1, r25	; 0x01
    3578:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Knight Rider..");
    357a:	8c e8       	ldi	r24, 0x8C	; 140
    357c:	90 e0       	ldi	r25, 0x00	; 0
    357e:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    3582:	80 e0       	ldi	r24, 0x00	; 0
    3584:	61 e0       	ldi	r22, 0x01	; 1
    3586:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    358a:	fe 01       	movw	r30, r28
    358c:	eb 57       	subi	r30, 0x7B	; 123
    358e:	fe 4f       	sbci	r31, 0xFE	; 254
    3590:	80 e0       	ldi	r24, 0x00	; 0
    3592:	90 e0       	ldi	r25, 0x00	; 0
    3594:	a0 e8       	ldi	r26, 0x80	; 128
    3596:	bf e3       	ldi	r27, 0x3F	; 63
    3598:	80 83       	st	Z, r24
    359a:	91 83       	std	Z+1, r25	; 0x01
    359c:	a2 83       	std	Z+2, r26	; 0x02
    359e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35a0:	8e 01       	movw	r16, r28
    35a2:	0f 57       	subi	r16, 0x7F	; 127
    35a4:	1e 4f       	sbci	r17, 0xFE	; 254
    35a6:	fe 01       	movw	r30, r28
    35a8:	eb 57       	subi	r30, 0x7B	; 123
    35aa:	fe 4f       	sbci	r31, 0xFE	; 254
    35ac:	60 81       	ld	r22, Z
    35ae:	71 81       	ldd	r23, Z+1	; 0x01
    35b0:	82 81       	ldd	r24, Z+2	; 0x02
    35b2:	93 81       	ldd	r25, Z+3	; 0x03
    35b4:	20 e0       	ldi	r18, 0x00	; 0
    35b6:	30 e0       	ldi	r19, 0x00	; 0
    35b8:	4a ef       	ldi	r20, 0xFA	; 250
    35ba:	54 e4       	ldi	r21, 0x44	; 68
    35bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35c0:	dc 01       	movw	r26, r24
    35c2:	cb 01       	movw	r24, r22
    35c4:	f8 01       	movw	r30, r16
    35c6:	80 83       	st	Z, r24
    35c8:	91 83       	std	Z+1, r25	; 0x01
    35ca:	a2 83       	std	Z+2, r26	; 0x02
    35cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35ce:	fe 01       	movw	r30, r28
    35d0:	ef 57       	subi	r30, 0x7F	; 127
    35d2:	fe 4f       	sbci	r31, 0xFE	; 254
    35d4:	60 81       	ld	r22, Z
    35d6:	71 81       	ldd	r23, Z+1	; 0x01
    35d8:	82 81       	ldd	r24, Z+2	; 0x02
    35da:	93 81       	ldd	r25, Z+3	; 0x03
    35dc:	20 e0       	ldi	r18, 0x00	; 0
    35de:	30 e0       	ldi	r19, 0x00	; 0
    35e0:	40 e8       	ldi	r20, 0x80	; 128
    35e2:	5f e3       	ldi	r21, 0x3F	; 63
    35e4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35e8:	88 23       	and	r24, r24
    35ea:	44 f4       	brge	.+16     	; 0x35fc <main+0x17d6>
		__ticks = 1;
    35ec:	fe 01       	movw	r30, r28
    35ee:	e1 58       	subi	r30, 0x81	; 129
    35f0:	fe 4f       	sbci	r31, 0xFE	; 254
    35f2:	81 e0       	ldi	r24, 0x01	; 1
    35f4:	90 e0       	ldi	r25, 0x00	; 0
    35f6:	91 83       	std	Z+1, r25	; 0x01
    35f8:	80 83       	st	Z, r24
    35fa:	64 c0       	rjmp	.+200    	; 0x36c4 <main+0x189e>
	else if (__tmp > 65535)
    35fc:	fe 01       	movw	r30, r28
    35fe:	ef 57       	subi	r30, 0x7F	; 127
    3600:	fe 4f       	sbci	r31, 0xFE	; 254
    3602:	60 81       	ld	r22, Z
    3604:	71 81       	ldd	r23, Z+1	; 0x01
    3606:	82 81       	ldd	r24, Z+2	; 0x02
    3608:	93 81       	ldd	r25, Z+3	; 0x03
    360a:	20 e0       	ldi	r18, 0x00	; 0
    360c:	3f ef       	ldi	r19, 0xFF	; 255
    360e:	4f e7       	ldi	r20, 0x7F	; 127
    3610:	57 e4       	ldi	r21, 0x47	; 71
    3612:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3616:	18 16       	cp	r1, r24
    3618:	0c f0       	brlt	.+2      	; 0x361c <main+0x17f6>
    361a:	43 c0       	rjmp	.+134    	; 0x36a2 <main+0x187c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    361c:	fe 01       	movw	r30, r28
    361e:	eb 57       	subi	r30, 0x7B	; 123
    3620:	fe 4f       	sbci	r31, 0xFE	; 254
    3622:	60 81       	ld	r22, Z
    3624:	71 81       	ldd	r23, Z+1	; 0x01
    3626:	82 81       	ldd	r24, Z+2	; 0x02
    3628:	93 81       	ldd	r25, Z+3	; 0x03
    362a:	20 e0       	ldi	r18, 0x00	; 0
    362c:	30 e0       	ldi	r19, 0x00	; 0
    362e:	40 e2       	ldi	r20, 0x20	; 32
    3630:	51 e4       	ldi	r21, 0x41	; 65
    3632:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3636:	dc 01       	movw	r26, r24
    3638:	cb 01       	movw	r24, r22
    363a:	8e 01       	movw	r16, r28
    363c:	01 58       	subi	r16, 0x81	; 129
    363e:	1e 4f       	sbci	r17, 0xFE	; 254
    3640:	bc 01       	movw	r22, r24
    3642:	cd 01       	movw	r24, r26
    3644:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3648:	dc 01       	movw	r26, r24
    364a:	cb 01       	movw	r24, r22
    364c:	f8 01       	movw	r30, r16
    364e:	91 83       	std	Z+1, r25	; 0x01
    3650:	80 83       	st	Z, r24
    3652:	1f c0       	rjmp	.+62     	; 0x3692 <main+0x186c>
    3654:	fe 01       	movw	r30, r28
    3656:	e3 58       	subi	r30, 0x83	; 131
    3658:	fe 4f       	sbci	r31, 0xFE	; 254
    365a:	88 ec       	ldi	r24, 0xC8	; 200
    365c:	90 e0       	ldi	r25, 0x00	; 0
    365e:	91 83       	std	Z+1, r25	; 0x01
    3660:	80 83       	st	Z, r24
    3662:	fe 01       	movw	r30, r28
    3664:	e3 58       	subi	r30, 0x83	; 131
    3666:	fe 4f       	sbci	r31, 0xFE	; 254
    3668:	80 81       	ld	r24, Z
    366a:	91 81       	ldd	r25, Z+1	; 0x01
    366c:	01 97       	sbiw	r24, 0x01	; 1
    366e:	f1 f7       	brne	.-4      	; 0x366c <main+0x1846>
    3670:	fe 01       	movw	r30, r28
    3672:	e3 58       	subi	r30, 0x83	; 131
    3674:	fe 4f       	sbci	r31, 0xFE	; 254
    3676:	91 83       	std	Z+1, r25	; 0x01
    3678:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    367a:	de 01       	movw	r26, r28
    367c:	a1 58       	subi	r26, 0x81	; 129
    367e:	be 4f       	sbci	r27, 0xFE	; 254
    3680:	fe 01       	movw	r30, r28
    3682:	e1 58       	subi	r30, 0x81	; 129
    3684:	fe 4f       	sbci	r31, 0xFE	; 254
    3686:	80 81       	ld	r24, Z
    3688:	91 81       	ldd	r25, Z+1	; 0x01
    368a:	01 97       	sbiw	r24, 0x01	; 1
    368c:	11 96       	adiw	r26, 0x01	; 1
    368e:	9c 93       	st	X, r25
    3690:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3692:	fe 01       	movw	r30, r28
    3694:	e1 58       	subi	r30, 0x81	; 129
    3696:	fe 4f       	sbci	r31, 0xFE	; 254
    3698:	80 81       	ld	r24, Z
    369a:	91 81       	ldd	r25, Z+1	; 0x01
    369c:	00 97       	sbiw	r24, 0x00	; 0
    369e:	d1 f6       	brne	.-76     	; 0x3654 <main+0x182e>
    36a0:	27 c0       	rjmp	.+78     	; 0x36f0 <main+0x18ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36a2:	8e 01       	movw	r16, r28
    36a4:	01 58       	subi	r16, 0x81	; 129
    36a6:	1e 4f       	sbci	r17, 0xFE	; 254
    36a8:	fe 01       	movw	r30, r28
    36aa:	ef 57       	subi	r30, 0x7F	; 127
    36ac:	fe 4f       	sbci	r31, 0xFE	; 254
    36ae:	60 81       	ld	r22, Z
    36b0:	71 81       	ldd	r23, Z+1	; 0x01
    36b2:	82 81       	ldd	r24, Z+2	; 0x02
    36b4:	93 81       	ldd	r25, Z+3	; 0x03
    36b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36ba:	dc 01       	movw	r26, r24
    36bc:	cb 01       	movw	r24, r22
    36be:	f8 01       	movw	r30, r16
    36c0:	91 83       	std	Z+1, r25	; 0x01
    36c2:	80 83       	st	Z, r24
    36c4:	de 01       	movw	r26, r28
    36c6:	a5 58       	subi	r26, 0x85	; 133
    36c8:	be 4f       	sbci	r27, 0xFE	; 254
    36ca:	fe 01       	movw	r30, r28
    36cc:	e1 58       	subi	r30, 0x81	; 129
    36ce:	fe 4f       	sbci	r31, 0xFE	; 254
    36d0:	80 81       	ld	r24, Z
    36d2:	91 81       	ldd	r25, Z+1	; 0x01
    36d4:	8d 93       	st	X+, r24
    36d6:	9c 93       	st	X, r25
    36d8:	fe 01       	movw	r30, r28
    36da:	e5 58       	subi	r30, 0x85	; 133
    36dc:	fe 4f       	sbci	r31, 0xFE	; 254
    36de:	80 81       	ld	r24, Z
    36e0:	91 81       	ldd	r25, Z+1	; 0x01
    36e2:	01 97       	sbiw	r24, 0x01	; 1
    36e4:	f1 f7       	brne	.-4      	; 0x36e2 <main+0x18bc>
    36e6:	fe 01       	movw	r30, r28
    36e8:	e5 58       	subi	r30, 0x85	; 133
    36ea:	fe 4f       	sbci	r31, 0xFE	; 254
    36ec:	91 83       	std	Z+1, r25	; 0x01
    36ee:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    36f0:	8b e6       	ldi	r24, 0x6B	; 107
    36f2:	90 e0       	ldi	r25, 0x00	; 0
    36f4:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    36f8:	2a c3       	rjmp	.+1620   	; 0x3d4e <main+0x1f28>
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<8 ;i++){
    36fa:	fe 01       	movw	r30, r28
    36fc:	ef 59       	subi	r30, 0x9F	; 159
    36fe:	fd 4f       	sbci	r31, 0xFD	; 253
    3700:	10 82       	st	Z, r1
    3702:	8c c1       	rjmp	.+792    	; 0x3a1c <main+0x1bf6>
						Copy_u8KpdValue=KPD_u8GetKeyState();
    3704:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    3708:	fe 01       	movw	r30, r28
    370a:	ed 59       	subi	r30, 0x9D	; 157
    370c:	fd 4f       	sbci	r31, 0xFD	; 253
    370e:	80 83       	st	Z, r24
						if(Copy_u8KpdValue==13) break;
    3710:	fe 01       	movw	r30, r28
    3712:	ed 59       	subi	r30, 0x9D	; 157
    3714:	fd 4f       	sbci	r31, 0xFD	; 253
    3716:	80 81       	ld	r24, Z
    3718:	8d 30       	cpi	r24, 0x0D	; 13
    371a:	09 f4       	brne	.+2      	; 0x371e <main+0x18f8>
    371c:	86 c1       	rjmp	.+780    	; 0x3a2a <main+0x1c04>
						LED_voidControlLed( PORT_u8B,i, PIN_HIGH);
    371e:	fe 01       	movw	r30, r28
    3720:	ef 59       	subi	r30, 0x9F	; 159
    3722:	fd 4f       	sbci	r31, 0xFD	; 253
    3724:	82 e0       	ldi	r24, 0x02	; 2
    3726:	60 81       	ld	r22, Z
    3728:	41 e0       	ldi	r20, 0x01	; 1
    372a:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    372e:	fe 01       	movw	r30, r28
    3730:	e9 58       	subi	r30, 0x89	; 137
    3732:	fe 4f       	sbci	r31, 0xFE	; 254
    3734:	80 e0       	ldi	r24, 0x00	; 0
    3736:	90 e0       	ldi	r25, 0x00	; 0
    3738:	aa ef       	ldi	r26, 0xFA	; 250
    373a:	b3 e4       	ldi	r27, 0x43	; 67
    373c:	80 83       	st	Z, r24
    373e:	91 83       	std	Z+1, r25	; 0x01
    3740:	a2 83       	std	Z+2, r26	; 0x02
    3742:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3744:	8e 01       	movw	r16, r28
    3746:	0d 58       	subi	r16, 0x8D	; 141
    3748:	1e 4f       	sbci	r17, 0xFE	; 254
    374a:	fe 01       	movw	r30, r28
    374c:	e9 58       	subi	r30, 0x89	; 137
    374e:	fe 4f       	sbci	r31, 0xFE	; 254
    3750:	60 81       	ld	r22, Z
    3752:	71 81       	ldd	r23, Z+1	; 0x01
    3754:	82 81       	ldd	r24, Z+2	; 0x02
    3756:	93 81       	ldd	r25, Z+3	; 0x03
    3758:	20 e0       	ldi	r18, 0x00	; 0
    375a:	30 e0       	ldi	r19, 0x00	; 0
    375c:	4a ef       	ldi	r20, 0xFA	; 250
    375e:	54 e4       	ldi	r21, 0x44	; 68
    3760:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3764:	dc 01       	movw	r26, r24
    3766:	cb 01       	movw	r24, r22
    3768:	f8 01       	movw	r30, r16
    376a:	80 83       	st	Z, r24
    376c:	91 83       	std	Z+1, r25	; 0x01
    376e:	a2 83       	std	Z+2, r26	; 0x02
    3770:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3772:	fe 01       	movw	r30, r28
    3774:	ed 58       	subi	r30, 0x8D	; 141
    3776:	fe 4f       	sbci	r31, 0xFE	; 254
    3778:	60 81       	ld	r22, Z
    377a:	71 81       	ldd	r23, Z+1	; 0x01
    377c:	82 81       	ldd	r24, Z+2	; 0x02
    377e:	93 81       	ldd	r25, Z+3	; 0x03
    3780:	20 e0       	ldi	r18, 0x00	; 0
    3782:	30 e0       	ldi	r19, 0x00	; 0
    3784:	40 e8       	ldi	r20, 0x80	; 128
    3786:	5f e3       	ldi	r21, 0x3F	; 63
    3788:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    378c:	88 23       	and	r24, r24
    378e:	44 f4       	brge	.+16     	; 0x37a0 <main+0x197a>
		__ticks = 1;
    3790:	fe 01       	movw	r30, r28
    3792:	ef 58       	subi	r30, 0x8F	; 143
    3794:	fe 4f       	sbci	r31, 0xFE	; 254
    3796:	81 e0       	ldi	r24, 0x01	; 1
    3798:	90 e0       	ldi	r25, 0x00	; 0
    379a:	91 83       	std	Z+1, r25	; 0x01
    379c:	80 83       	st	Z, r24
    379e:	64 c0       	rjmp	.+200    	; 0x3868 <main+0x1a42>
	else if (__tmp > 65535)
    37a0:	fe 01       	movw	r30, r28
    37a2:	ed 58       	subi	r30, 0x8D	; 141
    37a4:	fe 4f       	sbci	r31, 0xFE	; 254
    37a6:	60 81       	ld	r22, Z
    37a8:	71 81       	ldd	r23, Z+1	; 0x01
    37aa:	82 81       	ldd	r24, Z+2	; 0x02
    37ac:	93 81       	ldd	r25, Z+3	; 0x03
    37ae:	20 e0       	ldi	r18, 0x00	; 0
    37b0:	3f ef       	ldi	r19, 0xFF	; 255
    37b2:	4f e7       	ldi	r20, 0x7F	; 127
    37b4:	57 e4       	ldi	r21, 0x47	; 71
    37b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37ba:	18 16       	cp	r1, r24
    37bc:	0c f0       	brlt	.+2      	; 0x37c0 <main+0x199a>
    37be:	43 c0       	rjmp	.+134    	; 0x3846 <main+0x1a20>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37c0:	fe 01       	movw	r30, r28
    37c2:	e9 58       	subi	r30, 0x89	; 137
    37c4:	fe 4f       	sbci	r31, 0xFE	; 254
    37c6:	60 81       	ld	r22, Z
    37c8:	71 81       	ldd	r23, Z+1	; 0x01
    37ca:	82 81       	ldd	r24, Z+2	; 0x02
    37cc:	93 81       	ldd	r25, Z+3	; 0x03
    37ce:	20 e0       	ldi	r18, 0x00	; 0
    37d0:	30 e0       	ldi	r19, 0x00	; 0
    37d2:	40 e2       	ldi	r20, 0x20	; 32
    37d4:	51 e4       	ldi	r21, 0x41	; 65
    37d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37da:	dc 01       	movw	r26, r24
    37dc:	cb 01       	movw	r24, r22
    37de:	8e 01       	movw	r16, r28
    37e0:	0f 58       	subi	r16, 0x8F	; 143
    37e2:	1e 4f       	sbci	r17, 0xFE	; 254
    37e4:	bc 01       	movw	r22, r24
    37e6:	cd 01       	movw	r24, r26
    37e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37ec:	dc 01       	movw	r26, r24
    37ee:	cb 01       	movw	r24, r22
    37f0:	f8 01       	movw	r30, r16
    37f2:	91 83       	std	Z+1, r25	; 0x01
    37f4:	80 83       	st	Z, r24
    37f6:	1f c0       	rjmp	.+62     	; 0x3836 <main+0x1a10>
    37f8:	fe 01       	movw	r30, r28
    37fa:	e1 59       	subi	r30, 0x91	; 145
    37fc:	fe 4f       	sbci	r31, 0xFE	; 254
    37fe:	88 ec       	ldi	r24, 0xC8	; 200
    3800:	90 e0       	ldi	r25, 0x00	; 0
    3802:	91 83       	std	Z+1, r25	; 0x01
    3804:	80 83       	st	Z, r24
    3806:	fe 01       	movw	r30, r28
    3808:	e1 59       	subi	r30, 0x91	; 145
    380a:	fe 4f       	sbci	r31, 0xFE	; 254
    380c:	80 81       	ld	r24, Z
    380e:	91 81       	ldd	r25, Z+1	; 0x01
    3810:	01 97       	sbiw	r24, 0x01	; 1
    3812:	f1 f7       	brne	.-4      	; 0x3810 <main+0x19ea>
    3814:	fe 01       	movw	r30, r28
    3816:	e1 59       	subi	r30, 0x91	; 145
    3818:	fe 4f       	sbci	r31, 0xFE	; 254
    381a:	91 83       	std	Z+1, r25	; 0x01
    381c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    381e:	de 01       	movw	r26, r28
    3820:	af 58       	subi	r26, 0x8F	; 143
    3822:	be 4f       	sbci	r27, 0xFE	; 254
    3824:	fe 01       	movw	r30, r28
    3826:	ef 58       	subi	r30, 0x8F	; 143
    3828:	fe 4f       	sbci	r31, 0xFE	; 254
    382a:	80 81       	ld	r24, Z
    382c:	91 81       	ldd	r25, Z+1	; 0x01
    382e:	01 97       	sbiw	r24, 0x01	; 1
    3830:	11 96       	adiw	r26, 0x01	; 1
    3832:	9c 93       	st	X, r25
    3834:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3836:	fe 01       	movw	r30, r28
    3838:	ef 58       	subi	r30, 0x8F	; 143
    383a:	fe 4f       	sbci	r31, 0xFE	; 254
    383c:	80 81       	ld	r24, Z
    383e:	91 81       	ldd	r25, Z+1	; 0x01
    3840:	00 97       	sbiw	r24, 0x00	; 0
    3842:	d1 f6       	brne	.-76     	; 0x37f8 <main+0x19d2>
    3844:	27 c0       	rjmp	.+78     	; 0x3894 <main+0x1a6e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3846:	8e 01       	movw	r16, r28
    3848:	0f 58       	subi	r16, 0x8F	; 143
    384a:	1e 4f       	sbci	r17, 0xFE	; 254
    384c:	fe 01       	movw	r30, r28
    384e:	ed 58       	subi	r30, 0x8D	; 141
    3850:	fe 4f       	sbci	r31, 0xFE	; 254
    3852:	60 81       	ld	r22, Z
    3854:	71 81       	ldd	r23, Z+1	; 0x01
    3856:	82 81       	ldd	r24, Z+2	; 0x02
    3858:	93 81       	ldd	r25, Z+3	; 0x03
    385a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    385e:	dc 01       	movw	r26, r24
    3860:	cb 01       	movw	r24, r22
    3862:	f8 01       	movw	r30, r16
    3864:	91 83       	std	Z+1, r25	; 0x01
    3866:	80 83       	st	Z, r24
    3868:	de 01       	movw	r26, r28
    386a:	a3 59       	subi	r26, 0x93	; 147
    386c:	be 4f       	sbci	r27, 0xFE	; 254
    386e:	fe 01       	movw	r30, r28
    3870:	ef 58       	subi	r30, 0x8F	; 143
    3872:	fe 4f       	sbci	r31, 0xFE	; 254
    3874:	80 81       	ld	r24, Z
    3876:	91 81       	ldd	r25, Z+1	; 0x01
    3878:	8d 93       	st	X+, r24
    387a:	9c 93       	st	X, r25
    387c:	fe 01       	movw	r30, r28
    387e:	e3 59       	subi	r30, 0x93	; 147
    3880:	fe 4f       	sbci	r31, 0xFE	; 254
    3882:	80 81       	ld	r24, Z
    3884:	91 81       	ldd	r25, Z+1	; 0x01
    3886:	01 97       	sbiw	r24, 0x01	; 1
    3888:	f1 f7       	brne	.-4      	; 0x3886 <main+0x1a60>
    388a:	fe 01       	movw	r30, r28
    388c:	e3 59       	subi	r30, 0x93	; 147
    388e:	fe 4f       	sbci	r31, 0xFE	; 254
    3890:	91 83       	std	Z+1, r25	; 0x01
    3892:	80 83       	st	Z, r24
						_delay_ms(500);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
    3894:	fe 01       	movw	r30, r28
    3896:	ef 59       	subi	r30, 0x9F	; 159
    3898:	fd 4f       	sbci	r31, 0xFD	; 253
    389a:	82 e0       	ldi	r24, 0x02	; 2
    389c:	60 81       	ld	r22, Z
    389e:	40 e0       	ldi	r20, 0x00	; 0
    38a0:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    38a4:	fe 01       	movw	r30, r28
    38a6:	e7 59       	subi	r30, 0x97	; 151
    38a8:	fe 4f       	sbci	r31, 0xFE	; 254
    38aa:	80 e0       	ldi	r24, 0x00	; 0
    38ac:	90 e0       	ldi	r25, 0x00	; 0
    38ae:	a8 ec       	ldi	r26, 0xC8	; 200
    38b0:	b2 e4       	ldi	r27, 0x42	; 66
    38b2:	80 83       	st	Z, r24
    38b4:	91 83       	std	Z+1, r25	; 0x01
    38b6:	a2 83       	std	Z+2, r26	; 0x02
    38b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38ba:	8e 01       	movw	r16, r28
    38bc:	0b 59       	subi	r16, 0x9B	; 155
    38be:	1e 4f       	sbci	r17, 0xFE	; 254
    38c0:	fe 01       	movw	r30, r28
    38c2:	e7 59       	subi	r30, 0x97	; 151
    38c4:	fe 4f       	sbci	r31, 0xFE	; 254
    38c6:	60 81       	ld	r22, Z
    38c8:	71 81       	ldd	r23, Z+1	; 0x01
    38ca:	82 81       	ldd	r24, Z+2	; 0x02
    38cc:	93 81       	ldd	r25, Z+3	; 0x03
    38ce:	20 e0       	ldi	r18, 0x00	; 0
    38d0:	30 e0       	ldi	r19, 0x00	; 0
    38d2:	4a ef       	ldi	r20, 0xFA	; 250
    38d4:	54 e4       	ldi	r21, 0x44	; 68
    38d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38da:	dc 01       	movw	r26, r24
    38dc:	cb 01       	movw	r24, r22
    38de:	f8 01       	movw	r30, r16
    38e0:	80 83       	st	Z, r24
    38e2:	91 83       	std	Z+1, r25	; 0x01
    38e4:	a2 83       	std	Z+2, r26	; 0x02
    38e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38e8:	fe 01       	movw	r30, r28
    38ea:	eb 59       	subi	r30, 0x9B	; 155
    38ec:	fe 4f       	sbci	r31, 0xFE	; 254
    38ee:	60 81       	ld	r22, Z
    38f0:	71 81       	ldd	r23, Z+1	; 0x01
    38f2:	82 81       	ldd	r24, Z+2	; 0x02
    38f4:	93 81       	ldd	r25, Z+3	; 0x03
    38f6:	20 e0       	ldi	r18, 0x00	; 0
    38f8:	30 e0       	ldi	r19, 0x00	; 0
    38fa:	40 e8       	ldi	r20, 0x80	; 128
    38fc:	5f e3       	ldi	r21, 0x3F	; 63
    38fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3902:	88 23       	and	r24, r24
    3904:	44 f4       	brge	.+16     	; 0x3916 <main+0x1af0>
		__ticks = 1;
    3906:	fe 01       	movw	r30, r28
    3908:	ed 59       	subi	r30, 0x9D	; 157
    390a:	fe 4f       	sbci	r31, 0xFE	; 254
    390c:	81 e0       	ldi	r24, 0x01	; 1
    390e:	90 e0       	ldi	r25, 0x00	; 0
    3910:	91 83       	std	Z+1, r25	; 0x01
    3912:	80 83       	st	Z, r24
    3914:	64 c0       	rjmp	.+200    	; 0x39de <main+0x1bb8>
	else if (__tmp > 65535)
    3916:	fe 01       	movw	r30, r28
    3918:	eb 59       	subi	r30, 0x9B	; 155
    391a:	fe 4f       	sbci	r31, 0xFE	; 254
    391c:	60 81       	ld	r22, Z
    391e:	71 81       	ldd	r23, Z+1	; 0x01
    3920:	82 81       	ldd	r24, Z+2	; 0x02
    3922:	93 81       	ldd	r25, Z+3	; 0x03
    3924:	20 e0       	ldi	r18, 0x00	; 0
    3926:	3f ef       	ldi	r19, 0xFF	; 255
    3928:	4f e7       	ldi	r20, 0x7F	; 127
    392a:	57 e4       	ldi	r21, 0x47	; 71
    392c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3930:	18 16       	cp	r1, r24
    3932:	0c f0       	brlt	.+2      	; 0x3936 <main+0x1b10>
    3934:	43 c0       	rjmp	.+134    	; 0x39bc <main+0x1b96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3936:	fe 01       	movw	r30, r28
    3938:	e7 59       	subi	r30, 0x97	; 151
    393a:	fe 4f       	sbci	r31, 0xFE	; 254
    393c:	60 81       	ld	r22, Z
    393e:	71 81       	ldd	r23, Z+1	; 0x01
    3940:	82 81       	ldd	r24, Z+2	; 0x02
    3942:	93 81       	ldd	r25, Z+3	; 0x03
    3944:	20 e0       	ldi	r18, 0x00	; 0
    3946:	30 e0       	ldi	r19, 0x00	; 0
    3948:	40 e2       	ldi	r20, 0x20	; 32
    394a:	51 e4       	ldi	r21, 0x41	; 65
    394c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3950:	dc 01       	movw	r26, r24
    3952:	cb 01       	movw	r24, r22
    3954:	8e 01       	movw	r16, r28
    3956:	0d 59       	subi	r16, 0x9D	; 157
    3958:	1e 4f       	sbci	r17, 0xFE	; 254
    395a:	bc 01       	movw	r22, r24
    395c:	cd 01       	movw	r24, r26
    395e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3962:	dc 01       	movw	r26, r24
    3964:	cb 01       	movw	r24, r22
    3966:	f8 01       	movw	r30, r16
    3968:	91 83       	std	Z+1, r25	; 0x01
    396a:	80 83       	st	Z, r24
    396c:	1f c0       	rjmp	.+62     	; 0x39ac <main+0x1b86>
    396e:	fe 01       	movw	r30, r28
    3970:	ef 59       	subi	r30, 0x9F	; 159
    3972:	fe 4f       	sbci	r31, 0xFE	; 254
    3974:	88 ec       	ldi	r24, 0xC8	; 200
    3976:	90 e0       	ldi	r25, 0x00	; 0
    3978:	91 83       	std	Z+1, r25	; 0x01
    397a:	80 83       	st	Z, r24
    397c:	fe 01       	movw	r30, r28
    397e:	ef 59       	subi	r30, 0x9F	; 159
    3980:	fe 4f       	sbci	r31, 0xFE	; 254
    3982:	80 81       	ld	r24, Z
    3984:	91 81       	ldd	r25, Z+1	; 0x01
    3986:	01 97       	sbiw	r24, 0x01	; 1
    3988:	f1 f7       	brne	.-4      	; 0x3986 <main+0x1b60>
    398a:	fe 01       	movw	r30, r28
    398c:	ef 59       	subi	r30, 0x9F	; 159
    398e:	fe 4f       	sbci	r31, 0xFE	; 254
    3990:	91 83       	std	Z+1, r25	; 0x01
    3992:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3994:	de 01       	movw	r26, r28
    3996:	ad 59       	subi	r26, 0x9D	; 157
    3998:	be 4f       	sbci	r27, 0xFE	; 254
    399a:	fe 01       	movw	r30, r28
    399c:	ed 59       	subi	r30, 0x9D	; 157
    399e:	fe 4f       	sbci	r31, 0xFE	; 254
    39a0:	80 81       	ld	r24, Z
    39a2:	91 81       	ldd	r25, Z+1	; 0x01
    39a4:	01 97       	sbiw	r24, 0x01	; 1
    39a6:	11 96       	adiw	r26, 0x01	; 1
    39a8:	9c 93       	st	X, r25
    39aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39ac:	fe 01       	movw	r30, r28
    39ae:	ed 59       	subi	r30, 0x9D	; 157
    39b0:	fe 4f       	sbci	r31, 0xFE	; 254
    39b2:	80 81       	ld	r24, Z
    39b4:	91 81       	ldd	r25, Z+1	; 0x01
    39b6:	00 97       	sbiw	r24, 0x00	; 0
    39b8:	d1 f6       	brne	.-76     	; 0x396e <main+0x1b48>
    39ba:	27 c0       	rjmp	.+78     	; 0x3a0a <main+0x1be4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39bc:	8e 01       	movw	r16, r28
    39be:	0d 59       	subi	r16, 0x9D	; 157
    39c0:	1e 4f       	sbci	r17, 0xFE	; 254
    39c2:	fe 01       	movw	r30, r28
    39c4:	eb 59       	subi	r30, 0x9B	; 155
    39c6:	fe 4f       	sbci	r31, 0xFE	; 254
    39c8:	60 81       	ld	r22, Z
    39ca:	71 81       	ldd	r23, Z+1	; 0x01
    39cc:	82 81       	ldd	r24, Z+2	; 0x02
    39ce:	93 81       	ldd	r25, Z+3	; 0x03
    39d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39d4:	dc 01       	movw	r26, r24
    39d6:	cb 01       	movw	r24, r22
    39d8:	f8 01       	movw	r30, r16
    39da:	91 83       	std	Z+1, r25	; 0x01
    39dc:	80 83       	st	Z, r24
    39de:	de 01       	movw	r26, r28
    39e0:	a1 5a       	subi	r26, 0xA1	; 161
    39e2:	be 4f       	sbci	r27, 0xFE	; 254
    39e4:	fe 01       	movw	r30, r28
    39e6:	ed 59       	subi	r30, 0x9D	; 157
    39e8:	fe 4f       	sbci	r31, 0xFE	; 254
    39ea:	80 81       	ld	r24, Z
    39ec:	91 81       	ldd	r25, Z+1	; 0x01
    39ee:	8d 93       	st	X+, r24
    39f0:	9c 93       	st	X, r25
    39f2:	fe 01       	movw	r30, r28
    39f4:	e1 5a       	subi	r30, 0xA1	; 161
    39f6:	fe 4f       	sbci	r31, 0xFE	; 254
    39f8:	80 81       	ld	r24, Z
    39fa:	91 81       	ldd	r25, Z+1	; 0x01
    39fc:	01 97       	sbiw	r24, 0x01	; 1
    39fe:	f1 f7       	brne	.-4      	; 0x39fc <main+0x1bd6>
    3a00:	fe 01       	movw	r30, r28
    3a02:	e1 5a       	subi	r30, 0xA1	; 161
    3a04:	fe 4f       	sbci	r31, 0xFE	; 254
    3a06:	91 83       	std	Z+1, r25	; 0x01
    3a08:	80 83       	st	Z, r24
				CLCD_voidSendString("Knight Rider..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<8 ;i++){
    3a0a:	de 01       	movw	r26, r28
    3a0c:	af 59       	subi	r26, 0x9F	; 159
    3a0e:	bd 4f       	sbci	r27, 0xFD	; 253
    3a10:	fe 01       	movw	r30, r28
    3a12:	ef 59       	subi	r30, 0x9F	; 159
    3a14:	fd 4f       	sbci	r31, 0xFD	; 253
    3a16:	80 81       	ld	r24, Z
    3a18:	8f 5f       	subi	r24, 0xFF	; 255
    3a1a:	8c 93       	st	X, r24
    3a1c:	fe 01       	movw	r30, r28
    3a1e:	ef 59       	subi	r30, 0x9F	; 159
    3a20:	fd 4f       	sbci	r31, 0xFD	; 253
    3a22:	80 81       	ld	r24, Z
    3a24:	88 30       	cpi	r24, 0x08	; 8
    3a26:	08 f4       	brcc	.+2      	; 0x3a2a <main+0x1c04>
    3a28:	6d ce       	rjmp	.-806    	; 0x3704 <main+0x18de>
						LED_voidControlLed( PORT_u8B,i, PIN_HIGH);
						_delay_ms(500);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
						_delay_ms(100);
					}
					for(u8 i=6 ; i>=0 ;i--){
    3a2a:	fe 01       	movw	r30, r28
    3a2c:	e0 5a       	subi	r30, 0xA0	; 160
    3a2e:	fd 4f       	sbci	r31, 0xFD	; 253
    3a30:	86 e0       	ldi	r24, 0x06	; 6
    3a32:	80 83       	st	Z, r24
						Copy_u8KpdValue=KPD_u8GetKeyState();
    3a34:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    3a38:	fe 01       	movw	r30, r28
    3a3a:	ed 59       	subi	r30, 0x9D	; 157
    3a3c:	fd 4f       	sbci	r31, 0xFD	; 253
    3a3e:	80 83       	st	Z, r24
						if(Copy_u8KpdValue==13) break;
    3a40:	fe 01       	movw	r30, r28
    3a42:	ed 59       	subi	r30, 0x9D	; 157
    3a44:	fd 4f       	sbci	r31, 0xFD	; 253
    3a46:	80 81       	ld	r24, Z
    3a48:	8d 30       	cpi	r24, 0x0D	; 13
    3a4a:	09 f4       	brne	.+2      	; 0x3a4e <main+0x1c28>
    3a4c:	80 c1       	rjmp	.+768    	; 0x3d4e <main+0x1f28>
						LED_voidControlLed( PORT_u8B,i, PIN_HIGH);
    3a4e:	fe 01       	movw	r30, r28
    3a50:	e0 5a       	subi	r30, 0xA0	; 160
    3a52:	fd 4f       	sbci	r31, 0xFD	; 253
    3a54:	82 e0       	ldi	r24, 0x02	; 2
    3a56:	60 81       	ld	r22, Z
    3a58:	41 e0       	ldi	r20, 0x01	; 1
    3a5a:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    3a5e:	fe 01       	movw	r30, r28
    3a60:	e5 5a       	subi	r30, 0xA5	; 165
    3a62:	fe 4f       	sbci	r31, 0xFE	; 254
    3a64:	80 e0       	ldi	r24, 0x00	; 0
    3a66:	90 e0       	ldi	r25, 0x00	; 0
    3a68:	aa ef       	ldi	r26, 0xFA	; 250
    3a6a:	b3 e4       	ldi	r27, 0x43	; 67
    3a6c:	80 83       	st	Z, r24
    3a6e:	91 83       	std	Z+1, r25	; 0x01
    3a70:	a2 83       	std	Z+2, r26	; 0x02
    3a72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a74:	8e 01       	movw	r16, r28
    3a76:	09 5a       	subi	r16, 0xA9	; 169
    3a78:	1e 4f       	sbci	r17, 0xFE	; 254
    3a7a:	fe 01       	movw	r30, r28
    3a7c:	e5 5a       	subi	r30, 0xA5	; 165
    3a7e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a80:	60 81       	ld	r22, Z
    3a82:	71 81       	ldd	r23, Z+1	; 0x01
    3a84:	82 81       	ldd	r24, Z+2	; 0x02
    3a86:	93 81       	ldd	r25, Z+3	; 0x03
    3a88:	20 e0       	ldi	r18, 0x00	; 0
    3a8a:	30 e0       	ldi	r19, 0x00	; 0
    3a8c:	4a ef       	ldi	r20, 0xFA	; 250
    3a8e:	54 e4       	ldi	r21, 0x44	; 68
    3a90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a94:	dc 01       	movw	r26, r24
    3a96:	cb 01       	movw	r24, r22
    3a98:	f8 01       	movw	r30, r16
    3a9a:	80 83       	st	Z, r24
    3a9c:	91 83       	std	Z+1, r25	; 0x01
    3a9e:	a2 83       	std	Z+2, r26	; 0x02
    3aa0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3aa2:	fe 01       	movw	r30, r28
    3aa4:	e9 5a       	subi	r30, 0xA9	; 169
    3aa6:	fe 4f       	sbci	r31, 0xFE	; 254
    3aa8:	60 81       	ld	r22, Z
    3aaa:	71 81       	ldd	r23, Z+1	; 0x01
    3aac:	82 81       	ldd	r24, Z+2	; 0x02
    3aae:	93 81       	ldd	r25, Z+3	; 0x03
    3ab0:	20 e0       	ldi	r18, 0x00	; 0
    3ab2:	30 e0       	ldi	r19, 0x00	; 0
    3ab4:	40 e8       	ldi	r20, 0x80	; 128
    3ab6:	5f e3       	ldi	r21, 0x3F	; 63
    3ab8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3abc:	88 23       	and	r24, r24
    3abe:	44 f4       	brge	.+16     	; 0x3ad0 <main+0x1caa>
		__ticks = 1;
    3ac0:	fe 01       	movw	r30, r28
    3ac2:	eb 5a       	subi	r30, 0xAB	; 171
    3ac4:	fe 4f       	sbci	r31, 0xFE	; 254
    3ac6:	81 e0       	ldi	r24, 0x01	; 1
    3ac8:	90 e0       	ldi	r25, 0x00	; 0
    3aca:	91 83       	std	Z+1, r25	; 0x01
    3acc:	80 83       	st	Z, r24
    3ace:	64 c0       	rjmp	.+200    	; 0x3b98 <main+0x1d72>
	else if (__tmp > 65535)
    3ad0:	fe 01       	movw	r30, r28
    3ad2:	e9 5a       	subi	r30, 0xA9	; 169
    3ad4:	fe 4f       	sbci	r31, 0xFE	; 254
    3ad6:	60 81       	ld	r22, Z
    3ad8:	71 81       	ldd	r23, Z+1	; 0x01
    3ada:	82 81       	ldd	r24, Z+2	; 0x02
    3adc:	93 81       	ldd	r25, Z+3	; 0x03
    3ade:	20 e0       	ldi	r18, 0x00	; 0
    3ae0:	3f ef       	ldi	r19, 0xFF	; 255
    3ae2:	4f e7       	ldi	r20, 0x7F	; 127
    3ae4:	57 e4       	ldi	r21, 0x47	; 71
    3ae6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3aea:	18 16       	cp	r1, r24
    3aec:	0c f0       	brlt	.+2      	; 0x3af0 <main+0x1cca>
    3aee:	43 c0       	rjmp	.+134    	; 0x3b76 <main+0x1d50>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3af0:	fe 01       	movw	r30, r28
    3af2:	e5 5a       	subi	r30, 0xA5	; 165
    3af4:	fe 4f       	sbci	r31, 0xFE	; 254
    3af6:	60 81       	ld	r22, Z
    3af8:	71 81       	ldd	r23, Z+1	; 0x01
    3afa:	82 81       	ldd	r24, Z+2	; 0x02
    3afc:	93 81       	ldd	r25, Z+3	; 0x03
    3afe:	20 e0       	ldi	r18, 0x00	; 0
    3b00:	30 e0       	ldi	r19, 0x00	; 0
    3b02:	40 e2       	ldi	r20, 0x20	; 32
    3b04:	51 e4       	ldi	r21, 0x41	; 65
    3b06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b0a:	dc 01       	movw	r26, r24
    3b0c:	cb 01       	movw	r24, r22
    3b0e:	8e 01       	movw	r16, r28
    3b10:	0b 5a       	subi	r16, 0xAB	; 171
    3b12:	1e 4f       	sbci	r17, 0xFE	; 254
    3b14:	bc 01       	movw	r22, r24
    3b16:	cd 01       	movw	r24, r26
    3b18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b1c:	dc 01       	movw	r26, r24
    3b1e:	cb 01       	movw	r24, r22
    3b20:	f8 01       	movw	r30, r16
    3b22:	91 83       	std	Z+1, r25	; 0x01
    3b24:	80 83       	st	Z, r24
    3b26:	1f c0       	rjmp	.+62     	; 0x3b66 <main+0x1d40>
    3b28:	fe 01       	movw	r30, r28
    3b2a:	ed 5a       	subi	r30, 0xAD	; 173
    3b2c:	fe 4f       	sbci	r31, 0xFE	; 254
    3b2e:	88 ec       	ldi	r24, 0xC8	; 200
    3b30:	90 e0       	ldi	r25, 0x00	; 0
    3b32:	91 83       	std	Z+1, r25	; 0x01
    3b34:	80 83       	st	Z, r24
    3b36:	fe 01       	movw	r30, r28
    3b38:	ed 5a       	subi	r30, 0xAD	; 173
    3b3a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b3c:	80 81       	ld	r24, Z
    3b3e:	91 81       	ldd	r25, Z+1	; 0x01
    3b40:	01 97       	sbiw	r24, 0x01	; 1
    3b42:	f1 f7       	brne	.-4      	; 0x3b40 <main+0x1d1a>
    3b44:	fe 01       	movw	r30, r28
    3b46:	ed 5a       	subi	r30, 0xAD	; 173
    3b48:	fe 4f       	sbci	r31, 0xFE	; 254
    3b4a:	91 83       	std	Z+1, r25	; 0x01
    3b4c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b4e:	de 01       	movw	r26, r28
    3b50:	ab 5a       	subi	r26, 0xAB	; 171
    3b52:	be 4f       	sbci	r27, 0xFE	; 254
    3b54:	fe 01       	movw	r30, r28
    3b56:	eb 5a       	subi	r30, 0xAB	; 171
    3b58:	fe 4f       	sbci	r31, 0xFE	; 254
    3b5a:	80 81       	ld	r24, Z
    3b5c:	91 81       	ldd	r25, Z+1	; 0x01
    3b5e:	01 97       	sbiw	r24, 0x01	; 1
    3b60:	11 96       	adiw	r26, 0x01	; 1
    3b62:	9c 93       	st	X, r25
    3b64:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b66:	fe 01       	movw	r30, r28
    3b68:	eb 5a       	subi	r30, 0xAB	; 171
    3b6a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b6c:	80 81       	ld	r24, Z
    3b6e:	91 81       	ldd	r25, Z+1	; 0x01
    3b70:	00 97       	sbiw	r24, 0x00	; 0
    3b72:	d1 f6       	brne	.-76     	; 0x3b28 <main+0x1d02>
    3b74:	27 c0       	rjmp	.+78     	; 0x3bc4 <main+0x1d9e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b76:	8e 01       	movw	r16, r28
    3b78:	0b 5a       	subi	r16, 0xAB	; 171
    3b7a:	1e 4f       	sbci	r17, 0xFE	; 254
    3b7c:	fe 01       	movw	r30, r28
    3b7e:	e9 5a       	subi	r30, 0xA9	; 169
    3b80:	fe 4f       	sbci	r31, 0xFE	; 254
    3b82:	60 81       	ld	r22, Z
    3b84:	71 81       	ldd	r23, Z+1	; 0x01
    3b86:	82 81       	ldd	r24, Z+2	; 0x02
    3b88:	93 81       	ldd	r25, Z+3	; 0x03
    3b8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b8e:	dc 01       	movw	r26, r24
    3b90:	cb 01       	movw	r24, r22
    3b92:	f8 01       	movw	r30, r16
    3b94:	91 83       	std	Z+1, r25	; 0x01
    3b96:	80 83       	st	Z, r24
    3b98:	de 01       	movw	r26, r28
    3b9a:	af 5a       	subi	r26, 0xAF	; 175
    3b9c:	be 4f       	sbci	r27, 0xFE	; 254
    3b9e:	fe 01       	movw	r30, r28
    3ba0:	eb 5a       	subi	r30, 0xAB	; 171
    3ba2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ba4:	80 81       	ld	r24, Z
    3ba6:	91 81       	ldd	r25, Z+1	; 0x01
    3ba8:	8d 93       	st	X+, r24
    3baa:	9c 93       	st	X, r25
    3bac:	fe 01       	movw	r30, r28
    3bae:	ef 5a       	subi	r30, 0xAF	; 175
    3bb0:	fe 4f       	sbci	r31, 0xFE	; 254
    3bb2:	80 81       	ld	r24, Z
    3bb4:	91 81       	ldd	r25, Z+1	; 0x01
    3bb6:	01 97       	sbiw	r24, 0x01	; 1
    3bb8:	f1 f7       	brne	.-4      	; 0x3bb6 <main+0x1d90>
    3bba:	fe 01       	movw	r30, r28
    3bbc:	ef 5a       	subi	r30, 0xAF	; 175
    3bbe:	fe 4f       	sbci	r31, 0xFE	; 254
    3bc0:	91 83       	std	Z+1, r25	; 0x01
    3bc2:	80 83       	st	Z, r24
						_delay_ms(500);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
    3bc4:	fe 01       	movw	r30, r28
    3bc6:	e0 5a       	subi	r30, 0xA0	; 160
    3bc8:	fd 4f       	sbci	r31, 0xFD	; 253
    3bca:	82 e0       	ldi	r24, 0x02	; 2
    3bcc:	60 81       	ld	r22, Z
    3bce:	40 e0       	ldi	r20, 0x00	; 0
    3bd0:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    3bd4:	fe 01       	movw	r30, r28
    3bd6:	e3 5b       	subi	r30, 0xB3	; 179
    3bd8:	fe 4f       	sbci	r31, 0xFE	; 254
    3bda:	80 e0       	ldi	r24, 0x00	; 0
    3bdc:	90 e0       	ldi	r25, 0x00	; 0
    3bde:	a8 ec       	ldi	r26, 0xC8	; 200
    3be0:	b2 e4       	ldi	r27, 0x42	; 66
    3be2:	80 83       	st	Z, r24
    3be4:	91 83       	std	Z+1, r25	; 0x01
    3be6:	a2 83       	std	Z+2, r26	; 0x02
    3be8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bea:	8e 01       	movw	r16, r28
    3bec:	07 5b       	subi	r16, 0xB7	; 183
    3bee:	1e 4f       	sbci	r17, 0xFE	; 254
    3bf0:	fe 01       	movw	r30, r28
    3bf2:	e3 5b       	subi	r30, 0xB3	; 179
    3bf4:	fe 4f       	sbci	r31, 0xFE	; 254
    3bf6:	60 81       	ld	r22, Z
    3bf8:	71 81       	ldd	r23, Z+1	; 0x01
    3bfa:	82 81       	ldd	r24, Z+2	; 0x02
    3bfc:	93 81       	ldd	r25, Z+3	; 0x03
    3bfe:	20 e0       	ldi	r18, 0x00	; 0
    3c00:	30 e0       	ldi	r19, 0x00	; 0
    3c02:	4a ef       	ldi	r20, 0xFA	; 250
    3c04:	54 e4       	ldi	r21, 0x44	; 68
    3c06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c0a:	dc 01       	movw	r26, r24
    3c0c:	cb 01       	movw	r24, r22
    3c0e:	f8 01       	movw	r30, r16
    3c10:	80 83       	st	Z, r24
    3c12:	91 83       	std	Z+1, r25	; 0x01
    3c14:	a2 83       	std	Z+2, r26	; 0x02
    3c16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c18:	fe 01       	movw	r30, r28
    3c1a:	e7 5b       	subi	r30, 0xB7	; 183
    3c1c:	fe 4f       	sbci	r31, 0xFE	; 254
    3c1e:	60 81       	ld	r22, Z
    3c20:	71 81       	ldd	r23, Z+1	; 0x01
    3c22:	82 81       	ldd	r24, Z+2	; 0x02
    3c24:	93 81       	ldd	r25, Z+3	; 0x03
    3c26:	20 e0       	ldi	r18, 0x00	; 0
    3c28:	30 e0       	ldi	r19, 0x00	; 0
    3c2a:	40 e8       	ldi	r20, 0x80	; 128
    3c2c:	5f e3       	ldi	r21, 0x3F	; 63
    3c2e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c32:	88 23       	and	r24, r24
    3c34:	44 f4       	brge	.+16     	; 0x3c46 <main+0x1e20>
		__ticks = 1;
    3c36:	fe 01       	movw	r30, r28
    3c38:	e9 5b       	subi	r30, 0xB9	; 185
    3c3a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c3c:	81 e0       	ldi	r24, 0x01	; 1
    3c3e:	90 e0       	ldi	r25, 0x00	; 0
    3c40:	91 83       	std	Z+1, r25	; 0x01
    3c42:	80 83       	st	Z, r24
    3c44:	64 c0       	rjmp	.+200    	; 0x3d0e <main+0x1ee8>
	else if (__tmp > 65535)
    3c46:	fe 01       	movw	r30, r28
    3c48:	e7 5b       	subi	r30, 0xB7	; 183
    3c4a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c4c:	60 81       	ld	r22, Z
    3c4e:	71 81       	ldd	r23, Z+1	; 0x01
    3c50:	82 81       	ldd	r24, Z+2	; 0x02
    3c52:	93 81       	ldd	r25, Z+3	; 0x03
    3c54:	20 e0       	ldi	r18, 0x00	; 0
    3c56:	3f ef       	ldi	r19, 0xFF	; 255
    3c58:	4f e7       	ldi	r20, 0x7F	; 127
    3c5a:	57 e4       	ldi	r21, 0x47	; 71
    3c5c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c60:	18 16       	cp	r1, r24
    3c62:	0c f0       	brlt	.+2      	; 0x3c66 <main+0x1e40>
    3c64:	43 c0       	rjmp	.+134    	; 0x3cec <main+0x1ec6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c66:	fe 01       	movw	r30, r28
    3c68:	e3 5b       	subi	r30, 0xB3	; 179
    3c6a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c6c:	60 81       	ld	r22, Z
    3c6e:	71 81       	ldd	r23, Z+1	; 0x01
    3c70:	82 81       	ldd	r24, Z+2	; 0x02
    3c72:	93 81       	ldd	r25, Z+3	; 0x03
    3c74:	20 e0       	ldi	r18, 0x00	; 0
    3c76:	30 e0       	ldi	r19, 0x00	; 0
    3c78:	40 e2       	ldi	r20, 0x20	; 32
    3c7a:	51 e4       	ldi	r21, 0x41	; 65
    3c7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c80:	dc 01       	movw	r26, r24
    3c82:	cb 01       	movw	r24, r22
    3c84:	8e 01       	movw	r16, r28
    3c86:	09 5b       	subi	r16, 0xB9	; 185
    3c88:	1e 4f       	sbci	r17, 0xFE	; 254
    3c8a:	bc 01       	movw	r22, r24
    3c8c:	cd 01       	movw	r24, r26
    3c8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c92:	dc 01       	movw	r26, r24
    3c94:	cb 01       	movw	r24, r22
    3c96:	f8 01       	movw	r30, r16
    3c98:	91 83       	std	Z+1, r25	; 0x01
    3c9a:	80 83       	st	Z, r24
    3c9c:	1f c0       	rjmp	.+62     	; 0x3cdc <main+0x1eb6>
    3c9e:	fe 01       	movw	r30, r28
    3ca0:	eb 5b       	subi	r30, 0xBB	; 187
    3ca2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ca4:	88 ec       	ldi	r24, 0xC8	; 200
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	91 83       	std	Z+1, r25	; 0x01
    3caa:	80 83       	st	Z, r24
    3cac:	fe 01       	movw	r30, r28
    3cae:	eb 5b       	subi	r30, 0xBB	; 187
    3cb0:	fe 4f       	sbci	r31, 0xFE	; 254
    3cb2:	80 81       	ld	r24, Z
    3cb4:	91 81       	ldd	r25, Z+1	; 0x01
    3cb6:	01 97       	sbiw	r24, 0x01	; 1
    3cb8:	f1 f7       	brne	.-4      	; 0x3cb6 <main+0x1e90>
    3cba:	fe 01       	movw	r30, r28
    3cbc:	eb 5b       	subi	r30, 0xBB	; 187
    3cbe:	fe 4f       	sbci	r31, 0xFE	; 254
    3cc0:	91 83       	std	Z+1, r25	; 0x01
    3cc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cc4:	de 01       	movw	r26, r28
    3cc6:	a9 5b       	subi	r26, 0xB9	; 185
    3cc8:	be 4f       	sbci	r27, 0xFE	; 254
    3cca:	fe 01       	movw	r30, r28
    3ccc:	e9 5b       	subi	r30, 0xB9	; 185
    3cce:	fe 4f       	sbci	r31, 0xFE	; 254
    3cd0:	80 81       	ld	r24, Z
    3cd2:	91 81       	ldd	r25, Z+1	; 0x01
    3cd4:	01 97       	sbiw	r24, 0x01	; 1
    3cd6:	11 96       	adiw	r26, 0x01	; 1
    3cd8:	9c 93       	st	X, r25
    3cda:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cdc:	fe 01       	movw	r30, r28
    3cde:	e9 5b       	subi	r30, 0xB9	; 185
    3ce0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ce2:	80 81       	ld	r24, Z
    3ce4:	91 81       	ldd	r25, Z+1	; 0x01
    3ce6:	00 97       	sbiw	r24, 0x00	; 0
    3ce8:	d1 f6       	brne	.-76     	; 0x3c9e <main+0x1e78>
    3cea:	27 c0       	rjmp	.+78     	; 0x3d3a <main+0x1f14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cec:	8e 01       	movw	r16, r28
    3cee:	09 5b       	subi	r16, 0xB9	; 185
    3cf0:	1e 4f       	sbci	r17, 0xFE	; 254
    3cf2:	fe 01       	movw	r30, r28
    3cf4:	e7 5b       	subi	r30, 0xB7	; 183
    3cf6:	fe 4f       	sbci	r31, 0xFE	; 254
    3cf8:	60 81       	ld	r22, Z
    3cfa:	71 81       	ldd	r23, Z+1	; 0x01
    3cfc:	82 81       	ldd	r24, Z+2	; 0x02
    3cfe:	93 81       	ldd	r25, Z+3	; 0x03
    3d00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d04:	dc 01       	movw	r26, r24
    3d06:	cb 01       	movw	r24, r22
    3d08:	f8 01       	movw	r30, r16
    3d0a:	91 83       	std	Z+1, r25	; 0x01
    3d0c:	80 83       	st	Z, r24
    3d0e:	de 01       	movw	r26, r28
    3d10:	ad 5b       	subi	r26, 0xBD	; 189
    3d12:	be 4f       	sbci	r27, 0xFE	; 254
    3d14:	fe 01       	movw	r30, r28
    3d16:	e9 5b       	subi	r30, 0xB9	; 185
    3d18:	fe 4f       	sbci	r31, 0xFE	; 254
    3d1a:	80 81       	ld	r24, Z
    3d1c:	91 81       	ldd	r25, Z+1	; 0x01
    3d1e:	8d 93       	st	X+, r24
    3d20:	9c 93       	st	X, r25
    3d22:	fe 01       	movw	r30, r28
    3d24:	ed 5b       	subi	r30, 0xBD	; 189
    3d26:	fe 4f       	sbci	r31, 0xFE	; 254
    3d28:	80 81       	ld	r24, Z
    3d2a:	91 81       	ldd	r25, Z+1	; 0x01
    3d2c:	01 97       	sbiw	r24, 0x01	; 1
    3d2e:	f1 f7       	brne	.-4      	; 0x3d2c <main+0x1f06>
    3d30:	fe 01       	movw	r30, r28
    3d32:	ed 5b       	subi	r30, 0xBD	; 189
    3d34:	fe 4f       	sbci	r31, 0xFE	; 254
    3d36:	91 83       	std	Z+1, r25	; 0x01
    3d38:	80 83       	st	Z, r24
						LED_voidControlLed( PORT_u8B,i, PIN_HIGH);
						_delay_ms(500);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
						_delay_ms(100);
					}
					for(u8 i=6 ; i>=0 ;i--){
    3d3a:	de 01       	movw	r26, r28
    3d3c:	a0 5a       	subi	r26, 0xA0	; 160
    3d3e:	bd 4f       	sbci	r27, 0xFD	; 253
    3d40:	fe 01       	movw	r30, r28
    3d42:	e0 5a       	subi	r30, 0xA0	; 160
    3d44:	fd 4f       	sbci	r31, 0xFD	; 253
    3d46:	80 81       	ld	r24, Z
    3d48:	81 50       	subi	r24, 0x01	; 1
    3d4a:	8c 93       	st	X, r24
    3d4c:	73 ce       	rjmp	.-794    	; 0x3a34 <main+0x1c0e>
				_delay_ms(1);
				CLCD_voidSendString("Knight Rider..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
    3d4e:	fe 01       	movw	r30, r28
    3d50:	ed 59       	subi	r30, 0x9D	; 157
    3d52:	fd 4f       	sbci	r31, 0xFD	; 253
    3d54:	80 81       	ld	r24, Z
    3d56:	8d 30       	cpi	r24, 0x0D	; 13
    3d58:	09 f0       	breq	.+2      	; 0x3d5c <main+0x1f36>
    3d5a:	cf cc       	rjmp	.-1634   	; 0x36fa <main+0x18d4>
						_delay_ms(500);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
						_delay_ms(100);
					}
				}
				LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    3d5c:	82 e0       	ldi	r24, 0x02	; 2
    3d5e:	60 e0       	ldi	r22, 0x00	; 0
    3d60:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
				CLCD_voidClearDisplay();
    3d64:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    3d68:	fe 01       	movw	r30, r28
    3d6a:	e1 5c       	subi	r30, 0xC1	; 193
    3d6c:	fe 4f       	sbci	r31, 0xFE	; 254
    3d6e:	80 e0       	ldi	r24, 0x00	; 0
    3d70:	90 e0       	ldi	r25, 0x00	; 0
    3d72:	a0 e8       	ldi	r26, 0x80	; 128
    3d74:	bf e3       	ldi	r27, 0x3F	; 63
    3d76:	80 83       	st	Z, r24
    3d78:	91 83       	std	Z+1, r25	; 0x01
    3d7a:	a2 83       	std	Z+2, r26	; 0x02
    3d7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d7e:	8e 01       	movw	r16, r28
    3d80:	05 5c       	subi	r16, 0xC5	; 197
    3d82:	1e 4f       	sbci	r17, 0xFE	; 254
    3d84:	fe 01       	movw	r30, r28
    3d86:	e1 5c       	subi	r30, 0xC1	; 193
    3d88:	fe 4f       	sbci	r31, 0xFE	; 254
    3d8a:	60 81       	ld	r22, Z
    3d8c:	71 81       	ldd	r23, Z+1	; 0x01
    3d8e:	82 81       	ldd	r24, Z+2	; 0x02
    3d90:	93 81       	ldd	r25, Z+3	; 0x03
    3d92:	20 e0       	ldi	r18, 0x00	; 0
    3d94:	30 e0       	ldi	r19, 0x00	; 0
    3d96:	4a ef       	ldi	r20, 0xFA	; 250
    3d98:	54 e4       	ldi	r21, 0x44	; 68
    3d9a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d9e:	dc 01       	movw	r26, r24
    3da0:	cb 01       	movw	r24, r22
    3da2:	f8 01       	movw	r30, r16
    3da4:	80 83       	st	Z, r24
    3da6:	91 83       	std	Z+1, r25	; 0x01
    3da8:	a2 83       	std	Z+2, r26	; 0x02
    3daa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3dac:	fe 01       	movw	r30, r28
    3dae:	e5 5c       	subi	r30, 0xC5	; 197
    3db0:	fe 4f       	sbci	r31, 0xFE	; 254
    3db2:	60 81       	ld	r22, Z
    3db4:	71 81       	ldd	r23, Z+1	; 0x01
    3db6:	82 81       	ldd	r24, Z+2	; 0x02
    3db8:	93 81       	ldd	r25, Z+3	; 0x03
    3dba:	20 e0       	ldi	r18, 0x00	; 0
    3dbc:	30 e0       	ldi	r19, 0x00	; 0
    3dbe:	40 e8       	ldi	r20, 0x80	; 128
    3dc0:	5f e3       	ldi	r21, 0x3F	; 63
    3dc2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3dc6:	88 23       	and	r24, r24
    3dc8:	44 f4       	brge	.+16     	; 0x3dda <main+0x1fb4>
		__ticks = 1;
    3dca:	fe 01       	movw	r30, r28
    3dcc:	e7 5c       	subi	r30, 0xC7	; 199
    3dce:	fe 4f       	sbci	r31, 0xFE	; 254
    3dd0:	81 e0       	ldi	r24, 0x01	; 1
    3dd2:	90 e0       	ldi	r25, 0x00	; 0
    3dd4:	91 83       	std	Z+1, r25	; 0x01
    3dd6:	80 83       	st	Z, r24
    3dd8:	65 c0       	rjmp	.+202    	; 0x3ea4 <main+0x207e>
	else if (__tmp > 65535)
    3dda:	fe 01       	movw	r30, r28
    3ddc:	e5 5c       	subi	r30, 0xC5	; 197
    3dde:	fe 4f       	sbci	r31, 0xFE	; 254
    3de0:	60 81       	ld	r22, Z
    3de2:	71 81       	ldd	r23, Z+1	; 0x01
    3de4:	82 81       	ldd	r24, Z+2	; 0x02
    3de6:	93 81       	ldd	r25, Z+3	; 0x03
    3de8:	20 e0       	ldi	r18, 0x00	; 0
    3dea:	3f ef       	ldi	r19, 0xFF	; 255
    3dec:	4f e7       	ldi	r20, 0x7F	; 127
    3dee:	57 e4       	ldi	r21, 0x47	; 71
    3df0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3df4:	18 16       	cp	r1, r24
    3df6:	0c f0       	brlt	.+2      	; 0x3dfa <main+0x1fd4>
    3df8:	44 c0       	rjmp	.+136    	; 0x3e82 <main+0x205c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	e1 5c       	subi	r30, 0xC1	; 193
    3dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    3e00:	60 81       	ld	r22, Z
    3e02:	71 81       	ldd	r23, Z+1	; 0x01
    3e04:	82 81       	ldd	r24, Z+2	; 0x02
    3e06:	93 81       	ldd	r25, Z+3	; 0x03
    3e08:	20 e0       	ldi	r18, 0x00	; 0
    3e0a:	30 e0       	ldi	r19, 0x00	; 0
    3e0c:	40 e2       	ldi	r20, 0x20	; 32
    3e0e:	51 e4       	ldi	r21, 0x41	; 65
    3e10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e14:	dc 01       	movw	r26, r24
    3e16:	cb 01       	movw	r24, r22
    3e18:	8e 01       	movw	r16, r28
    3e1a:	07 5c       	subi	r16, 0xC7	; 199
    3e1c:	1e 4f       	sbci	r17, 0xFE	; 254
    3e1e:	bc 01       	movw	r22, r24
    3e20:	cd 01       	movw	r24, r26
    3e22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e26:	dc 01       	movw	r26, r24
    3e28:	cb 01       	movw	r24, r22
    3e2a:	f8 01       	movw	r30, r16
    3e2c:	91 83       	std	Z+1, r25	; 0x01
    3e2e:	80 83       	st	Z, r24
    3e30:	1f c0       	rjmp	.+62     	; 0x3e70 <main+0x204a>
    3e32:	fe 01       	movw	r30, r28
    3e34:	e9 5c       	subi	r30, 0xC9	; 201
    3e36:	fe 4f       	sbci	r31, 0xFE	; 254
    3e38:	88 ec       	ldi	r24, 0xC8	; 200
    3e3a:	90 e0       	ldi	r25, 0x00	; 0
    3e3c:	91 83       	std	Z+1, r25	; 0x01
    3e3e:	80 83       	st	Z, r24
    3e40:	fe 01       	movw	r30, r28
    3e42:	e9 5c       	subi	r30, 0xC9	; 201
    3e44:	fe 4f       	sbci	r31, 0xFE	; 254
    3e46:	80 81       	ld	r24, Z
    3e48:	91 81       	ldd	r25, Z+1	; 0x01
    3e4a:	01 97       	sbiw	r24, 0x01	; 1
    3e4c:	f1 f7       	brne	.-4      	; 0x3e4a <main+0x2024>
    3e4e:	fe 01       	movw	r30, r28
    3e50:	e9 5c       	subi	r30, 0xC9	; 201
    3e52:	fe 4f       	sbci	r31, 0xFE	; 254
    3e54:	91 83       	std	Z+1, r25	; 0x01
    3e56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e58:	de 01       	movw	r26, r28
    3e5a:	a7 5c       	subi	r26, 0xC7	; 199
    3e5c:	be 4f       	sbci	r27, 0xFE	; 254
    3e5e:	fe 01       	movw	r30, r28
    3e60:	e7 5c       	subi	r30, 0xC7	; 199
    3e62:	fe 4f       	sbci	r31, 0xFE	; 254
    3e64:	80 81       	ld	r24, Z
    3e66:	91 81       	ldd	r25, Z+1	; 0x01
    3e68:	01 97       	sbiw	r24, 0x01	; 1
    3e6a:	11 96       	adiw	r26, 0x01	; 1
    3e6c:	9c 93       	st	X, r25
    3e6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e70:	fe 01       	movw	r30, r28
    3e72:	e7 5c       	subi	r30, 0xC7	; 199
    3e74:	fe 4f       	sbci	r31, 0xFE	; 254
    3e76:	80 81       	ld	r24, Z
    3e78:	91 81       	ldd	r25, Z+1	; 0x01
    3e7a:	00 97       	sbiw	r24, 0x00	; 0
    3e7c:	d1 f6       	brne	.-76     	; 0x3e32 <main+0x200c>
    3e7e:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e82:	8e 01       	movw	r16, r28
    3e84:	07 5c       	subi	r16, 0xC7	; 199
    3e86:	1e 4f       	sbci	r17, 0xFE	; 254
    3e88:	fe 01       	movw	r30, r28
    3e8a:	e5 5c       	subi	r30, 0xC5	; 197
    3e8c:	fe 4f       	sbci	r31, 0xFE	; 254
    3e8e:	60 81       	ld	r22, Z
    3e90:	71 81       	ldd	r23, Z+1	; 0x01
    3e92:	82 81       	ldd	r24, Z+2	; 0x02
    3e94:	93 81       	ldd	r25, Z+3	; 0x03
    3e96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e9a:	dc 01       	movw	r26, r24
    3e9c:	cb 01       	movw	r24, r22
    3e9e:	f8 01       	movw	r30, r16
    3ea0:	91 83       	std	Z+1, r25	; 0x01
    3ea2:	80 83       	st	Z, r24
    3ea4:	de 01       	movw	r26, r28
    3ea6:	ab 5c       	subi	r26, 0xCB	; 203
    3ea8:	be 4f       	sbci	r27, 0xFE	; 254
    3eaa:	fe 01       	movw	r30, r28
    3eac:	e7 5c       	subi	r30, 0xC7	; 199
    3eae:	fe 4f       	sbci	r31, 0xFE	; 254
    3eb0:	80 81       	ld	r24, Z
    3eb2:	91 81       	ldd	r25, Z+1	; 0x01
    3eb4:	11 96       	adiw	r26, 0x01	; 1
    3eb6:	9c 93       	st	X, r25
    3eb8:	8e 93       	st	-X, r24
    3eba:	fe 01       	movw	r30, r28
    3ebc:	eb 5c       	subi	r30, 0xCB	; 203
    3ebe:	fe 4f       	sbci	r31, 0xFE	; 254
    3ec0:	80 81       	ld	r24, Z
    3ec2:	91 81       	ldd	r25, Z+1	; 0x01
    3ec4:	01 97       	sbiw	r24, 0x01	; 1
    3ec6:	f1 f7       	brne	.-4      	; 0x3ec4 <main+0x209e>
    3ec8:	fe 01       	movw	r30, r28
    3eca:	eb 5c       	subi	r30, 0xCB	; 203
    3ecc:	fe 4f       	sbci	r31, 0xFE	; 254
    3ece:	91 83       	std	Z+1, r25	; 0x01
    3ed0:	80 83       	st	Z, r24
    3ed2:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
				_delay_ms(1);
				break;
			case 5:
				CLCD_voidSetPosition(0,0);
    3ed6:	80 e0       	ldi	r24, 0x00	; 0
    3ed8:	60 e0       	ldi	r22, 0x00	; 0
    3eda:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    3ede:	fe 01       	movw	r30, r28
    3ee0:	ef 5c       	subi	r30, 0xCF	; 207
    3ee2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ee4:	80 e0       	ldi	r24, 0x00	; 0
    3ee6:	90 e0       	ldi	r25, 0x00	; 0
    3ee8:	a0 e8       	ldi	r26, 0x80	; 128
    3eea:	bf e3       	ldi	r27, 0x3F	; 63
    3eec:	80 83       	st	Z, r24
    3eee:	91 83       	std	Z+1, r25	; 0x01
    3ef0:	a2 83       	std	Z+2, r26	; 0x02
    3ef2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ef4:	8e 01       	movw	r16, r28
    3ef6:	03 5d       	subi	r16, 0xD3	; 211
    3ef8:	1e 4f       	sbci	r17, 0xFE	; 254
    3efa:	fe 01       	movw	r30, r28
    3efc:	ef 5c       	subi	r30, 0xCF	; 207
    3efe:	fe 4f       	sbci	r31, 0xFE	; 254
    3f00:	60 81       	ld	r22, Z
    3f02:	71 81       	ldd	r23, Z+1	; 0x01
    3f04:	82 81       	ldd	r24, Z+2	; 0x02
    3f06:	93 81       	ldd	r25, Z+3	; 0x03
    3f08:	20 e0       	ldi	r18, 0x00	; 0
    3f0a:	30 e0       	ldi	r19, 0x00	; 0
    3f0c:	4a ef       	ldi	r20, 0xFA	; 250
    3f0e:	54 e4       	ldi	r21, 0x44	; 68
    3f10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f14:	dc 01       	movw	r26, r24
    3f16:	cb 01       	movw	r24, r22
    3f18:	f8 01       	movw	r30, r16
    3f1a:	80 83       	st	Z, r24
    3f1c:	91 83       	std	Z+1, r25	; 0x01
    3f1e:	a2 83       	std	Z+2, r26	; 0x02
    3f20:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f22:	fe 01       	movw	r30, r28
    3f24:	e3 5d       	subi	r30, 0xD3	; 211
    3f26:	fe 4f       	sbci	r31, 0xFE	; 254
    3f28:	60 81       	ld	r22, Z
    3f2a:	71 81       	ldd	r23, Z+1	; 0x01
    3f2c:	82 81       	ldd	r24, Z+2	; 0x02
    3f2e:	93 81       	ldd	r25, Z+3	; 0x03
    3f30:	20 e0       	ldi	r18, 0x00	; 0
    3f32:	30 e0       	ldi	r19, 0x00	; 0
    3f34:	40 e8       	ldi	r20, 0x80	; 128
    3f36:	5f e3       	ldi	r21, 0x3F	; 63
    3f38:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f3c:	88 23       	and	r24, r24
    3f3e:	44 f4       	brge	.+16     	; 0x3f50 <main+0x212a>
		__ticks = 1;
    3f40:	fe 01       	movw	r30, r28
    3f42:	e5 5d       	subi	r30, 0xD5	; 213
    3f44:	fe 4f       	sbci	r31, 0xFE	; 254
    3f46:	81 e0       	ldi	r24, 0x01	; 1
    3f48:	90 e0       	ldi	r25, 0x00	; 0
    3f4a:	91 83       	std	Z+1, r25	; 0x01
    3f4c:	80 83       	st	Z, r24
    3f4e:	64 c0       	rjmp	.+200    	; 0x4018 <main+0x21f2>
	else if (__tmp > 65535)
    3f50:	fe 01       	movw	r30, r28
    3f52:	e3 5d       	subi	r30, 0xD3	; 211
    3f54:	fe 4f       	sbci	r31, 0xFE	; 254
    3f56:	60 81       	ld	r22, Z
    3f58:	71 81       	ldd	r23, Z+1	; 0x01
    3f5a:	82 81       	ldd	r24, Z+2	; 0x02
    3f5c:	93 81       	ldd	r25, Z+3	; 0x03
    3f5e:	20 e0       	ldi	r18, 0x00	; 0
    3f60:	3f ef       	ldi	r19, 0xFF	; 255
    3f62:	4f e7       	ldi	r20, 0x7F	; 127
    3f64:	57 e4       	ldi	r21, 0x47	; 71
    3f66:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f6a:	18 16       	cp	r1, r24
    3f6c:	0c f0       	brlt	.+2      	; 0x3f70 <main+0x214a>
    3f6e:	43 c0       	rjmp	.+134    	; 0x3ff6 <main+0x21d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f70:	fe 01       	movw	r30, r28
    3f72:	ef 5c       	subi	r30, 0xCF	; 207
    3f74:	fe 4f       	sbci	r31, 0xFE	; 254
    3f76:	60 81       	ld	r22, Z
    3f78:	71 81       	ldd	r23, Z+1	; 0x01
    3f7a:	82 81       	ldd	r24, Z+2	; 0x02
    3f7c:	93 81       	ldd	r25, Z+3	; 0x03
    3f7e:	20 e0       	ldi	r18, 0x00	; 0
    3f80:	30 e0       	ldi	r19, 0x00	; 0
    3f82:	40 e2       	ldi	r20, 0x20	; 32
    3f84:	51 e4       	ldi	r21, 0x41	; 65
    3f86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f8a:	dc 01       	movw	r26, r24
    3f8c:	cb 01       	movw	r24, r22
    3f8e:	8e 01       	movw	r16, r28
    3f90:	05 5d       	subi	r16, 0xD5	; 213
    3f92:	1e 4f       	sbci	r17, 0xFE	; 254
    3f94:	bc 01       	movw	r22, r24
    3f96:	cd 01       	movw	r24, r26
    3f98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f9c:	dc 01       	movw	r26, r24
    3f9e:	cb 01       	movw	r24, r22
    3fa0:	f8 01       	movw	r30, r16
    3fa2:	91 83       	std	Z+1, r25	; 0x01
    3fa4:	80 83       	st	Z, r24
    3fa6:	1f c0       	rjmp	.+62     	; 0x3fe6 <main+0x21c0>
    3fa8:	fe 01       	movw	r30, r28
    3faa:	e7 5d       	subi	r30, 0xD7	; 215
    3fac:	fe 4f       	sbci	r31, 0xFE	; 254
    3fae:	88 ec       	ldi	r24, 0xC8	; 200
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	91 83       	std	Z+1, r25	; 0x01
    3fb4:	80 83       	st	Z, r24
    3fb6:	fe 01       	movw	r30, r28
    3fb8:	e7 5d       	subi	r30, 0xD7	; 215
    3fba:	fe 4f       	sbci	r31, 0xFE	; 254
    3fbc:	80 81       	ld	r24, Z
    3fbe:	91 81       	ldd	r25, Z+1	; 0x01
    3fc0:	01 97       	sbiw	r24, 0x01	; 1
    3fc2:	f1 f7       	brne	.-4      	; 0x3fc0 <main+0x219a>
    3fc4:	fe 01       	movw	r30, r28
    3fc6:	e7 5d       	subi	r30, 0xD7	; 215
    3fc8:	fe 4f       	sbci	r31, 0xFE	; 254
    3fca:	91 83       	std	Z+1, r25	; 0x01
    3fcc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fce:	de 01       	movw	r26, r28
    3fd0:	a5 5d       	subi	r26, 0xD5	; 213
    3fd2:	be 4f       	sbci	r27, 0xFE	; 254
    3fd4:	fe 01       	movw	r30, r28
    3fd6:	e5 5d       	subi	r30, 0xD5	; 213
    3fd8:	fe 4f       	sbci	r31, 0xFE	; 254
    3fda:	80 81       	ld	r24, Z
    3fdc:	91 81       	ldd	r25, Z+1	; 0x01
    3fde:	01 97       	sbiw	r24, 0x01	; 1
    3fe0:	11 96       	adiw	r26, 0x01	; 1
    3fe2:	9c 93       	st	X, r25
    3fe4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fe6:	fe 01       	movw	r30, r28
    3fe8:	e5 5d       	subi	r30, 0xD5	; 213
    3fea:	fe 4f       	sbci	r31, 0xFE	; 254
    3fec:	80 81       	ld	r24, Z
    3fee:	91 81       	ldd	r25, Z+1	; 0x01
    3ff0:	00 97       	sbiw	r24, 0x00	; 0
    3ff2:	d1 f6       	brne	.-76     	; 0x3fa8 <main+0x2182>
    3ff4:	27 c0       	rjmp	.+78     	; 0x4044 <main+0x221e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ff6:	8e 01       	movw	r16, r28
    3ff8:	05 5d       	subi	r16, 0xD5	; 213
    3ffa:	1e 4f       	sbci	r17, 0xFE	; 254
    3ffc:	fe 01       	movw	r30, r28
    3ffe:	e3 5d       	subi	r30, 0xD3	; 211
    4000:	fe 4f       	sbci	r31, 0xFE	; 254
    4002:	60 81       	ld	r22, Z
    4004:	71 81       	ldd	r23, Z+1	; 0x01
    4006:	82 81       	ldd	r24, Z+2	; 0x02
    4008:	93 81       	ldd	r25, Z+3	; 0x03
    400a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    400e:	dc 01       	movw	r26, r24
    4010:	cb 01       	movw	r24, r22
    4012:	f8 01       	movw	r30, r16
    4014:	91 83       	std	Z+1, r25	; 0x01
    4016:	80 83       	st	Z, r24
    4018:	de 01       	movw	r26, r28
    401a:	a9 5d       	subi	r26, 0xD9	; 217
    401c:	be 4f       	sbci	r27, 0xFE	; 254
    401e:	fe 01       	movw	r30, r28
    4020:	e5 5d       	subi	r30, 0xD5	; 213
    4022:	fe 4f       	sbci	r31, 0xFE	; 254
    4024:	80 81       	ld	r24, Z
    4026:	91 81       	ldd	r25, Z+1	; 0x01
    4028:	8d 93       	st	X+, r24
    402a:	9c 93       	st	X, r25
    402c:	fe 01       	movw	r30, r28
    402e:	e9 5d       	subi	r30, 0xD9	; 217
    4030:	fe 4f       	sbci	r31, 0xFE	; 254
    4032:	80 81       	ld	r24, Z
    4034:	91 81       	ldd	r25, Z+1	; 0x01
    4036:	01 97       	sbiw	r24, 0x01	; 1
    4038:	f1 f7       	brne	.-4      	; 0x4036 <main+0x2210>
    403a:	fe 01       	movw	r30, r28
    403c:	e9 5d       	subi	r30, 0xD9	; 217
    403e:	fe 4f       	sbci	r31, 0xFE	; 254
    4040:	91 83       	std	Z+1, r25	; 0x01
    4042:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Alternating(2)..");
    4044:	8b e9       	ldi	r24, 0x9B	; 155
    4046:	90 e0       	ldi	r25, 0x00	; 0
    4048:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    404c:	80 e0       	ldi	r24, 0x00	; 0
    404e:	61 e0       	ldi	r22, 0x01	; 1
    4050:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    4054:	fe 01       	movw	r30, r28
    4056:	ed 5d       	subi	r30, 0xDD	; 221
    4058:	fe 4f       	sbci	r31, 0xFE	; 254
    405a:	80 e0       	ldi	r24, 0x00	; 0
    405c:	90 e0       	ldi	r25, 0x00	; 0
    405e:	a0 e8       	ldi	r26, 0x80	; 128
    4060:	bf e3       	ldi	r27, 0x3F	; 63
    4062:	80 83       	st	Z, r24
    4064:	91 83       	std	Z+1, r25	; 0x01
    4066:	a2 83       	std	Z+2, r26	; 0x02
    4068:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    406a:	8e 01       	movw	r16, r28
    406c:	01 5e       	subi	r16, 0xE1	; 225
    406e:	1e 4f       	sbci	r17, 0xFE	; 254
    4070:	fe 01       	movw	r30, r28
    4072:	ed 5d       	subi	r30, 0xDD	; 221
    4074:	fe 4f       	sbci	r31, 0xFE	; 254
    4076:	60 81       	ld	r22, Z
    4078:	71 81       	ldd	r23, Z+1	; 0x01
    407a:	82 81       	ldd	r24, Z+2	; 0x02
    407c:	93 81       	ldd	r25, Z+3	; 0x03
    407e:	20 e0       	ldi	r18, 0x00	; 0
    4080:	30 e0       	ldi	r19, 0x00	; 0
    4082:	4a ef       	ldi	r20, 0xFA	; 250
    4084:	54 e4       	ldi	r21, 0x44	; 68
    4086:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    408a:	dc 01       	movw	r26, r24
    408c:	cb 01       	movw	r24, r22
    408e:	f8 01       	movw	r30, r16
    4090:	80 83       	st	Z, r24
    4092:	91 83       	std	Z+1, r25	; 0x01
    4094:	a2 83       	std	Z+2, r26	; 0x02
    4096:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4098:	fe 01       	movw	r30, r28
    409a:	e1 5e       	subi	r30, 0xE1	; 225
    409c:	fe 4f       	sbci	r31, 0xFE	; 254
    409e:	60 81       	ld	r22, Z
    40a0:	71 81       	ldd	r23, Z+1	; 0x01
    40a2:	82 81       	ldd	r24, Z+2	; 0x02
    40a4:	93 81       	ldd	r25, Z+3	; 0x03
    40a6:	20 e0       	ldi	r18, 0x00	; 0
    40a8:	30 e0       	ldi	r19, 0x00	; 0
    40aa:	40 e8       	ldi	r20, 0x80	; 128
    40ac:	5f e3       	ldi	r21, 0x3F	; 63
    40ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    40b2:	88 23       	and	r24, r24
    40b4:	44 f4       	brge	.+16     	; 0x40c6 <main+0x22a0>
		__ticks = 1;
    40b6:	fe 01       	movw	r30, r28
    40b8:	e3 5e       	subi	r30, 0xE3	; 227
    40ba:	fe 4f       	sbci	r31, 0xFE	; 254
    40bc:	81 e0       	ldi	r24, 0x01	; 1
    40be:	90 e0       	ldi	r25, 0x00	; 0
    40c0:	91 83       	std	Z+1, r25	; 0x01
    40c2:	80 83       	st	Z, r24
    40c4:	64 c0       	rjmp	.+200    	; 0x418e <main+0x2368>
	else if (__tmp > 65535)
    40c6:	fe 01       	movw	r30, r28
    40c8:	e1 5e       	subi	r30, 0xE1	; 225
    40ca:	fe 4f       	sbci	r31, 0xFE	; 254
    40cc:	60 81       	ld	r22, Z
    40ce:	71 81       	ldd	r23, Z+1	; 0x01
    40d0:	82 81       	ldd	r24, Z+2	; 0x02
    40d2:	93 81       	ldd	r25, Z+3	; 0x03
    40d4:	20 e0       	ldi	r18, 0x00	; 0
    40d6:	3f ef       	ldi	r19, 0xFF	; 255
    40d8:	4f e7       	ldi	r20, 0x7F	; 127
    40da:	57 e4       	ldi	r21, 0x47	; 71
    40dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    40e0:	18 16       	cp	r1, r24
    40e2:	0c f0       	brlt	.+2      	; 0x40e6 <main+0x22c0>
    40e4:	43 c0       	rjmp	.+134    	; 0x416c <main+0x2346>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40e6:	fe 01       	movw	r30, r28
    40e8:	ed 5d       	subi	r30, 0xDD	; 221
    40ea:	fe 4f       	sbci	r31, 0xFE	; 254
    40ec:	60 81       	ld	r22, Z
    40ee:	71 81       	ldd	r23, Z+1	; 0x01
    40f0:	82 81       	ldd	r24, Z+2	; 0x02
    40f2:	93 81       	ldd	r25, Z+3	; 0x03
    40f4:	20 e0       	ldi	r18, 0x00	; 0
    40f6:	30 e0       	ldi	r19, 0x00	; 0
    40f8:	40 e2       	ldi	r20, 0x20	; 32
    40fa:	51 e4       	ldi	r21, 0x41	; 65
    40fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4100:	dc 01       	movw	r26, r24
    4102:	cb 01       	movw	r24, r22
    4104:	8e 01       	movw	r16, r28
    4106:	03 5e       	subi	r16, 0xE3	; 227
    4108:	1e 4f       	sbci	r17, 0xFE	; 254
    410a:	bc 01       	movw	r22, r24
    410c:	cd 01       	movw	r24, r26
    410e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4112:	dc 01       	movw	r26, r24
    4114:	cb 01       	movw	r24, r22
    4116:	f8 01       	movw	r30, r16
    4118:	91 83       	std	Z+1, r25	; 0x01
    411a:	80 83       	st	Z, r24
    411c:	1f c0       	rjmp	.+62     	; 0x415c <main+0x2336>
    411e:	fe 01       	movw	r30, r28
    4120:	e5 5e       	subi	r30, 0xE5	; 229
    4122:	fe 4f       	sbci	r31, 0xFE	; 254
    4124:	88 ec       	ldi	r24, 0xC8	; 200
    4126:	90 e0       	ldi	r25, 0x00	; 0
    4128:	91 83       	std	Z+1, r25	; 0x01
    412a:	80 83       	st	Z, r24
    412c:	fe 01       	movw	r30, r28
    412e:	e5 5e       	subi	r30, 0xE5	; 229
    4130:	fe 4f       	sbci	r31, 0xFE	; 254
    4132:	80 81       	ld	r24, Z
    4134:	91 81       	ldd	r25, Z+1	; 0x01
    4136:	01 97       	sbiw	r24, 0x01	; 1
    4138:	f1 f7       	brne	.-4      	; 0x4136 <main+0x2310>
    413a:	fe 01       	movw	r30, r28
    413c:	e5 5e       	subi	r30, 0xE5	; 229
    413e:	fe 4f       	sbci	r31, 0xFE	; 254
    4140:	91 83       	std	Z+1, r25	; 0x01
    4142:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4144:	de 01       	movw	r26, r28
    4146:	a3 5e       	subi	r26, 0xE3	; 227
    4148:	be 4f       	sbci	r27, 0xFE	; 254
    414a:	fe 01       	movw	r30, r28
    414c:	e3 5e       	subi	r30, 0xE3	; 227
    414e:	fe 4f       	sbci	r31, 0xFE	; 254
    4150:	80 81       	ld	r24, Z
    4152:	91 81       	ldd	r25, Z+1	; 0x01
    4154:	01 97       	sbiw	r24, 0x01	; 1
    4156:	11 96       	adiw	r26, 0x01	; 1
    4158:	9c 93       	st	X, r25
    415a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    415c:	fe 01       	movw	r30, r28
    415e:	e3 5e       	subi	r30, 0xE3	; 227
    4160:	fe 4f       	sbci	r31, 0xFE	; 254
    4162:	80 81       	ld	r24, Z
    4164:	91 81       	ldd	r25, Z+1	; 0x01
    4166:	00 97       	sbiw	r24, 0x00	; 0
    4168:	d1 f6       	brne	.-76     	; 0x411e <main+0x22f8>
    416a:	27 c0       	rjmp	.+78     	; 0x41ba <main+0x2394>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    416c:	8e 01       	movw	r16, r28
    416e:	03 5e       	subi	r16, 0xE3	; 227
    4170:	1e 4f       	sbci	r17, 0xFE	; 254
    4172:	fe 01       	movw	r30, r28
    4174:	e1 5e       	subi	r30, 0xE1	; 225
    4176:	fe 4f       	sbci	r31, 0xFE	; 254
    4178:	60 81       	ld	r22, Z
    417a:	71 81       	ldd	r23, Z+1	; 0x01
    417c:	82 81       	ldd	r24, Z+2	; 0x02
    417e:	93 81       	ldd	r25, Z+3	; 0x03
    4180:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4184:	dc 01       	movw	r26, r24
    4186:	cb 01       	movw	r24, r22
    4188:	f8 01       	movw	r30, r16
    418a:	91 83       	std	Z+1, r25	; 0x01
    418c:	80 83       	st	Z, r24
    418e:	de 01       	movw	r26, r28
    4190:	a7 5e       	subi	r26, 0xE7	; 231
    4192:	be 4f       	sbci	r27, 0xFE	; 254
    4194:	fe 01       	movw	r30, r28
    4196:	e3 5e       	subi	r30, 0xE3	; 227
    4198:	fe 4f       	sbci	r31, 0xFE	; 254
    419a:	80 81       	ld	r24, Z
    419c:	91 81       	ldd	r25, Z+1	; 0x01
    419e:	8d 93       	st	X+, r24
    41a0:	9c 93       	st	X, r25
    41a2:	fe 01       	movw	r30, r28
    41a4:	e7 5e       	subi	r30, 0xE7	; 231
    41a6:	fe 4f       	sbci	r31, 0xFE	; 254
    41a8:	80 81       	ld	r24, Z
    41aa:	91 81       	ldd	r25, Z+1	; 0x01
    41ac:	01 97       	sbiw	r24, 0x01	; 1
    41ae:	f1 f7       	brne	.-4      	; 0x41ac <main+0x2386>
    41b0:	fe 01       	movw	r30, r28
    41b2:	e7 5e       	subi	r30, 0xE7	; 231
    41b4:	fe 4f       	sbci	r31, 0xFE	; 254
    41b6:	91 83       	std	Z+1, r25	; 0x01
    41b8:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    41ba:	8b e6       	ldi	r24, 0x6B	; 107
    41bc:	90 e0       	ldi	r25, 0x00	; 0
    41be:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    41c2:	b1 c1       	rjmp	.+866    	; 0x4526 <main+0x2700>
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<7 ;i++){
    41c4:	fe 01       	movw	r30, r28
    41c6:	e1 5a       	subi	r30, 0xA1	; 161
    41c8:	fd 4f       	sbci	r31, 0xFD	; 253
    41ca:	10 82       	st	Z, r1
    41cc:	a5 c1       	rjmp	.+842    	; 0x4518 <main+0x26f2>
						Copy_u8KpdValue=KPD_u8GetKeyState();
    41ce:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    41d2:	fe 01       	movw	r30, r28
    41d4:	ed 59       	subi	r30, 0x9D	; 157
    41d6:	fd 4f       	sbci	r31, 0xFD	; 253
    41d8:	80 83       	st	Z, r24
						if(Copy_u8KpdValue==13) break;
    41da:	fe 01       	movw	r30, r28
    41dc:	ed 59       	subi	r30, 0x9D	; 157
    41de:	fd 4f       	sbci	r31, 0xFD	; 253
    41e0:	80 81       	ld	r24, Z
    41e2:	8d 30       	cpi	r24, 0x0D	; 13
    41e4:	09 f4       	brne	.+2      	; 0x41e8 <main+0x23c2>
    41e6:	9f c1       	rjmp	.+830    	; 0x4526 <main+0x2700>
						u8 j=i+1;
    41e8:	de 01       	movw	r26, r28
    41ea:	a2 5a       	subi	r26, 0xA2	; 162
    41ec:	bd 4f       	sbci	r27, 0xFD	; 253
    41ee:	fe 01       	movw	r30, r28
    41f0:	e1 5a       	subi	r30, 0xA1	; 161
    41f2:	fd 4f       	sbci	r31, 0xFD	; 253
    41f4:	80 81       	ld	r24, Z
    41f6:	8f 5f       	subi	r24, 0xFF	; 255
    41f8:	8c 93       	st	X, r24
						LED_voidControlLed( PORT_u8B,i, PIN_HIGH);
    41fa:	fe 01       	movw	r30, r28
    41fc:	e1 5a       	subi	r30, 0xA1	; 161
    41fe:	fd 4f       	sbci	r31, 0xFD	; 253
    4200:	82 e0       	ldi	r24, 0x02	; 2
    4202:	60 81       	ld	r22, Z
    4204:	41 e0       	ldi	r20, 0x01	; 1
    4206:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
						LED_voidControlLed( PORT_u8B,j, PIN_HIGH);
    420a:	fe 01       	movw	r30, r28
    420c:	e2 5a       	subi	r30, 0xA2	; 162
    420e:	fd 4f       	sbci	r31, 0xFD	; 253
    4210:	82 e0       	ldi	r24, 0x02	; 2
    4212:	60 81       	ld	r22, Z
    4214:	41 e0       	ldi	r20, 0x01	; 1
    4216:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    421a:	fe 01       	movw	r30, r28
    421c:	eb 5e       	subi	r30, 0xEB	; 235
    421e:	fe 4f       	sbci	r31, 0xFE	; 254
    4220:	80 e0       	ldi	r24, 0x00	; 0
    4222:	90 e0       	ldi	r25, 0x00	; 0
    4224:	a8 e4       	ldi	r26, 0x48	; 72
    4226:	b4 e4       	ldi	r27, 0x44	; 68
    4228:	80 83       	st	Z, r24
    422a:	91 83       	std	Z+1, r25	; 0x01
    422c:	a2 83       	std	Z+2, r26	; 0x02
    422e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4230:	8e 01       	movw	r16, r28
    4232:	0f 5e       	subi	r16, 0xEF	; 239
    4234:	1e 4f       	sbci	r17, 0xFE	; 254
    4236:	fe 01       	movw	r30, r28
    4238:	eb 5e       	subi	r30, 0xEB	; 235
    423a:	fe 4f       	sbci	r31, 0xFE	; 254
    423c:	60 81       	ld	r22, Z
    423e:	71 81       	ldd	r23, Z+1	; 0x01
    4240:	82 81       	ldd	r24, Z+2	; 0x02
    4242:	93 81       	ldd	r25, Z+3	; 0x03
    4244:	20 e0       	ldi	r18, 0x00	; 0
    4246:	30 e0       	ldi	r19, 0x00	; 0
    4248:	4a ef       	ldi	r20, 0xFA	; 250
    424a:	54 e4       	ldi	r21, 0x44	; 68
    424c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4250:	dc 01       	movw	r26, r24
    4252:	cb 01       	movw	r24, r22
    4254:	f8 01       	movw	r30, r16
    4256:	80 83       	st	Z, r24
    4258:	91 83       	std	Z+1, r25	; 0x01
    425a:	a2 83       	std	Z+2, r26	; 0x02
    425c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    425e:	fe 01       	movw	r30, r28
    4260:	ef 5e       	subi	r30, 0xEF	; 239
    4262:	fe 4f       	sbci	r31, 0xFE	; 254
    4264:	60 81       	ld	r22, Z
    4266:	71 81       	ldd	r23, Z+1	; 0x01
    4268:	82 81       	ldd	r24, Z+2	; 0x02
    426a:	93 81       	ldd	r25, Z+3	; 0x03
    426c:	20 e0       	ldi	r18, 0x00	; 0
    426e:	30 e0       	ldi	r19, 0x00	; 0
    4270:	40 e8       	ldi	r20, 0x80	; 128
    4272:	5f e3       	ldi	r21, 0x3F	; 63
    4274:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4278:	88 23       	and	r24, r24
    427a:	44 f4       	brge	.+16     	; 0x428c <main+0x2466>
		__ticks = 1;
    427c:	fe 01       	movw	r30, r28
    427e:	e1 5f       	subi	r30, 0xF1	; 241
    4280:	fe 4f       	sbci	r31, 0xFE	; 254
    4282:	81 e0       	ldi	r24, 0x01	; 1
    4284:	90 e0       	ldi	r25, 0x00	; 0
    4286:	91 83       	std	Z+1, r25	; 0x01
    4288:	80 83       	st	Z, r24
    428a:	64 c0       	rjmp	.+200    	; 0x4354 <main+0x252e>
	else if (__tmp > 65535)
    428c:	fe 01       	movw	r30, r28
    428e:	ef 5e       	subi	r30, 0xEF	; 239
    4290:	fe 4f       	sbci	r31, 0xFE	; 254
    4292:	60 81       	ld	r22, Z
    4294:	71 81       	ldd	r23, Z+1	; 0x01
    4296:	82 81       	ldd	r24, Z+2	; 0x02
    4298:	93 81       	ldd	r25, Z+3	; 0x03
    429a:	20 e0       	ldi	r18, 0x00	; 0
    429c:	3f ef       	ldi	r19, 0xFF	; 255
    429e:	4f e7       	ldi	r20, 0x7F	; 127
    42a0:	57 e4       	ldi	r21, 0x47	; 71
    42a2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    42a6:	18 16       	cp	r1, r24
    42a8:	0c f0       	brlt	.+2      	; 0x42ac <main+0x2486>
    42aa:	43 c0       	rjmp	.+134    	; 0x4332 <main+0x250c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42ac:	fe 01       	movw	r30, r28
    42ae:	eb 5e       	subi	r30, 0xEB	; 235
    42b0:	fe 4f       	sbci	r31, 0xFE	; 254
    42b2:	60 81       	ld	r22, Z
    42b4:	71 81       	ldd	r23, Z+1	; 0x01
    42b6:	82 81       	ldd	r24, Z+2	; 0x02
    42b8:	93 81       	ldd	r25, Z+3	; 0x03
    42ba:	20 e0       	ldi	r18, 0x00	; 0
    42bc:	30 e0       	ldi	r19, 0x00	; 0
    42be:	40 e2       	ldi	r20, 0x20	; 32
    42c0:	51 e4       	ldi	r21, 0x41	; 65
    42c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42c6:	dc 01       	movw	r26, r24
    42c8:	cb 01       	movw	r24, r22
    42ca:	8e 01       	movw	r16, r28
    42cc:	01 5f       	subi	r16, 0xF1	; 241
    42ce:	1e 4f       	sbci	r17, 0xFE	; 254
    42d0:	bc 01       	movw	r22, r24
    42d2:	cd 01       	movw	r24, r26
    42d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42d8:	dc 01       	movw	r26, r24
    42da:	cb 01       	movw	r24, r22
    42dc:	f8 01       	movw	r30, r16
    42de:	91 83       	std	Z+1, r25	; 0x01
    42e0:	80 83       	st	Z, r24
    42e2:	1f c0       	rjmp	.+62     	; 0x4322 <main+0x24fc>
    42e4:	fe 01       	movw	r30, r28
    42e6:	e3 5f       	subi	r30, 0xF3	; 243
    42e8:	fe 4f       	sbci	r31, 0xFE	; 254
    42ea:	88 ec       	ldi	r24, 0xC8	; 200
    42ec:	90 e0       	ldi	r25, 0x00	; 0
    42ee:	91 83       	std	Z+1, r25	; 0x01
    42f0:	80 83       	st	Z, r24
    42f2:	fe 01       	movw	r30, r28
    42f4:	e3 5f       	subi	r30, 0xF3	; 243
    42f6:	fe 4f       	sbci	r31, 0xFE	; 254
    42f8:	80 81       	ld	r24, Z
    42fa:	91 81       	ldd	r25, Z+1	; 0x01
    42fc:	01 97       	sbiw	r24, 0x01	; 1
    42fe:	f1 f7       	brne	.-4      	; 0x42fc <main+0x24d6>
    4300:	fe 01       	movw	r30, r28
    4302:	e3 5f       	subi	r30, 0xF3	; 243
    4304:	fe 4f       	sbci	r31, 0xFE	; 254
    4306:	91 83       	std	Z+1, r25	; 0x01
    4308:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    430a:	de 01       	movw	r26, r28
    430c:	a1 5f       	subi	r26, 0xF1	; 241
    430e:	be 4f       	sbci	r27, 0xFE	; 254
    4310:	fe 01       	movw	r30, r28
    4312:	e1 5f       	subi	r30, 0xF1	; 241
    4314:	fe 4f       	sbci	r31, 0xFE	; 254
    4316:	80 81       	ld	r24, Z
    4318:	91 81       	ldd	r25, Z+1	; 0x01
    431a:	01 97       	sbiw	r24, 0x01	; 1
    431c:	11 96       	adiw	r26, 0x01	; 1
    431e:	9c 93       	st	X, r25
    4320:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4322:	fe 01       	movw	r30, r28
    4324:	e1 5f       	subi	r30, 0xF1	; 241
    4326:	fe 4f       	sbci	r31, 0xFE	; 254
    4328:	80 81       	ld	r24, Z
    432a:	91 81       	ldd	r25, Z+1	; 0x01
    432c:	00 97       	sbiw	r24, 0x00	; 0
    432e:	d1 f6       	brne	.-76     	; 0x42e4 <main+0x24be>
    4330:	27 c0       	rjmp	.+78     	; 0x4380 <main+0x255a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4332:	8e 01       	movw	r16, r28
    4334:	01 5f       	subi	r16, 0xF1	; 241
    4336:	1e 4f       	sbci	r17, 0xFE	; 254
    4338:	fe 01       	movw	r30, r28
    433a:	ef 5e       	subi	r30, 0xEF	; 239
    433c:	fe 4f       	sbci	r31, 0xFE	; 254
    433e:	60 81       	ld	r22, Z
    4340:	71 81       	ldd	r23, Z+1	; 0x01
    4342:	82 81       	ldd	r24, Z+2	; 0x02
    4344:	93 81       	ldd	r25, Z+3	; 0x03
    4346:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    434a:	dc 01       	movw	r26, r24
    434c:	cb 01       	movw	r24, r22
    434e:	f8 01       	movw	r30, r16
    4350:	91 83       	std	Z+1, r25	; 0x01
    4352:	80 83       	st	Z, r24
    4354:	de 01       	movw	r26, r28
    4356:	a5 5f       	subi	r26, 0xF5	; 245
    4358:	be 4f       	sbci	r27, 0xFE	; 254
    435a:	fe 01       	movw	r30, r28
    435c:	e1 5f       	subi	r30, 0xF1	; 241
    435e:	fe 4f       	sbci	r31, 0xFE	; 254
    4360:	80 81       	ld	r24, Z
    4362:	91 81       	ldd	r25, Z+1	; 0x01
    4364:	8d 93       	st	X+, r24
    4366:	9c 93       	st	X, r25
    4368:	fe 01       	movw	r30, r28
    436a:	e5 5f       	subi	r30, 0xF5	; 245
    436c:	fe 4f       	sbci	r31, 0xFE	; 254
    436e:	80 81       	ld	r24, Z
    4370:	91 81       	ldd	r25, Z+1	; 0x01
    4372:	01 97       	sbiw	r24, 0x01	; 1
    4374:	f1 f7       	brne	.-4      	; 0x4372 <main+0x254c>
    4376:	fe 01       	movw	r30, r28
    4378:	e5 5f       	subi	r30, 0xF5	; 245
    437a:	fe 4f       	sbci	r31, 0xFE	; 254
    437c:	91 83       	std	Z+1, r25	; 0x01
    437e:	80 83       	st	Z, r24
						_delay_ms(800);
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
    4380:	fe 01       	movw	r30, r28
    4382:	e1 5a       	subi	r30, 0xA1	; 161
    4384:	fd 4f       	sbci	r31, 0xFD	; 253
    4386:	82 e0       	ldi	r24, 0x02	; 2
    4388:	60 81       	ld	r22, Z
    438a:	40 e0       	ldi	r20, 0x00	; 0
    438c:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
						LED_voidControlLed( PORT_u8B,j, PIN_LOW);
    4390:	fe 01       	movw	r30, r28
    4392:	e2 5a       	subi	r30, 0xA2	; 162
    4394:	fd 4f       	sbci	r31, 0xFD	; 253
    4396:	82 e0       	ldi	r24, 0x02	; 2
    4398:	60 81       	ld	r22, Z
    439a:	40 e0       	ldi	r20, 0x00	; 0
    439c:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    43a0:	fe 01       	movw	r30, r28
    43a2:	e9 5f       	subi	r30, 0xF9	; 249
    43a4:	fe 4f       	sbci	r31, 0xFE	; 254
    43a6:	80 e0       	ldi	r24, 0x00	; 0
    43a8:	90 e0       	ldi	r25, 0x00	; 0
    43aa:	a8 ec       	ldi	r26, 0xC8	; 200
    43ac:	b2 e4       	ldi	r27, 0x42	; 66
    43ae:	80 83       	st	Z, r24
    43b0:	91 83       	std	Z+1, r25	; 0x01
    43b2:	a2 83       	std	Z+2, r26	; 0x02
    43b4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43b6:	8e 01       	movw	r16, r28
    43b8:	0d 5f       	subi	r16, 0xFD	; 253
    43ba:	1e 4f       	sbci	r17, 0xFE	; 254
    43bc:	fe 01       	movw	r30, r28
    43be:	e9 5f       	subi	r30, 0xF9	; 249
    43c0:	fe 4f       	sbci	r31, 0xFE	; 254
    43c2:	60 81       	ld	r22, Z
    43c4:	71 81       	ldd	r23, Z+1	; 0x01
    43c6:	82 81       	ldd	r24, Z+2	; 0x02
    43c8:	93 81       	ldd	r25, Z+3	; 0x03
    43ca:	20 e0       	ldi	r18, 0x00	; 0
    43cc:	30 e0       	ldi	r19, 0x00	; 0
    43ce:	4a ef       	ldi	r20, 0xFA	; 250
    43d0:	54 e4       	ldi	r21, 0x44	; 68
    43d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43d6:	dc 01       	movw	r26, r24
    43d8:	cb 01       	movw	r24, r22
    43da:	f8 01       	movw	r30, r16
    43dc:	80 83       	st	Z, r24
    43de:	91 83       	std	Z+1, r25	; 0x01
    43e0:	a2 83       	std	Z+2, r26	; 0x02
    43e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43e4:	fe 01       	movw	r30, r28
    43e6:	ed 5f       	subi	r30, 0xFD	; 253
    43e8:	fe 4f       	sbci	r31, 0xFE	; 254
    43ea:	60 81       	ld	r22, Z
    43ec:	71 81       	ldd	r23, Z+1	; 0x01
    43ee:	82 81       	ldd	r24, Z+2	; 0x02
    43f0:	93 81       	ldd	r25, Z+3	; 0x03
    43f2:	20 e0       	ldi	r18, 0x00	; 0
    43f4:	30 e0       	ldi	r19, 0x00	; 0
    43f6:	40 e8       	ldi	r20, 0x80	; 128
    43f8:	5f e3       	ldi	r21, 0x3F	; 63
    43fa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    43fe:	88 23       	and	r24, r24
    4400:	44 f4       	brge	.+16     	; 0x4412 <main+0x25ec>
		__ticks = 1;
    4402:	fe 01       	movw	r30, r28
    4404:	ef 5f       	subi	r30, 0xFF	; 255
    4406:	fe 4f       	sbci	r31, 0xFE	; 254
    4408:	81 e0       	ldi	r24, 0x01	; 1
    440a:	90 e0       	ldi	r25, 0x00	; 0
    440c:	91 83       	std	Z+1, r25	; 0x01
    440e:	80 83       	st	Z, r24
    4410:	64 c0       	rjmp	.+200    	; 0x44da <main+0x26b4>
	else if (__tmp > 65535)
    4412:	fe 01       	movw	r30, r28
    4414:	ed 5f       	subi	r30, 0xFD	; 253
    4416:	fe 4f       	sbci	r31, 0xFE	; 254
    4418:	60 81       	ld	r22, Z
    441a:	71 81       	ldd	r23, Z+1	; 0x01
    441c:	82 81       	ldd	r24, Z+2	; 0x02
    441e:	93 81       	ldd	r25, Z+3	; 0x03
    4420:	20 e0       	ldi	r18, 0x00	; 0
    4422:	3f ef       	ldi	r19, 0xFF	; 255
    4424:	4f e7       	ldi	r20, 0x7F	; 127
    4426:	57 e4       	ldi	r21, 0x47	; 71
    4428:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    442c:	18 16       	cp	r1, r24
    442e:	0c f0       	brlt	.+2      	; 0x4432 <main+0x260c>
    4430:	43 c0       	rjmp	.+134    	; 0x44b8 <main+0x2692>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4432:	fe 01       	movw	r30, r28
    4434:	e9 5f       	subi	r30, 0xF9	; 249
    4436:	fe 4f       	sbci	r31, 0xFE	; 254
    4438:	60 81       	ld	r22, Z
    443a:	71 81       	ldd	r23, Z+1	; 0x01
    443c:	82 81       	ldd	r24, Z+2	; 0x02
    443e:	93 81       	ldd	r25, Z+3	; 0x03
    4440:	20 e0       	ldi	r18, 0x00	; 0
    4442:	30 e0       	ldi	r19, 0x00	; 0
    4444:	40 e2       	ldi	r20, 0x20	; 32
    4446:	51 e4       	ldi	r21, 0x41	; 65
    4448:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    444c:	dc 01       	movw	r26, r24
    444e:	cb 01       	movw	r24, r22
    4450:	8e 01       	movw	r16, r28
    4452:	0f 5f       	subi	r16, 0xFF	; 255
    4454:	1e 4f       	sbci	r17, 0xFE	; 254
    4456:	bc 01       	movw	r22, r24
    4458:	cd 01       	movw	r24, r26
    445a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    445e:	dc 01       	movw	r26, r24
    4460:	cb 01       	movw	r24, r22
    4462:	f8 01       	movw	r30, r16
    4464:	91 83       	std	Z+1, r25	; 0x01
    4466:	80 83       	st	Z, r24
    4468:	1f c0       	rjmp	.+62     	; 0x44a8 <main+0x2682>
    446a:	fe 01       	movw	r30, r28
    446c:	e1 50       	subi	r30, 0x01	; 1
    446e:	ff 4f       	sbci	r31, 0xFF	; 255
    4470:	88 ec       	ldi	r24, 0xC8	; 200
    4472:	90 e0       	ldi	r25, 0x00	; 0
    4474:	91 83       	std	Z+1, r25	; 0x01
    4476:	80 83       	st	Z, r24
    4478:	fe 01       	movw	r30, r28
    447a:	e1 50       	subi	r30, 0x01	; 1
    447c:	ff 4f       	sbci	r31, 0xFF	; 255
    447e:	80 81       	ld	r24, Z
    4480:	91 81       	ldd	r25, Z+1	; 0x01
    4482:	01 97       	sbiw	r24, 0x01	; 1
    4484:	f1 f7       	brne	.-4      	; 0x4482 <main+0x265c>
    4486:	fe 01       	movw	r30, r28
    4488:	e1 50       	subi	r30, 0x01	; 1
    448a:	ff 4f       	sbci	r31, 0xFF	; 255
    448c:	91 83       	std	Z+1, r25	; 0x01
    448e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4490:	de 01       	movw	r26, r28
    4492:	af 5f       	subi	r26, 0xFF	; 255
    4494:	be 4f       	sbci	r27, 0xFE	; 254
    4496:	fe 01       	movw	r30, r28
    4498:	ef 5f       	subi	r30, 0xFF	; 255
    449a:	fe 4f       	sbci	r31, 0xFE	; 254
    449c:	80 81       	ld	r24, Z
    449e:	91 81       	ldd	r25, Z+1	; 0x01
    44a0:	01 97       	sbiw	r24, 0x01	; 1
    44a2:	11 96       	adiw	r26, 0x01	; 1
    44a4:	9c 93       	st	X, r25
    44a6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44a8:	fe 01       	movw	r30, r28
    44aa:	ef 5f       	subi	r30, 0xFF	; 255
    44ac:	fe 4f       	sbci	r31, 0xFE	; 254
    44ae:	80 81       	ld	r24, Z
    44b0:	91 81       	ldd	r25, Z+1	; 0x01
    44b2:	00 97       	sbiw	r24, 0x00	; 0
    44b4:	d1 f6       	brne	.-76     	; 0x446a <main+0x2644>
    44b6:	27 c0       	rjmp	.+78     	; 0x4506 <main+0x26e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44b8:	8e 01       	movw	r16, r28
    44ba:	0f 5f       	subi	r16, 0xFF	; 255
    44bc:	1e 4f       	sbci	r17, 0xFE	; 254
    44be:	fe 01       	movw	r30, r28
    44c0:	ed 5f       	subi	r30, 0xFD	; 253
    44c2:	fe 4f       	sbci	r31, 0xFE	; 254
    44c4:	60 81       	ld	r22, Z
    44c6:	71 81       	ldd	r23, Z+1	; 0x01
    44c8:	82 81       	ldd	r24, Z+2	; 0x02
    44ca:	93 81       	ldd	r25, Z+3	; 0x03
    44cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44d0:	dc 01       	movw	r26, r24
    44d2:	cb 01       	movw	r24, r22
    44d4:	f8 01       	movw	r30, r16
    44d6:	91 83       	std	Z+1, r25	; 0x01
    44d8:	80 83       	st	Z, r24
    44da:	de 01       	movw	r26, r28
    44dc:	a3 50       	subi	r26, 0x03	; 3
    44de:	bf 4f       	sbci	r27, 0xFF	; 255
    44e0:	fe 01       	movw	r30, r28
    44e2:	ef 5f       	subi	r30, 0xFF	; 255
    44e4:	fe 4f       	sbci	r31, 0xFE	; 254
    44e6:	80 81       	ld	r24, Z
    44e8:	91 81       	ldd	r25, Z+1	; 0x01
    44ea:	8d 93       	st	X+, r24
    44ec:	9c 93       	st	X, r25
    44ee:	fe 01       	movw	r30, r28
    44f0:	e3 50       	subi	r30, 0x03	; 3
    44f2:	ff 4f       	sbci	r31, 0xFF	; 255
    44f4:	80 81       	ld	r24, Z
    44f6:	91 81       	ldd	r25, Z+1	; 0x01
    44f8:	01 97       	sbiw	r24, 0x01	; 1
    44fa:	f1 f7       	brne	.-4      	; 0x44f8 <main+0x26d2>
    44fc:	fe 01       	movw	r30, r28
    44fe:	e3 50       	subi	r30, 0x03	; 3
    4500:	ff 4f       	sbci	r31, 0xFF	; 255
    4502:	91 83       	std	Z+1, r25	; 0x01
    4504:	80 83       	st	Z, r24
				CLCD_voidSendString("Alternating(2)..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<7 ;i++){
    4506:	de 01       	movw	r26, r28
    4508:	a1 5a       	subi	r26, 0xA1	; 161
    450a:	bd 4f       	sbci	r27, 0xFD	; 253
    450c:	fe 01       	movw	r30, r28
    450e:	e1 5a       	subi	r30, 0xA1	; 161
    4510:	fd 4f       	sbci	r31, 0xFD	; 253
    4512:	80 81       	ld	r24, Z
    4514:	8f 5f       	subi	r24, 0xFF	; 255
    4516:	8c 93       	st	X, r24
    4518:	fe 01       	movw	r30, r28
    451a:	e1 5a       	subi	r30, 0xA1	; 161
    451c:	fd 4f       	sbci	r31, 0xFD	; 253
    451e:	80 81       	ld	r24, Z
    4520:	87 30       	cpi	r24, 0x07	; 7
    4522:	08 f4       	brcc	.+2      	; 0x4526 <main+0x2700>
    4524:	54 ce       	rjmp	.-856    	; 0x41ce <main+0x23a8>
				_delay_ms(1);
				CLCD_voidSendString("Alternating(2)..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
    4526:	fe 01       	movw	r30, r28
    4528:	ed 59       	subi	r30, 0x9D	; 157
    452a:	fd 4f       	sbci	r31, 0xFD	; 253
    452c:	80 81       	ld	r24, Z
    452e:	8d 30       	cpi	r24, 0x0D	; 13
    4530:	09 f0       	breq	.+2      	; 0x4534 <main+0x270e>
    4532:	48 ce       	rjmp	.-880    	; 0x41c4 <main+0x239e>
						LED_voidControlLed( PORT_u8B,i, PIN_LOW);
						LED_voidControlLed( PORT_u8B,j, PIN_LOW);
						_delay_ms(100);
					}
				}
				LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    4534:	82 e0       	ldi	r24, 0x02	; 2
    4536:	60 e0       	ldi	r22, 0x00	; 0
    4538:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
				CLCD_voidClearDisplay();
    453c:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    4540:	fe 01       	movw	r30, r28
    4542:	e7 50       	subi	r30, 0x07	; 7
    4544:	ff 4f       	sbci	r31, 0xFF	; 255
    4546:	80 e0       	ldi	r24, 0x00	; 0
    4548:	90 e0       	ldi	r25, 0x00	; 0
    454a:	a0 e8       	ldi	r26, 0x80	; 128
    454c:	bf e3       	ldi	r27, 0x3F	; 63
    454e:	80 83       	st	Z, r24
    4550:	91 83       	std	Z+1, r25	; 0x01
    4552:	a2 83       	std	Z+2, r26	; 0x02
    4554:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4556:	8e 01       	movw	r16, r28
    4558:	0b 50       	subi	r16, 0x0B	; 11
    455a:	1f 4f       	sbci	r17, 0xFF	; 255
    455c:	fe 01       	movw	r30, r28
    455e:	e7 50       	subi	r30, 0x07	; 7
    4560:	ff 4f       	sbci	r31, 0xFF	; 255
    4562:	60 81       	ld	r22, Z
    4564:	71 81       	ldd	r23, Z+1	; 0x01
    4566:	82 81       	ldd	r24, Z+2	; 0x02
    4568:	93 81       	ldd	r25, Z+3	; 0x03
    456a:	20 e0       	ldi	r18, 0x00	; 0
    456c:	30 e0       	ldi	r19, 0x00	; 0
    456e:	4a ef       	ldi	r20, 0xFA	; 250
    4570:	54 e4       	ldi	r21, 0x44	; 68
    4572:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4576:	dc 01       	movw	r26, r24
    4578:	cb 01       	movw	r24, r22
    457a:	f8 01       	movw	r30, r16
    457c:	80 83       	st	Z, r24
    457e:	91 83       	std	Z+1, r25	; 0x01
    4580:	a2 83       	std	Z+2, r26	; 0x02
    4582:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4584:	fe 01       	movw	r30, r28
    4586:	eb 50       	subi	r30, 0x0B	; 11
    4588:	ff 4f       	sbci	r31, 0xFF	; 255
    458a:	60 81       	ld	r22, Z
    458c:	71 81       	ldd	r23, Z+1	; 0x01
    458e:	82 81       	ldd	r24, Z+2	; 0x02
    4590:	93 81       	ldd	r25, Z+3	; 0x03
    4592:	20 e0       	ldi	r18, 0x00	; 0
    4594:	30 e0       	ldi	r19, 0x00	; 0
    4596:	40 e8       	ldi	r20, 0x80	; 128
    4598:	5f e3       	ldi	r21, 0x3F	; 63
    459a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    459e:	88 23       	and	r24, r24
    45a0:	44 f4       	brge	.+16     	; 0x45b2 <main+0x278c>
		__ticks = 1;
    45a2:	fe 01       	movw	r30, r28
    45a4:	ed 50       	subi	r30, 0x0D	; 13
    45a6:	ff 4f       	sbci	r31, 0xFF	; 255
    45a8:	81 e0       	ldi	r24, 0x01	; 1
    45aa:	90 e0       	ldi	r25, 0x00	; 0
    45ac:	91 83       	std	Z+1, r25	; 0x01
    45ae:	80 83       	st	Z, r24
    45b0:	65 c0       	rjmp	.+202    	; 0x467c <main+0x2856>
	else if (__tmp > 65535)
    45b2:	fe 01       	movw	r30, r28
    45b4:	eb 50       	subi	r30, 0x0B	; 11
    45b6:	ff 4f       	sbci	r31, 0xFF	; 255
    45b8:	60 81       	ld	r22, Z
    45ba:	71 81       	ldd	r23, Z+1	; 0x01
    45bc:	82 81       	ldd	r24, Z+2	; 0x02
    45be:	93 81       	ldd	r25, Z+3	; 0x03
    45c0:	20 e0       	ldi	r18, 0x00	; 0
    45c2:	3f ef       	ldi	r19, 0xFF	; 255
    45c4:	4f e7       	ldi	r20, 0x7F	; 127
    45c6:	57 e4       	ldi	r21, 0x47	; 71
    45c8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    45cc:	18 16       	cp	r1, r24
    45ce:	0c f0       	brlt	.+2      	; 0x45d2 <main+0x27ac>
    45d0:	44 c0       	rjmp	.+136    	; 0x465a <main+0x2834>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45d2:	fe 01       	movw	r30, r28
    45d4:	e7 50       	subi	r30, 0x07	; 7
    45d6:	ff 4f       	sbci	r31, 0xFF	; 255
    45d8:	60 81       	ld	r22, Z
    45da:	71 81       	ldd	r23, Z+1	; 0x01
    45dc:	82 81       	ldd	r24, Z+2	; 0x02
    45de:	93 81       	ldd	r25, Z+3	; 0x03
    45e0:	20 e0       	ldi	r18, 0x00	; 0
    45e2:	30 e0       	ldi	r19, 0x00	; 0
    45e4:	40 e2       	ldi	r20, 0x20	; 32
    45e6:	51 e4       	ldi	r21, 0x41	; 65
    45e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45ec:	dc 01       	movw	r26, r24
    45ee:	cb 01       	movw	r24, r22
    45f0:	8e 01       	movw	r16, r28
    45f2:	0d 50       	subi	r16, 0x0D	; 13
    45f4:	1f 4f       	sbci	r17, 0xFF	; 255
    45f6:	bc 01       	movw	r22, r24
    45f8:	cd 01       	movw	r24, r26
    45fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45fe:	dc 01       	movw	r26, r24
    4600:	cb 01       	movw	r24, r22
    4602:	f8 01       	movw	r30, r16
    4604:	91 83       	std	Z+1, r25	; 0x01
    4606:	80 83       	st	Z, r24
    4608:	1f c0       	rjmp	.+62     	; 0x4648 <main+0x2822>
    460a:	fe 01       	movw	r30, r28
    460c:	ef 50       	subi	r30, 0x0F	; 15
    460e:	ff 4f       	sbci	r31, 0xFF	; 255
    4610:	88 ec       	ldi	r24, 0xC8	; 200
    4612:	90 e0       	ldi	r25, 0x00	; 0
    4614:	91 83       	std	Z+1, r25	; 0x01
    4616:	80 83       	st	Z, r24
    4618:	fe 01       	movw	r30, r28
    461a:	ef 50       	subi	r30, 0x0F	; 15
    461c:	ff 4f       	sbci	r31, 0xFF	; 255
    461e:	80 81       	ld	r24, Z
    4620:	91 81       	ldd	r25, Z+1	; 0x01
    4622:	01 97       	sbiw	r24, 0x01	; 1
    4624:	f1 f7       	brne	.-4      	; 0x4622 <main+0x27fc>
    4626:	fe 01       	movw	r30, r28
    4628:	ef 50       	subi	r30, 0x0F	; 15
    462a:	ff 4f       	sbci	r31, 0xFF	; 255
    462c:	91 83       	std	Z+1, r25	; 0x01
    462e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4630:	de 01       	movw	r26, r28
    4632:	ad 50       	subi	r26, 0x0D	; 13
    4634:	bf 4f       	sbci	r27, 0xFF	; 255
    4636:	fe 01       	movw	r30, r28
    4638:	ed 50       	subi	r30, 0x0D	; 13
    463a:	ff 4f       	sbci	r31, 0xFF	; 255
    463c:	80 81       	ld	r24, Z
    463e:	91 81       	ldd	r25, Z+1	; 0x01
    4640:	01 97       	sbiw	r24, 0x01	; 1
    4642:	11 96       	adiw	r26, 0x01	; 1
    4644:	9c 93       	st	X, r25
    4646:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4648:	fe 01       	movw	r30, r28
    464a:	ed 50       	subi	r30, 0x0D	; 13
    464c:	ff 4f       	sbci	r31, 0xFF	; 255
    464e:	80 81       	ld	r24, Z
    4650:	91 81       	ldd	r25, Z+1	; 0x01
    4652:	00 97       	sbiw	r24, 0x00	; 0
    4654:	d1 f6       	brne	.-76     	; 0x460a <main+0x27e4>
    4656:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    465a:	8e 01       	movw	r16, r28
    465c:	0d 50       	subi	r16, 0x0D	; 13
    465e:	1f 4f       	sbci	r17, 0xFF	; 255
    4660:	fe 01       	movw	r30, r28
    4662:	eb 50       	subi	r30, 0x0B	; 11
    4664:	ff 4f       	sbci	r31, 0xFF	; 255
    4666:	60 81       	ld	r22, Z
    4668:	71 81       	ldd	r23, Z+1	; 0x01
    466a:	82 81       	ldd	r24, Z+2	; 0x02
    466c:	93 81       	ldd	r25, Z+3	; 0x03
    466e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4672:	dc 01       	movw	r26, r24
    4674:	cb 01       	movw	r24, r22
    4676:	f8 01       	movw	r30, r16
    4678:	91 83       	std	Z+1, r25	; 0x01
    467a:	80 83       	st	Z, r24
    467c:	de 01       	movw	r26, r28
    467e:	a1 51       	subi	r26, 0x11	; 17
    4680:	bf 4f       	sbci	r27, 0xFF	; 255
    4682:	fe 01       	movw	r30, r28
    4684:	ed 50       	subi	r30, 0x0D	; 13
    4686:	ff 4f       	sbci	r31, 0xFF	; 255
    4688:	80 81       	ld	r24, Z
    468a:	91 81       	ldd	r25, Z+1	; 0x01
    468c:	11 96       	adiw	r26, 0x01	; 1
    468e:	9c 93       	st	X, r25
    4690:	8e 93       	st	-X, r24
    4692:	fe 01       	movw	r30, r28
    4694:	e1 51       	subi	r30, 0x11	; 17
    4696:	ff 4f       	sbci	r31, 0xFF	; 255
    4698:	80 81       	ld	r24, Z
    469a:	91 81       	ldd	r25, Z+1	; 0x01
    469c:	01 97       	sbiw	r24, 0x01	; 1
    469e:	f1 f7       	brne	.-4      	; 0x469c <main+0x2876>
    46a0:	fe 01       	movw	r30, r28
    46a2:	e1 51       	subi	r30, 0x11	; 17
    46a4:	ff 4f       	sbci	r31, 0xFF	; 255
    46a6:	91 83       	std	Z+1, r25	; 0x01
    46a8:	80 83       	st	Z, r24
    46aa:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
				_delay_ms(1);
				break;
			case 6:
				CLCD_voidSetPosition(0,0);
    46ae:	80 e0       	ldi	r24, 0x00	; 0
    46b0:	60 e0       	ldi	r22, 0x00	; 0
    46b2:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    46b6:	fe 01       	movw	r30, r28
    46b8:	e5 51       	subi	r30, 0x15	; 21
    46ba:	ff 4f       	sbci	r31, 0xFF	; 255
    46bc:	80 e0       	ldi	r24, 0x00	; 0
    46be:	90 e0       	ldi	r25, 0x00	; 0
    46c0:	a0 e8       	ldi	r26, 0x80	; 128
    46c2:	bf e3       	ldi	r27, 0x3F	; 63
    46c4:	80 83       	st	Z, r24
    46c6:	91 83       	std	Z+1, r25	; 0x01
    46c8:	a2 83       	std	Z+2, r26	; 0x02
    46ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46cc:	8e 01       	movw	r16, r28
    46ce:	09 51       	subi	r16, 0x19	; 25
    46d0:	1f 4f       	sbci	r17, 0xFF	; 255
    46d2:	fe 01       	movw	r30, r28
    46d4:	e5 51       	subi	r30, 0x15	; 21
    46d6:	ff 4f       	sbci	r31, 0xFF	; 255
    46d8:	60 81       	ld	r22, Z
    46da:	71 81       	ldd	r23, Z+1	; 0x01
    46dc:	82 81       	ldd	r24, Z+2	; 0x02
    46de:	93 81       	ldd	r25, Z+3	; 0x03
    46e0:	20 e0       	ldi	r18, 0x00	; 0
    46e2:	30 e0       	ldi	r19, 0x00	; 0
    46e4:	4a ef       	ldi	r20, 0xFA	; 250
    46e6:	54 e4       	ldi	r21, 0x44	; 68
    46e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46ec:	dc 01       	movw	r26, r24
    46ee:	cb 01       	movw	r24, r22
    46f0:	f8 01       	movw	r30, r16
    46f2:	80 83       	st	Z, r24
    46f4:	91 83       	std	Z+1, r25	; 0x01
    46f6:	a2 83       	std	Z+2, r26	; 0x02
    46f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46fa:	fe 01       	movw	r30, r28
    46fc:	e9 51       	subi	r30, 0x19	; 25
    46fe:	ff 4f       	sbci	r31, 0xFF	; 255
    4700:	60 81       	ld	r22, Z
    4702:	71 81       	ldd	r23, Z+1	; 0x01
    4704:	82 81       	ldd	r24, Z+2	; 0x02
    4706:	93 81       	ldd	r25, Z+3	; 0x03
    4708:	20 e0       	ldi	r18, 0x00	; 0
    470a:	30 e0       	ldi	r19, 0x00	; 0
    470c:	40 e8       	ldi	r20, 0x80	; 128
    470e:	5f e3       	ldi	r21, 0x3F	; 63
    4710:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4714:	88 23       	and	r24, r24
    4716:	44 f4       	brge	.+16     	; 0x4728 <main+0x2902>
		__ticks = 1;
    4718:	fe 01       	movw	r30, r28
    471a:	eb 51       	subi	r30, 0x1B	; 27
    471c:	ff 4f       	sbci	r31, 0xFF	; 255
    471e:	81 e0       	ldi	r24, 0x01	; 1
    4720:	90 e0       	ldi	r25, 0x00	; 0
    4722:	91 83       	std	Z+1, r25	; 0x01
    4724:	80 83       	st	Z, r24
    4726:	64 c0       	rjmp	.+200    	; 0x47f0 <main+0x29ca>
	else if (__tmp > 65535)
    4728:	fe 01       	movw	r30, r28
    472a:	e9 51       	subi	r30, 0x19	; 25
    472c:	ff 4f       	sbci	r31, 0xFF	; 255
    472e:	60 81       	ld	r22, Z
    4730:	71 81       	ldd	r23, Z+1	; 0x01
    4732:	82 81       	ldd	r24, Z+2	; 0x02
    4734:	93 81       	ldd	r25, Z+3	; 0x03
    4736:	20 e0       	ldi	r18, 0x00	; 0
    4738:	3f ef       	ldi	r19, 0xFF	; 255
    473a:	4f e7       	ldi	r20, 0x7F	; 127
    473c:	57 e4       	ldi	r21, 0x47	; 71
    473e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4742:	18 16       	cp	r1, r24
    4744:	0c f0       	brlt	.+2      	; 0x4748 <main+0x2922>
    4746:	43 c0       	rjmp	.+134    	; 0x47ce <main+0x29a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4748:	fe 01       	movw	r30, r28
    474a:	e5 51       	subi	r30, 0x15	; 21
    474c:	ff 4f       	sbci	r31, 0xFF	; 255
    474e:	60 81       	ld	r22, Z
    4750:	71 81       	ldd	r23, Z+1	; 0x01
    4752:	82 81       	ldd	r24, Z+2	; 0x02
    4754:	93 81       	ldd	r25, Z+3	; 0x03
    4756:	20 e0       	ldi	r18, 0x00	; 0
    4758:	30 e0       	ldi	r19, 0x00	; 0
    475a:	40 e2       	ldi	r20, 0x20	; 32
    475c:	51 e4       	ldi	r21, 0x41	; 65
    475e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4762:	dc 01       	movw	r26, r24
    4764:	cb 01       	movw	r24, r22
    4766:	8e 01       	movw	r16, r28
    4768:	0b 51       	subi	r16, 0x1B	; 27
    476a:	1f 4f       	sbci	r17, 0xFF	; 255
    476c:	bc 01       	movw	r22, r24
    476e:	cd 01       	movw	r24, r26
    4770:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4774:	dc 01       	movw	r26, r24
    4776:	cb 01       	movw	r24, r22
    4778:	f8 01       	movw	r30, r16
    477a:	91 83       	std	Z+1, r25	; 0x01
    477c:	80 83       	st	Z, r24
    477e:	1f c0       	rjmp	.+62     	; 0x47be <main+0x2998>
    4780:	fe 01       	movw	r30, r28
    4782:	ed 51       	subi	r30, 0x1D	; 29
    4784:	ff 4f       	sbci	r31, 0xFF	; 255
    4786:	88 ec       	ldi	r24, 0xC8	; 200
    4788:	90 e0       	ldi	r25, 0x00	; 0
    478a:	91 83       	std	Z+1, r25	; 0x01
    478c:	80 83       	st	Z, r24
    478e:	fe 01       	movw	r30, r28
    4790:	ed 51       	subi	r30, 0x1D	; 29
    4792:	ff 4f       	sbci	r31, 0xFF	; 255
    4794:	80 81       	ld	r24, Z
    4796:	91 81       	ldd	r25, Z+1	; 0x01
    4798:	01 97       	sbiw	r24, 0x01	; 1
    479a:	f1 f7       	brne	.-4      	; 0x4798 <main+0x2972>
    479c:	fe 01       	movw	r30, r28
    479e:	ed 51       	subi	r30, 0x1D	; 29
    47a0:	ff 4f       	sbci	r31, 0xFF	; 255
    47a2:	91 83       	std	Z+1, r25	; 0x01
    47a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47a6:	de 01       	movw	r26, r28
    47a8:	ab 51       	subi	r26, 0x1B	; 27
    47aa:	bf 4f       	sbci	r27, 0xFF	; 255
    47ac:	fe 01       	movw	r30, r28
    47ae:	eb 51       	subi	r30, 0x1B	; 27
    47b0:	ff 4f       	sbci	r31, 0xFF	; 255
    47b2:	80 81       	ld	r24, Z
    47b4:	91 81       	ldd	r25, Z+1	; 0x01
    47b6:	01 97       	sbiw	r24, 0x01	; 1
    47b8:	11 96       	adiw	r26, 0x01	; 1
    47ba:	9c 93       	st	X, r25
    47bc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47be:	fe 01       	movw	r30, r28
    47c0:	eb 51       	subi	r30, 0x1B	; 27
    47c2:	ff 4f       	sbci	r31, 0xFF	; 255
    47c4:	80 81       	ld	r24, Z
    47c6:	91 81       	ldd	r25, Z+1	; 0x01
    47c8:	00 97       	sbiw	r24, 0x00	; 0
    47ca:	d1 f6       	brne	.-76     	; 0x4780 <main+0x295a>
    47cc:	27 c0       	rjmp	.+78     	; 0x481c <main+0x29f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47ce:	8e 01       	movw	r16, r28
    47d0:	0b 51       	subi	r16, 0x1B	; 27
    47d2:	1f 4f       	sbci	r17, 0xFF	; 255
    47d4:	fe 01       	movw	r30, r28
    47d6:	e9 51       	subi	r30, 0x19	; 25
    47d8:	ff 4f       	sbci	r31, 0xFF	; 255
    47da:	60 81       	ld	r22, Z
    47dc:	71 81       	ldd	r23, Z+1	; 0x01
    47de:	82 81       	ldd	r24, Z+2	; 0x02
    47e0:	93 81       	ldd	r25, Z+3	; 0x03
    47e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47e6:	dc 01       	movw	r26, r24
    47e8:	cb 01       	movw	r24, r22
    47ea:	f8 01       	movw	r30, r16
    47ec:	91 83       	std	Z+1, r25	; 0x01
    47ee:	80 83       	st	Z, r24
    47f0:	de 01       	movw	r26, r28
    47f2:	af 51       	subi	r26, 0x1F	; 31
    47f4:	bf 4f       	sbci	r27, 0xFF	; 255
    47f6:	fe 01       	movw	r30, r28
    47f8:	eb 51       	subi	r30, 0x1B	; 27
    47fa:	ff 4f       	sbci	r31, 0xFF	; 255
    47fc:	80 81       	ld	r24, Z
    47fe:	91 81       	ldd	r25, Z+1	; 0x01
    4800:	8d 93       	st	X+, r24
    4802:	9c 93       	st	X, r25
    4804:	fe 01       	movw	r30, r28
    4806:	ef 51       	subi	r30, 0x1F	; 31
    4808:	ff 4f       	sbci	r31, 0xFF	; 255
    480a:	80 81       	ld	r24, Z
    480c:	91 81       	ldd	r25, Z+1	; 0x01
    480e:	01 97       	sbiw	r24, 0x01	; 1
    4810:	f1 f7       	brne	.-4      	; 0x480e <main+0x29e8>
    4812:	fe 01       	movw	r30, r28
    4814:	ef 51       	subi	r30, 0x1F	; 31
    4816:	ff 4f       	sbci	r31, 0xFF	; 255
    4818:	91 83       	std	Z+1, r25	; 0x01
    481a:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Binary Counter..");
    481c:	8c ea       	ldi	r24, 0xAC	; 172
    481e:	90 e0       	ldi	r25, 0x00	; 0
    4820:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    4824:	80 e0       	ldi	r24, 0x00	; 0
    4826:	61 e0       	ldi	r22, 0x01	; 1
    4828:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    482c:	fe 01       	movw	r30, r28
    482e:	e3 52       	subi	r30, 0x23	; 35
    4830:	ff 4f       	sbci	r31, 0xFF	; 255
    4832:	80 e0       	ldi	r24, 0x00	; 0
    4834:	90 e0       	ldi	r25, 0x00	; 0
    4836:	a0 e8       	ldi	r26, 0x80	; 128
    4838:	bf e3       	ldi	r27, 0x3F	; 63
    483a:	80 83       	st	Z, r24
    483c:	91 83       	std	Z+1, r25	; 0x01
    483e:	a2 83       	std	Z+2, r26	; 0x02
    4840:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4842:	8e 01       	movw	r16, r28
    4844:	07 52       	subi	r16, 0x27	; 39
    4846:	1f 4f       	sbci	r17, 0xFF	; 255
    4848:	fe 01       	movw	r30, r28
    484a:	e3 52       	subi	r30, 0x23	; 35
    484c:	ff 4f       	sbci	r31, 0xFF	; 255
    484e:	60 81       	ld	r22, Z
    4850:	71 81       	ldd	r23, Z+1	; 0x01
    4852:	82 81       	ldd	r24, Z+2	; 0x02
    4854:	93 81       	ldd	r25, Z+3	; 0x03
    4856:	20 e0       	ldi	r18, 0x00	; 0
    4858:	30 e0       	ldi	r19, 0x00	; 0
    485a:	4a ef       	ldi	r20, 0xFA	; 250
    485c:	54 e4       	ldi	r21, 0x44	; 68
    485e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4862:	dc 01       	movw	r26, r24
    4864:	cb 01       	movw	r24, r22
    4866:	f8 01       	movw	r30, r16
    4868:	80 83       	st	Z, r24
    486a:	91 83       	std	Z+1, r25	; 0x01
    486c:	a2 83       	std	Z+2, r26	; 0x02
    486e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4870:	fe 01       	movw	r30, r28
    4872:	e7 52       	subi	r30, 0x27	; 39
    4874:	ff 4f       	sbci	r31, 0xFF	; 255
    4876:	60 81       	ld	r22, Z
    4878:	71 81       	ldd	r23, Z+1	; 0x01
    487a:	82 81       	ldd	r24, Z+2	; 0x02
    487c:	93 81       	ldd	r25, Z+3	; 0x03
    487e:	20 e0       	ldi	r18, 0x00	; 0
    4880:	30 e0       	ldi	r19, 0x00	; 0
    4882:	40 e8       	ldi	r20, 0x80	; 128
    4884:	5f e3       	ldi	r21, 0x3F	; 63
    4886:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    488a:	88 23       	and	r24, r24
    488c:	44 f4       	brge	.+16     	; 0x489e <main+0x2a78>
		__ticks = 1;
    488e:	fe 01       	movw	r30, r28
    4890:	e9 52       	subi	r30, 0x29	; 41
    4892:	ff 4f       	sbci	r31, 0xFF	; 255
    4894:	81 e0       	ldi	r24, 0x01	; 1
    4896:	90 e0       	ldi	r25, 0x00	; 0
    4898:	91 83       	std	Z+1, r25	; 0x01
    489a:	80 83       	st	Z, r24
    489c:	64 c0       	rjmp	.+200    	; 0x4966 <main+0x2b40>
	else if (__tmp > 65535)
    489e:	fe 01       	movw	r30, r28
    48a0:	e7 52       	subi	r30, 0x27	; 39
    48a2:	ff 4f       	sbci	r31, 0xFF	; 255
    48a4:	60 81       	ld	r22, Z
    48a6:	71 81       	ldd	r23, Z+1	; 0x01
    48a8:	82 81       	ldd	r24, Z+2	; 0x02
    48aa:	93 81       	ldd	r25, Z+3	; 0x03
    48ac:	20 e0       	ldi	r18, 0x00	; 0
    48ae:	3f ef       	ldi	r19, 0xFF	; 255
    48b0:	4f e7       	ldi	r20, 0x7F	; 127
    48b2:	57 e4       	ldi	r21, 0x47	; 71
    48b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    48b8:	18 16       	cp	r1, r24
    48ba:	0c f0       	brlt	.+2      	; 0x48be <main+0x2a98>
    48bc:	43 c0       	rjmp	.+134    	; 0x4944 <main+0x2b1e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48be:	fe 01       	movw	r30, r28
    48c0:	e3 52       	subi	r30, 0x23	; 35
    48c2:	ff 4f       	sbci	r31, 0xFF	; 255
    48c4:	60 81       	ld	r22, Z
    48c6:	71 81       	ldd	r23, Z+1	; 0x01
    48c8:	82 81       	ldd	r24, Z+2	; 0x02
    48ca:	93 81       	ldd	r25, Z+3	; 0x03
    48cc:	20 e0       	ldi	r18, 0x00	; 0
    48ce:	30 e0       	ldi	r19, 0x00	; 0
    48d0:	40 e2       	ldi	r20, 0x20	; 32
    48d2:	51 e4       	ldi	r21, 0x41	; 65
    48d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48d8:	dc 01       	movw	r26, r24
    48da:	cb 01       	movw	r24, r22
    48dc:	8e 01       	movw	r16, r28
    48de:	09 52       	subi	r16, 0x29	; 41
    48e0:	1f 4f       	sbci	r17, 0xFF	; 255
    48e2:	bc 01       	movw	r22, r24
    48e4:	cd 01       	movw	r24, r26
    48e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48ea:	dc 01       	movw	r26, r24
    48ec:	cb 01       	movw	r24, r22
    48ee:	f8 01       	movw	r30, r16
    48f0:	91 83       	std	Z+1, r25	; 0x01
    48f2:	80 83       	st	Z, r24
    48f4:	1f c0       	rjmp	.+62     	; 0x4934 <main+0x2b0e>
    48f6:	fe 01       	movw	r30, r28
    48f8:	eb 52       	subi	r30, 0x2B	; 43
    48fa:	ff 4f       	sbci	r31, 0xFF	; 255
    48fc:	88 ec       	ldi	r24, 0xC8	; 200
    48fe:	90 e0       	ldi	r25, 0x00	; 0
    4900:	91 83       	std	Z+1, r25	; 0x01
    4902:	80 83       	st	Z, r24
    4904:	fe 01       	movw	r30, r28
    4906:	eb 52       	subi	r30, 0x2B	; 43
    4908:	ff 4f       	sbci	r31, 0xFF	; 255
    490a:	80 81       	ld	r24, Z
    490c:	91 81       	ldd	r25, Z+1	; 0x01
    490e:	01 97       	sbiw	r24, 0x01	; 1
    4910:	f1 f7       	brne	.-4      	; 0x490e <main+0x2ae8>
    4912:	fe 01       	movw	r30, r28
    4914:	eb 52       	subi	r30, 0x2B	; 43
    4916:	ff 4f       	sbci	r31, 0xFF	; 255
    4918:	91 83       	std	Z+1, r25	; 0x01
    491a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    491c:	de 01       	movw	r26, r28
    491e:	a9 52       	subi	r26, 0x29	; 41
    4920:	bf 4f       	sbci	r27, 0xFF	; 255
    4922:	fe 01       	movw	r30, r28
    4924:	e9 52       	subi	r30, 0x29	; 41
    4926:	ff 4f       	sbci	r31, 0xFF	; 255
    4928:	80 81       	ld	r24, Z
    492a:	91 81       	ldd	r25, Z+1	; 0x01
    492c:	01 97       	sbiw	r24, 0x01	; 1
    492e:	11 96       	adiw	r26, 0x01	; 1
    4930:	9c 93       	st	X, r25
    4932:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4934:	fe 01       	movw	r30, r28
    4936:	e9 52       	subi	r30, 0x29	; 41
    4938:	ff 4f       	sbci	r31, 0xFF	; 255
    493a:	80 81       	ld	r24, Z
    493c:	91 81       	ldd	r25, Z+1	; 0x01
    493e:	00 97       	sbiw	r24, 0x00	; 0
    4940:	d1 f6       	brne	.-76     	; 0x48f6 <main+0x2ad0>
    4942:	27 c0       	rjmp	.+78     	; 0x4992 <main+0x2b6c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4944:	8e 01       	movw	r16, r28
    4946:	09 52       	subi	r16, 0x29	; 41
    4948:	1f 4f       	sbci	r17, 0xFF	; 255
    494a:	fe 01       	movw	r30, r28
    494c:	e7 52       	subi	r30, 0x27	; 39
    494e:	ff 4f       	sbci	r31, 0xFF	; 255
    4950:	60 81       	ld	r22, Z
    4952:	71 81       	ldd	r23, Z+1	; 0x01
    4954:	82 81       	ldd	r24, Z+2	; 0x02
    4956:	93 81       	ldd	r25, Z+3	; 0x03
    4958:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    495c:	dc 01       	movw	r26, r24
    495e:	cb 01       	movw	r24, r22
    4960:	f8 01       	movw	r30, r16
    4962:	91 83       	std	Z+1, r25	; 0x01
    4964:	80 83       	st	Z, r24
    4966:	de 01       	movw	r26, r28
    4968:	ad 52       	subi	r26, 0x2D	; 45
    496a:	bf 4f       	sbci	r27, 0xFF	; 255
    496c:	fe 01       	movw	r30, r28
    496e:	e9 52       	subi	r30, 0x29	; 41
    4970:	ff 4f       	sbci	r31, 0xFF	; 255
    4972:	80 81       	ld	r24, Z
    4974:	91 81       	ldd	r25, Z+1	; 0x01
    4976:	8d 93       	st	X+, r24
    4978:	9c 93       	st	X, r25
    497a:	fe 01       	movw	r30, r28
    497c:	ed 52       	subi	r30, 0x2D	; 45
    497e:	ff 4f       	sbci	r31, 0xFF	; 255
    4980:	80 81       	ld	r24, Z
    4982:	91 81       	ldd	r25, Z+1	; 0x01
    4984:	01 97       	sbiw	r24, 0x01	; 1
    4986:	f1 f7       	brne	.-4      	; 0x4984 <main+0x2b5e>
    4988:	fe 01       	movw	r30, r28
    498a:	ed 52       	subi	r30, 0x2D	; 45
    498c:	ff 4f       	sbci	r31, 0xFF	; 255
    498e:	91 83       	std	Z+1, r25	; 0x01
    4990:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    4992:	8b e6       	ldi	r24, 0x6B	; 107
    4994:	90 e0       	ldi	r25, 0x00	; 0
    4996:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    499a:	8c c1       	rjmp	.+792    	; 0x4cb4 <main+0x2e8e>
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<256 ;i++){
    499c:	fe 01       	movw	r30, r28
    499e:	e3 5a       	subi	r30, 0xA3	; 163
    49a0:	fd 4f       	sbci	r31, 0xFD	; 253
    49a2:	10 82       	st	Z, r1
						Copy_u8KpdValue=KPD_u8GetKeyState();
    49a4:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    49a8:	fe 01       	movw	r30, r28
    49aa:	ed 59       	subi	r30, 0x9D	; 157
    49ac:	fd 4f       	sbci	r31, 0xFD	; 253
    49ae:	80 83       	st	Z, r24
						if(Copy_u8KpdValue==13) break;
    49b0:	fe 01       	movw	r30, r28
    49b2:	ed 59       	subi	r30, 0x9D	; 157
    49b4:	fd 4f       	sbci	r31, 0xFD	; 253
    49b6:	80 81       	ld	r24, Z
    49b8:	8d 30       	cpi	r24, 0x0D	; 13
    49ba:	09 f4       	brne	.+2      	; 0x49be <main+0x2b98>
    49bc:	7b c1       	rjmp	.+758    	; 0x4cb4 <main+0x2e8e>
						LED_voidtControlAllLeds(PORT_u8B,i);
    49be:	fe 01       	movw	r30, r28
    49c0:	e3 5a       	subi	r30, 0xA3	; 163
    49c2:	fd 4f       	sbci	r31, 0xFD	; 253
    49c4:	82 e0       	ldi	r24, 0x02	; 2
    49c6:	60 81       	ld	r22, Z
    49c8:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
    49cc:	fe 01       	movw	r30, r28
    49ce:	e1 53       	subi	r30, 0x31	; 49
    49d0:	ff 4f       	sbci	r31, 0xFF	; 255
    49d2:	80 e0       	ldi	r24, 0x00	; 0
    49d4:	90 e0       	ldi	r25, 0x00	; 0
    49d6:	a8 e4       	ldi	r26, 0x48	; 72
    49d8:	b4 e4       	ldi	r27, 0x44	; 68
    49da:	80 83       	st	Z, r24
    49dc:	91 83       	std	Z+1, r25	; 0x01
    49de:	a2 83       	std	Z+2, r26	; 0x02
    49e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49e2:	8e 01       	movw	r16, r28
    49e4:	05 53       	subi	r16, 0x35	; 53
    49e6:	1f 4f       	sbci	r17, 0xFF	; 255
    49e8:	fe 01       	movw	r30, r28
    49ea:	e1 53       	subi	r30, 0x31	; 49
    49ec:	ff 4f       	sbci	r31, 0xFF	; 255
    49ee:	60 81       	ld	r22, Z
    49f0:	71 81       	ldd	r23, Z+1	; 0x01
    49f2:	82 81       	ldd	r24, Z+2	; 0x02
    49f4:	93 81       	ldd	r25, Z+3	; 0x03
    49f6:	20 e0       	ldi	r18, 0x00	; 0
    49f8:	30 e0       	ldi	r19, 0x00	; 0
    49fa:	4a ef       	ldi	r20, 0xFA	; 250
    49fc:	54 e4       	ldi	r21, 0x44	; 68
    49fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a02:	dc 01       	movw	r26, r24
    4a04:	cb 01       	movw	r24, r22
    4a06:	f8 01       	movw	r30, r16
    4a08:	80 83       	st	Z, r24
    4a0a:	91 83       	std	Z+1, r25	; 0x01
    4a0c:	a2 83       	std	Z+2, r26	; 0x02
    4a0e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a10:	fe 01       	movw	r30, r28
    4a12:	e5 53       	subi	r30, 0x35	; 53
    4a14:	ff 4f       	sbci	r31, 0xFF	; 255
    4a16:	60 81       	ld	r22, Z
    4a18:	71 81       	ldd	r23, Z+1	; 0x01
    4a1a:	82 81       	ldd	r24, Z+2	; 0x02
    4a1c:	93 81       	ldd	r25, Z+3	; 0x03
    4a1e:	20 e0       	ldi	r18, 0x00	; 0
    4a20:	30 e0       	ldi	r19, 0x00	; 0
    4a22:	40 e8       	ldi	r20, 0x80	; 128
    4a24:	5f e3       	ldi	r21, 0x3F	; 63
    4a26:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4a2a:	88 23       	and	r24, r24
    4a2c:	44 f4       	brge	.+16     	; 0x4a3e <main+0x2c18>
		__ticks = 1;
    4a2e:	fe 01       	movw	r30, r28
    4a30:	e7 53       	subi	r30, 0x37	; 55
    4a32:	ff 4f       	sbci	r31, 0xFF	; 255
    4a34:	81 e0       	ldi	r24, 0x01	; 1
    4a36:	90 e0       	ldi	r25, 0x00	; 0
    4a38:	91 83       	std	Z+1, r25	; 0x01
    4a3a:	80 83       	st	Z, r24
    4a3c:	64 c0       	rjmp	.+200    	; 0x4b06 <main+0x2ce0>
	else if (__tmp > 65535)
    4a3e:	fe 01       	movw	r30, r28
    4a40:	e5 53       	subi	r30, 0x35	; 53
    4a42:	ff 4f       	sbci	r31, 0xFF	; 255
    4a44:	60 81       	ld	r22, Z
    4a46:	71 81       	ldd	r23, Z+1	; 0x01
    4a48:	82 81       	ldd	r24, Z+2	; 0x02
    4a4a:	93 81       	ldd	r25, Z+3	; 0x03
    4a4c:	20 e0       	ldi	r18, 0x00	; 0
    4a4e:	3f ef       	ldi	r19, 0xFF	; 255
    4a50:	4f e7       	ldi	r20, 0x7F	; 127
    4a52:	57 e4       	ldi	r21, 0x47	; 71
    4a54:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4a58:	18 16       	cp	r1, r24
    4a5a:	0c f0       	brlt	.+2      	; 0x4a5e <main+0x2c38>
    4a5c:	43 c0       	rjmp	.+134    	; 0x4ae4 <main+0x2cbe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a5e:	fe 01       	movw	r30, r28
    4a60:	e1 53       	subi	r30, 0x31	; 49
    4a62:	ff 4f       	sbci	r31, 0xFF	; 255
    4a64:	60 81       	ld	r22, Z
    4a66:	71 81       	ldd	r23, Z+1	; 0x01
    4a68:	82 81       	ldd	r24, Z+2	; 0x02
    4a6a:	93 81       	ldd	r25, Z+3	; 0x03
    4a6c:	20 e0       	ldi	r18, 0x00	; 0
    4a6e:	30 e0       	ldi	r19, 0x00	; 0
    4a70:	40 e2       	ldi	r20, 0x20	; 32
    4a72:	51 e4       	ldi	r21, 0x41	; 65
    4a74:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a78:	dc 01       	movw	r26, r24
    4a7a:	cb 01       	movw	r24, r22
    4a7c:	8e 01       	movw	r16, r28
    4a7e:	07 53       	subi	r16, 0x37	; 55
    4a80:	1f 4f       	sbci	r17, 0xFF	; 255
    4a82:	bc 01       	movw	r22, r24
    4a84:	cd 01       	movw	r24, r26
    4a86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a8a:	dc 01       	movw	r26, r24
    4a8c:	cb 01       	movw	r24, r22
    4a8e:	f8 01       	movw	r30, r16
    4a90:	91 83       	std	Z+1, r25	; 0x01
    4a92:	80 83       	st	Z, r24
    4a94:	1f c0       	rjmp	.+62     	; 0x4ad4 <main+0x2cae>
    4a96:	fe 01       	movw	r30, r28
    4a98:	e9 53       	subi	r30, 0x39	; 57
    4a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    4a9c:	88 ec       	ldi	r24, 0xC8	; 200
    4a9e:	90 e0       	ldi	r25, 0x00	; 0
    4aa0:	91 83       	std	Z+1, r25	; 0x01
    4aa2:	80 83       	st	Z, r24
    4aa4:	fe 01       	movw	r30, r28
    4aa6:	e9 53       	subi	r30, 0x39	; 57
    4aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    4aaa:	80 81       	ld	r24, Z
    4aac:	91 81       	ldd	r25, Z+1	; 0x01
    4aae:	01 97       	sbiw	r24, 0x01	; 1
    4ab0:	f1 f7       	brne	.-4      	; 0x4aae <main+0x2c88>
    4ab2:	fe 01       	movw	r30, r28
    4ab4:	e9 53       	subi	r30, 0x39	; 57
    4ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ab8:	91 83       	std	Z+1, r25	; 0x01
    4aba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4abc:	de 01       	movw	r26, r28
    4abe:	a7 53       	subi	r26, 0x37	; 55
    4ac0:	bf 4f       	sbci	r27, 0xFF	; 255
    4ac2:	fe 01       	movw	r30, r28
    4ac4:	e7 53       	subi	r30, 0x37	; 55
    4ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ac8:	80 81       	ld	r24, Z
    4aca:	91 81       	ldd	r25, Z+1	; 0x01
    4acc:	01 97       	sbiw	r24, 0x01	; 1
    4ace:	11 96       	adiw	r26, 0x01	; 1
    4ad0:	9c 93       	st	X, r25
    4ad2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ad4:	fe 01       	movw	r30, r28
    4ad6:	e7 53       	subi	r30, 0x37	; 55
    4ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    4ada:	80 81       	ld	r24, Z
    4adc:	91 81       	ldd	r25, Z+1	; 0x01
    4ade:	00 97       	sbiw	r24, 0x00	; 0
    4ae0:	d1 f6       	brne	.-76     	; 0x4a96 <main+0x2c70>
    4ae2:	27 c0       	rjmp	.+78     	; 0x4b32 <main+0x2d0c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ae4:	8e 01       	movw	r16, r28
    4ae6:	07 53       	subi	r16, 0x37	; 55
    4ae8:	1f 4f       	sbci	r17, 0xFF	; 255
    4aea:	fe 01       	movw	r30, r28
    4aec:	e5 53       	subi	r30, 0x35	; 53
    4aee:	ff 4f       	sbci	r31, 0xFF	; 255
    4af0:	60 81       	ld	r22, Z
    4af2:	71 81       	ldd	r23, Z+1	; 0x01
    4af4:	82 81       	ldd	r24, Z+2	; 0x02
    4af6:	93 81       	ldd	r25, Z+3	; 0x03
    4af8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4afc:	dc 01       	movw	r26, r24
    4afe:	cb 01       	movw	r24, r22
    4b00:	f8 01       	movw	r30, r16
    4b02:	91 83       	std	Z+1, r25	; 0x01
    4b04:	80 83       	st	Z, r24
    4b06:	de 01       	movw	r26, r28
    4b08:	ab 53       	subi	r26, 0x3B	; 59
    4b0a:	bf 4f       	sbci	r27, 0xFF	; 255
    4b0c:	fe 01       	movw	r30, r28
    4b0e:	e7 53       	subi	r30, 0x37	; 55
    4b10:	ff 4f       	sbci	r31, 0xFF	; 255
    4b12:	80 81       	ld	r24, Z
    4b14:	91 81       	ldd	r25, Z+1	; 0x01
    4b16:	8d 93       	st	X+, r24
    4b18:	9c 93       	st	X, r25
    4b1a:	fe 01       	movw	r30, r28
    4b1c:	eb 53       	subi	r30, 0x3B	; 59
    4b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b20:	80 81       	ld	r24, Z
    4b22:	91 81       	ldd	r25, Z+1	; 0x01
    4b24:	01 97       	sbiw	r24, 0x01	; 1
    4b26:	f1 f7       	brne	.-4      	; 0x4b24 <main+0x2cfe>
    4b28:	fe 01       	movw	r30, r28
    4b2a:	eb 53       	subi	r30, 0x3B	; 59
    4b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b2e:	91 83       	std	Z+1, r25	; 0x01
    4b30:	80 83       	st	Z, r24
						_delay_ms(800);
						LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    4b32:	82 e0       	ldi	r24, 0x02	; 2
    4b34:	60 e0       	ldi	r22, 0x00	; 0
    4b36:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
    4b3a:	fe 01       	movw	r30, r28
    4b3c:	ef 53       	subi	r30, 0x3F	; 63
    4b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b40:	80 e0       	ldi	r24, 0x00	; 0
    4b42:	90 e0       	ldi	r25, 0x00	; 0
    4b44:	a8 ec       	ldi	r26, 0xC8	; 200
    4b46:	b2 e4       	ldi	r27, 0x42	; 66
    4b48:	80 83       	st	Z, r24
    4b4a:	91 83       	std	Z+1, r25	; 0x01
    4b4c:	a2 83       	std	Z+2, r26	; 0x02
    4b4e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b50:	8e 01       	movw	r16, r28
    4b52:	03 54       	subi	r16, 0x43	; 67
    4b54:	1f 4f       	sbci	r17, 0xFF	; 255
    4b56:	fe 01       	movw	r30, r28
    4b58:	ef 53       	subi	r30, 0x3F	; 63
    4b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b5c:	60 81       	ld	r22, Z
    4b5e:	71 81       	ldd	r23, Z+1	; 0x01
    4b60:	82 81       	ldd	r24, Z+2	; 0x02
    4b62:	93 81       	ldd	r25, Z+3	; 0x03
    4b64:	20 e0       	ldi	r18, 0x00	; 0
    4b66:	30 e0       	ldi	r19, 0x00	; 0
    4b68:	4a ef       	ldi	r20, 0xFA	; 250
    4b6a:	54 e4       	ldi	r21, 0x44	; 68
    4b6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b70:	dc 01       	movw	r26, r24
    4b72:	cb 01       	movw	r24, r22
    4b74:	f8 01       	movw	r30, r16
    4b76:	80 83       	st	Z, r24
    4b78:	91 83       	std	Z+1, r25	; 0x01
    4b7a:	a2 83       	std	Z+2, r26	; 0x02
    4b7c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b7e:	fe 01       	movw	r30, r28
    4b80:	e3 54       	subi	r30, 0x43	; 67
    4b82:	ff 4f       	sbci	r31, 0xFF	; 255
    4b84:	60 81       	ld	r22, Z
    4b86:	71 81       	ldd	r23, Z+1	; 0x01
    4b88:	82 81       	ldd	r24, Z+2	; 0x02
    4b8a:	93 81       	ldd	r25, Z+3	; 0x03
    4b8c:	20 e0       	ldi	r18, 0x00	; 0
    4b8e:	30 e0       	ldi	r19, 0x00	; 0
    4b90:	40 e8       	ldi	r20, 0x80	; 128
    4b92:	5f e3       	ldi	r21, 0x3F	; 63
    4b94:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4b98:	88 23       	and	r24, r24
    4b9a:	44 f4       	brge	.+16     	; 0x4bac <main+0x2d86>
		__ticks = 1;
    4b9c:	fe 01       	movw	r30, r28
    4b9e:	e5 54       	subi	r30, 0x45	; 69
    4ba0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ba2:	81 e0       	ldi	r24, 0x01	; 1
    4ba4:	90 e0       	ldi	r25, 0x00	; 0
    4ba6:	91 83       	std	Z+1, r25	; 0x01
    4ba8:	80 83       	st	Z, r24
    4baa:	64 c0       	rjmp	.+200    	; 0x4c74 <main+0x2e4e>
	else if (__tmp > 65535)
    4bac:	fe 01       	movw	r30, r28
    4bae:	e3 54       	subi	r30, 0x43	; 67
    4bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    4bb2:	60 81       	ld	r22, Z
    4bb4:	71 81       	ldd	r23, Z+1	; 0x01
    4bb6:	82 81       	ldd	r24, Z+2	; 0x02
    4bb8:	93 81       	ldd	r25, Z+3	; 0x03
    4bba:	20 e0       	ldi	r18, 0x00	; 0
    4bbc:	3f ef       	ldi	r19, 0xFF	; 255
    4bbe:	4f e7       	ldi	r20, 0x7F	; 127
    4bc0:	57 e4       	ldi	r21, 0x47	; 71
    4bc2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4bc6:	18 16       	cp	r1, r24
    4bc8:	0c f0       	brlt	.+2      	; 0x4bcc <main+0x2da6>
    4bca:	43 c0       	rjmp	.+134    	; 0x4c52 <main+0x2e2c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bcc:	fe 01       	movw	r30, r28
    4bce:	ef 53       	subi	r30, 0x3F	; 63
    4bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    4bd2:	60 81       	ld	r22, Z
    4bd4:	71 81       	ldd	r23, Z+1	; 0x01
    4bd6:	82 81       	ldd	r24, Z+2	; 0x02
    4bd8:	93 81       	ldd	r25, Z+3	; 0x03
    4bda:	20 e0       	ldi	r18, 0x00	; 0
    4bdc:	30 e0       	ldi	r19, 0x00	; 0
    4bde:	40 e2       	ldi	r20, 0x20	; 32
    4be0:	51 e4       	ldi	r21, 0x41	; 65
    4be2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4be6:	dc 01       	movw	r26, r24
    4be8:	cb 01       	movw	r24, r22
    4bea:	8e 01       	movw	r16, r28
    4bec:	05 54       	subi	r16, 0x45	; 69
    4bee:	1f 4f       	sbci	r17, 0xFF	; 255
    4bf0:	bc 01       	movw	r22, r24
    4bf2:	cd 01       	movw	r24, r26
    4bf4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4bf8:	dc 01       	movw	r26, r24
    4bfa:	cb 01       	movw	r24, r22
    4bfc:	f8 01       	movw	r30, r16
    4bfe:	91 83       	std	Z+1, r25	; 0x01
    4c00:	80 83       	st	Z, r24
    4c02:	1f c0       	rjmp	.+62     	; 0x4c42 <main+0x2e1c>
    4c04:	fe 01       	movw	r30, r28
    4c06:	e7 54       	subi	r30, 0x47	; 71
    4c08:	ff 4f       	sbci	r31, 0xFF	; 255
    4c0a:	88 ec       	ldi	r24, 0xC8	; 200
    4c0c:	90 e0       	ldi	r25, 0x00	; 0
    4c0e:	91 83       	std	Z+1, r25	; 0x01
    4c10:	80 83       	st	Z, r24
    4c12:	fe 01       	movw	r30, r28
    4c14:	e7 54       	subi	r30, 0x47	; 71
    4c16:	ff 4f       	sbci	r31, 0xFF	; 255
    4c18:	80 81       	ld	r24, Z
    4c1a:	91 81       	ldd	r25, Z+1	; 0x01
    4c1c:	01 97       	sbiw	r24, 0x01	; 1
    4c1e:	f1 f7       	brne	.-4      	; 0x4c1c <main+0x2df6>
    4c20:	fe 01       	movw	r30, r28
    4c22:	e7 54       	subi	r30, 0x47	; 71
    4c24:	ff 4f       	sbci	r31, 0xFF	; 255
    4c26:	91 83       	std	Z+1, r25	; 0x01
    4c28:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c2a:	de 01       	movw	r26, r28
    4c2c:	a5 54       	subi	r26, 0x45	; 69
    4c2e:	bf 4f       	sbci	r27, 0xFF	; 255
    4c30:	fe 01       	movw	r30, r28
    4c32:	e5 54       	subi	r30, 0x45	; 69
    4c34:	ff 4f       	sbci	r31, 0xFF	; 255
    4c36:	80 81       	ld	r24, Z
    4c38:	91 81       	ldd	r25, Z+1	; 0x01
    4c3a:	01 97       	sbiw	r24, 0x01	; 1
    4c3c:	11 96       	adiw	r26, 0x01	; 1
    4c3e:	9c 93       	st	X, r25
    4c40:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c42:	fe 01       	movw	r30, r28
    4c44:	e5 54       	subi	r30, 0x45	; 69
    4c46:	ff 4f       	sbci	r31, 0xFF	; 255
    4c48:	80 81       	ld	r24, Z
    4c4a:	91 81       	ldd	r25, Z+1	; 0x01
    4c4c:	00 97       	sbiw	r24, 0x00	; 0
    4c4e:	d1 f6       	brne	.-76     	; 0x4c04 <main+0x2dde>
    4c50:	27 c0       	rjmp	.+78     	; 0x4ca0 <main+0x2e7a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c52:	8e 01       	movw	r16, r28
    4c54:	05 54       	subi	r16, 0x45	; 69
    4c56:	1f 4f       	sbci	r17, 0xFF	; 255
    4c58:	fe 01       	movw	r30, r28
    4c5a:	e3 54       	subi	r30, 0x43	; 67
    4c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c5e:	60 81       	ld	r22, Z
    4c60:	71 81       	ldd	r23, Z+1	; 0x01
    4c62:	82 81       	ldd	r24, Z+2	; 0x02
    4c64:	93 81       	ldd	r25, Z+3	; 0x03
    4c66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c6a:	dc 01       	movw	r26, r24
    4c6c:	cb 01       	movw	r24, r22
    4c6e:	f8 01       	movw	r30, r16
    4c70:	91 83       	std	Z+1, r25	; 0x01
    4c72:	80 83       	st	Z, r24
    4c74:	de 01       	movw	r26, r28
    4c76:	a9 54       	subi	r26, 0x49	; 73
    4c78:	bf 4f       	sbci	r27, 0xFF	; 255
    4c7a:	fe 01       	movw	r30, r28
    4c7c:	e5 54       	subi	r30, 0x45	; 69
    4c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c80:	80 81       	ld	r24, Z
    4c82:	91 81       	ldd	r25, Z+1	; 0x01
    4c84:	8d 93       	st	X+, r24
    4c86:	9c 93       	st	X, r25
    4c88:	fe 01       	movw	r30, r28
    4c8a:	e9 54       	subi	r30, 0x49	; 73
    4c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c8e:	80 81       	ld	r24, Z
    4c90:	91 81       	ldd	r25, Z+1	; 0x01
    4c92:	01 97       	sbiw	r24, 0x01	; 1
    4c94:	f1 f7       	brne	.-4      	; 0x4c92 <main+0x2e6c>
    4c96:	fe 01       	movw	r30, r28
    4c98:	e9 54       	subi	r30, 0x49	; 73
    4c9a:	ff 4f       	sbci	r31, 0xFF	; 255
    4c9c:	91 83       	std	Z+1, r25	; 0x01
    4c9e:	80 83       	st	Z, r24
				CLCD_voidSendString("Binary Counter..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<256 ;i++){
    4ca0:	de 01       	movw	r26, r28
    4ca2:	a3 5a       	subi	r26, 0xA3	; 163
    4ca4:	bd 4f       	sbci	r27, 0xFD	; 253
    4ca6:	fe 01       	movw	r30, r28
    4ca8:	e3 5a       	subi	r30, 0xA3	; 163
    4caa:	fd 4f       	sbci	r31, 0xFD	; 253
    4cac:	80 81       	ld	r24, Z
    4cae:	8f 5f       	subi	r24, 0xFF	; 255
    4cb0:	8c 93       	st	X, r24
    4cb2:	78 ce       	rjmp	.-784    	; 0x49a4 <main+0x2b7e>
				_delay_ms(1);
				CLCD_voidSendString("Binary Counter..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
    4cb4:	fe 01       	movw	r30, r28
    4cb6:	ed 59       	subi	r30, 0x9D	; 157
    4cb8:	fd 4f       	sbci	r31, 0xFD	; 253
    4cba:	80 81       	ld	r24, Z
    4cbc:	8d 30       	cpi	r24, 0x0D	; 13
    4cbe:	09 f0       	breq	.+2      	; 0x4cc2 <main+0x2e9c>
    4cc0:	6d ce       	rjmp	.-806    	; 0x499c <main+0x2b76>
						_delay_ms(800);
						LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
						_delay_ms(100);
					}
				}
				LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    4cc2:	82 e0       	ldi	r24, 0x02	; 2
    4cc4:	60 e0       	ldi	r22, 0x00	; 0
    4cc6:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
				CLCD_voidClearDisplay();
    4cca:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    4cce:	fe 01       	movw	r30, r28
    4cd0:	ed 54       	subi	r30, 0x4D	; 77
    4cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    4cd4:	80 e0       	ldi	r24, 0x00	; 0
    4cd6:	90 e0       	ldi	r25, 0x00	; 0
    4cd8:	a0 e8       	ldi	r26, 0x80	; 128
    4cda:	bf e3       	ldi	r27, 0x3F	; 63
    4cdc:	80 83       	st	Z, r24
    4cde:	91 83       	std	Z+1, r25	; 0x01
    4ce0:	a2 83       	std	Z+2, r26	; 0x02
    4ce2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ce4:	8e 01       	movw	r16, r28
    4ce6:	01 55       	subi	r16, 0x51	; 81
    4ce8:	1f 4f       	sbci	r17, 0xFF	; 255
    4cea:	fe 01       	movw	r30, r28
    4cec:	ed 54       	subi	r30, 0x4D	; 77
    4cee:	ff 4f       	sbci	r31, 0xFF	; 255
    4cf0:	60 81       	ld	r22, Z
    4cf2:	71 81       	ldd	r23, Z+1	; 0x01
    4cf4:	82 81       	ldd	r24, Z+2	; 0x02
    4cf6:	93 81       	ldd	r25, Z+3	; 0x03
    4cf8:	20 e0       	ldi	r18, 0x00	; 0
    4cfa:	30 e0       	ldi	r19, 0x00	; 0
    4cfc:	4a ef       	ldi	r20, 0xFA	; 250
    4cfe:	54 e4       	ldi	r21, 0x44	; 68
    4d00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d04:	dc 01       	movw	r26, r24
    4d06:	cb 01       	movw	r24, r22
    4d08:	f8 01       	movw	r30, r16
    4d0a:	80 83       	st	Z, r24
    4d0c:	91 83       	std	Z+1, r25	; 0x01
    4d0e:	a2 83       	std	Z+2, r26	; 0x02
    4d10:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4d12:	fe 01       	movw	r30, r28
    4d14:	e1 55       	subi	r30, 0x51	; 81
    4d16:	ff 4f       	sbci	r31, 0xFF	; 255
    4d18:	60 81       	ld	r22, Z
    4d1a:	71 81       	ldd	r23, Z+1	; 0x01
    4d1c:	82 81       	ldd	r24, Z+2	; 0x02
    4d1e:	93 81       	ldd	r25, Z+3	; 0x03
    4d20:	20 e0       	ldi	r18, 0x00	; 0
    4d22:	30 e0       	ldi	r19, 0x00	; 0
    4d24:	40 e8       	ldi	r20, 0x80	; 128
    4d26:	5f e3       	ldi	r21, 0x3F	; 63
    4d28:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4d2c:	88 23       	and	r24, r24
    4d2e:	44 f4       	brge	.+16     	; 0x4d40 <main+0x2f1a>
		__ticks = 1;
    4d30:	fe 01       	movw	r30, r28
    4d32:	e3 55       	subi	r30, 0x53	; 83
    4d34:	ff 4f       	sbci	r31, 0xFF	; 255
    4d36:	81 e0       	ldi	r24, 0x01	; 1
    4d38:	90 e0       	ldi	r25, 0x00	; 0
    4d3a:	91 83       	std	Z+1, r25	; 0x01
    4d3c:	80 83       	st	Z, r24
    4d3e:	65 c0       	rjmp	.+202    	; 0x4e0a <main+0x2fe4>
	else if (__tmp > 65535)
    4d40:	fe 01       	movw	r30, r28
    4d42:	e1 55       	subi	r30, 0x51	; 81
    4d44:	ff 4f       	sbci	r31, 0xFF	; 255
    4d46:	60 81       	ld	r22, Z
    4d48:	71 81       	ldd	r23, Z+1	; 0x01
    4d4a:	82 81       	ldd	r24, Z+2	; 0x02
    4d4c:	93 81       	ldd	r25, Z+3	; 0x03
    4d4e:	20 e0       	ldi	r18, 0x00	; 0
    4d50:	3f ef       	ldi	r19, 0xFF	; 255
    4d52:	4f e7       	ldi	r20, 0x7F	; 127
    4d54:	57 e4       	ldi	r21, 0x47	; 71
    4d56:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4d5a:	18 16       	cp	r1, r24
    4d5c:	0c f0       	brlt	.+2      	; 0x4d60 <main+0x2f3a>
    4d5e:	44 c0       	rjmp	.+136    	; 0x4de8 <main+0x2fc2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d60:	fe 01       	movw	r30, r28
    4d62:	ed 54       	subi	r30, 0x4D	; 77
    4d64:	ff 4f       	sbci	r31, 0xFF	; 255
    4d66:	60 81       	ld	r22, Z
    4d68:	71 81       	ldd	r23, Z+1	; 0x01
    4d6a:	82 81       	ldd	r24, Z+2	; 0x02
    4d6c:	93 81       	ldd	r25, Z+3	; 0x03
    4d6e:	20 e0       	ldi	r18, 0x00	; 0
    4d70:	30 e0       	ldi	r19, 0x00	; 0
    4d72:	40 e2       	ldi	r20, 0x20	; 32
    4d74:	51 e4       	ldi	r21, 0x41	; 65
    4d76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d7a:	dc 01       	movw	r26, r24
    4d7c:	cb 01       	movw	r24, r22
    4d7e:	8e 01       	movw	r16, r28
    4d80:	03 55       	subi	r16, 0x53	; 83
    4d82:	1f 4f       	sbci	r17, 0xFF	; 255
    4d84:	bc 01       	movw	r22, r24
    4d86:	cd 01       	movw	r24, r26
    4d88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d8c:	dc 01       	movw	r26, r24
    4d8e:	cb 01       	movw	r24, r22
    4d90:	f8 01       	movw	r30, r16
    4d92:	91 83       	std	Z+1, r25	; 0x01
    4d94:	80 83       	st	Z, r24
    4d96:	1f c0       	rjmp	.+62     	; 0x4dd6 <main+0x2fb0>
    4d98:	fe 01       	movw	r30, r28
    4d9a:	e5 55       	subi	r30, 0x55	; 85
    4d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d9e:	88 ec       	ldi	r24, 0xC8	; 200
    4da0:	90 e0       	ldi	r25, 0x00	; 0
    4da2:	91 83       	std	Z+1, r25	; 0x01
    4da4:	80 83       	st	Z, r24
    4da6:	fe 01       	movw	r30, r28
    4da8:	e5 55       	subi	r30, 0x55	; 85
    4daa:	ff 4f       	sbci	r31, 0xFF	; 255
    4dac:	80 81       	ld	r24, Z
    4dae:	91 81       	ldd	r25, Z+1	; 0x01
    4db0:	01 97       	sbiw	r24, 0x01	; 1
    4db2:	f1 f7       	brne	.-4      	; 0x4db0 <main+0x2f8a>
    4db4:	fe 01       	movw	r30, r28
    4db6:	e5 55       	subi	r30, 0x55	; 85
    4db8:	ff 4f       	sbci	r31, 0xFF	; 255
    4dba:	91 83       	std	Z+1, r25	; 0x01
    4dbc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4dbe:	de 01       	movw	r26, r28
    4dc0:	a3 55       	subi	r26, 0x53	; 83
    4dc2:	bf 4f       	sbci	r27, 0xFF	; 255
    4dc4:	fe 01       	movw	r30, r28
    4dc6:	e3 55       	subi	r30, 0x53	; 83
    4dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    4dca:	80 81       	ld	r24, Z
    4dcc:	91 81       	ldd	r25, Z+1	; 0x01
    4dce:	01 97       	sbiw	r24, 0x01	; 1
    4dd0:	11 96       	adiw	r26, 0x01	; 1
    4dd2:	9c 93       	st	X, r25
    4dd4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4dd6:	fe 01       	movw	r30, r28
    4dd8:	e3 55       	subi	r30, 0x53	; 83
    4dda:	ff 4f       	sbci	r31, 0xFF	; 255
    4ddc:	80 81       	ld	r24, Z
    4dde:	91 81       	ldd	r25, Z+1	; 0x01
    4de0:	00 97       	sbiw	r24, 0x00	; 0
    4de2:	d1 f6       	brne	.-76     	; 0x4d98 <main+0x2f72>
    4de4:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4de8:	8e 01       	movw	r16, r28
    4dea:	03 55       	subi	r16, 0x53	; 83
    4dec:	1f 4f       	sbci	r17, 0xFF	; 255
    4dee:	fe 01       	movw	r30, r28
    4df0:	e1 55       	subi	r30, 0x51	; 81
    4df2:	ff 4f       	sbci	r31, 0xFF	; 255
    4df4:	60 81       	ld	r22, Z
    4df6:	71 81       	ldd	r23, Z+1	; 0x01
    4df8:	82 81       	ldd	r24, Z+2	; 0x02
    4dfa:	93 81       	ldd	r25, Z+3	; 0x03
    4dfc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e00:	dc 01       	movw	r26, r24
    4e02:	cb 01       	movw	r24, r22
    4e04:	f8 01       	movw	r30, r16
    4e06:	91 83       	std	Z+1, r25	; 0x01
    4e08:	80 83       	st	Z, r24
    4e0a:	de 01       	movw	r26, r28
    4e0c:	a7 55       	subi	r26, 0x57	; 87
    4e0e:	bf 4f       	sbci	r27, 0xFF	; 255
    4e10:	fe 01       	movw	r30, r28
    4e12:	e3 55       	subi	r30, 0x53	; 83
    4e14:	ff 4f       	sbci	r31, 0xFF	; 255
    4e16:	80 81       	ld	r24, Z
    4e18:	91 81       	ldd	r25, Z+1	; 0x01
    4e1a:	11 96       	adiw	r26, 0x01	; 1
    4e1c:	9c 93       	st	X, r25
    4e1e:	8e 93       	st	-X, r24
    4e20:	fe 01       	movw	r30, r28
    4e22:	e7 55       	subi	r30, 0x57	; 87
    4e24:	ff 4f       	sbci	r31, 0xFF	; 255
    4e26:	80 81       	ld	r24, Z
    4e28:	91 81       	ldd	r25, Z+1	; 0x01
    4e2a:	01 97       	sbiw	r24, 0x01	; 1
    4e2c:	f1 f7       	brne	.-4      	; 0x4e2a <main+0x3004>
    4e2e:	fe 01       	movw	r30, r28
    4e30:	e7 55       	subi	r30, 0x57	; 87
    4e32:	ff 4f       	sbci	r31, 0xFF	; 255
    4e34:	91 83       	std	Z+1, r25	; 0x01
    4e36:	80 83       	st	Z, r24
    4e38:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
				_delay_ms(1);
				break;
			case 7:
				CLCD_voidSetPosition(0,0);
    4e3c:	80 e0       	ldi	r24, 0x00	; 0
    4e3e:	60 e0       	ldi	r22, 0x00	; 0
    4e40:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    4e44:	fe 01       	movw	r30, r28
    4e46:	eb 55       	subi	r30, 0x5B	; 91
    4e48:	ff 4f       	sbci	r31, 0xFF	; 255
    4e4a:	80 e0       	ldi	r24, 0x00	; 0
    4e4c:	90 e0       	ldi	r25, 0x00	; 0
    4e4e:	a0 e8       	ldi	r26, 0x80	; 128
    4e50:	bf e3       	ldi	r27, 0x3F	; 63
    4e52:	80 83       	st	Z, r24
    4e54:	91 83       	std	Z+1, r25	; 0x01
    4e56:	a2 83       	std	Z+2, r26	; 0x02
    4e58:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e5a:	8e 01       	movw	r16, r28
    4e5c:	0f 55       	subi	r16, 0x5F	; 95
    4e5e:	1f 4f       	sbci	r17, 0xFF	; 255
    4e60:	fe 01       	movw	r30, r28
    4e62:	eb 55       	subi	r30, 0x5B	; 91
    4e64:	ff 4f       	sbci	r31, 0xFF	; 255
    4e66:	60 81       	ld	r22, Z
    4e68:	71 81       	ldd	r23, Z+1	; 0x01
    4e6a:	82 81       	ldd	r24, Z+2	; 0x02
    4e6c:	93 81       	ldd	r25, Z+3	; 0x03
    4e6e:	20 e0       	ldi	r18, 0x00	; 0
    4e70:	30 e0       	ldi	r19, 0x00	; 0
    4e72:	4a ef       	ldi	r20, 0xFA	; 250
    4e74:	54 e4       	ldi	r21, 0x44	; 68
    4e76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e7a:	dc 01       	movw	r26, r24
    4e7c:	cb 01       	movw	r24, r22
    4e7e:	f8 01       	movw	r30, r16
    4e80:	80 83       	st	Z, r24
    4e82:	91 83       	std	Z+1, r25	; 0x01
    4e84:	a2 83       	std	Z+2, r26	; 0x02
    4e86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4e88:	fe 01       	movw	r30, r28
    4e8a:	ef 55       	subi	r30, 0x5F	; 95
    4e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    4e8e:	60 81       	ld	r22, Z
    4e90:	71 81       	ldd	r23, Z+1	; 0x01
    4e92:	82 81       	ldd	r24, Z+2	; 0x02
    4e94:	93 81       	ldd	r25, Z+3	; 0x03
    4e96:	20 e0       	ldi	r18, 0x00	; 0
    4e98:	30 e0       	ldi	r19, 0x00	; 0
    4e9a:	40 e8       	ldi	r20, 0x80	; 128
    4e9c:	5f e3       	ldi	r21, 0x3F	; 63
    4e9e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4ea2:	88 23       	and	r24, r24
    4ea4:	44 f4       	brge	.+16     	; 0x4eb6 <main+0x3090>
		__ticks = 1;
    4ea6:	fe 01       	movw	r30, r28
    4ea8:	e1 56       	subi	r30, 0x61	; 97
    4eaa:	ff 4f       	sbci	r31, 0xFF	; 255
    4eac:	81 e0       	ldi	r24, 0x01	; 1
    4eae:	90 e0       	ldi	r25, 0x00	; 0
    4eb0:	91 83       	std	Z+1, r25	; 0x01
    4eb2:	80 83       	st	Z, r24
    4eb4:	64 c0       	rjmp	.+200    	; 0x4f7e <main+0x3158>
	else if (__tmp > 65535)
    4eb6:	fe 01       	movw	r30, r28
    4eb8:	ef 55       	subi	r30, 0x5F	; 95
    4eba:	ff 4f       	sbci	r31, 0xFF	; 255
    4ebc:	60 81       	ld	r22, Z
    4ebe:	71 81       	ldd	r23, Z+1	; 0x01
    4ec0:	82 81       	ldd	r24, Z+2	; 0x02
    4ec2:	93 81       	ldd	r25, Z+3	; 0x03
    4ec4:	20 e0       	ldi	r18, 0x00	; 0
    4ec6:	3f ef       	ldi	r19, 0xFF	; 255
    4ec8:	4f e7       	ldi	r20, 0x7F	; 127
    4eca:	57 e4       	ldi	r21, 0x47	; 71
    4ecc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4ed0:	18 16       	cp	r1, r24
    4ed2:	0c f0       	brlt	.+2      	; 0x4ed6 <main+0x30b0>
    4ed4:	43 c0       	rjmp	.+134    	; 0x4f5c <main+0x3136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ed6:	fe 01       	movw	r30, r28
    4ed8:	eb 55       	subi	r30, 0x5B	; 91
    4eda:	ff 4f       	sbci	r31, 0xFF	; 255
    4edc:	60 81       	ld	r22, Z
    4ede:	71 81       	ldd	r23, Z+1	; 0x01
    4ee0:	82 81       	ldd	r24, Z+2	; 0x02
    4ee2:	93 81       	ldd	r25, Z+3	; 0x03
    4ee4:	20 e0       	ldi	r18, 0x00	; 0
    4ee6:	30 e0       	ldi	r19, 0x00	; 0
    4ee8:	40 e2       	ldi	r20, 0x20	; 32
    4eea:	51 e4       	ldi	r21, 0x41	; 65
    4eec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ef0:	dc 01       	movw	r26, r24
    4ef2:	cb 01       	movw	r24, r22
    4ef4:	8e 01       	movw	r16, r28
    4ef6:	01 56       	subi	r16, 0x61	; 97
    4ef8:	1f 4f       	sbci	r17, 0xFF	; 255
    4efa:	bc 01       	movw	r22, r24
    4efc:	cd 01       	movw	r24, r26
    4efe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f02:	dc 01       	movw	r26, r24
    4f04:	cb 01       	movw	r24, r22
    4f06:	f8 01       	movw	r30, r16
    4f08:	91 83       	std	Z+1, r25	; 0x01
    4f0a:	80 83       	st	Z, r24
    4f0c:	1f c0       	rjmp	.+62     	; 0x4f4c <main+0x3126>
    4f0e:	fe 01       	movw	r30, r28
    4f10:	e3 56       	subi	r30, 0x63	; 99
    4f12:	ff 4f       	sbci	r31, 0xFF	; 255
    4f14:	88 ec       	ldi	r24, 0xC8	; 200
    4f16:	90 e0       	ldi	r25, 0x00	; 0
    4f18:	91 83       	std	Z+1, r25	; 0x01
    4f1a:	80 83       	st	Z, r24
    4f1c:	fe 01       	movw	r30, r28
    4f1e:	e3 56       	subi	r30, 0x63	; 99
    4f20:	ff 4f       	sbci	r31, 0xFF	; 255
    4f22:	80 81       	ld	r24, Z
    4f24:	91 81       	ldd	r25, Z+1	; 0x01
    4f26:	01 97       	sbiw	r24, 0x01	; 1
    4f28:	f1 f7       	brne	.-4      	; 0x4f26 <main+0x3100>
    4f2a:	fe 01       	movw	r30, r28
    4f2c:	e3 56       	subi	r30, 0x63	; 99
    4f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    4f30:	91 83       	std	Z+1, r25	; 0x01
    4f32:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f34:	de 01       	movw	r26, r28
    4f36:	a1 56       	subi	r26, 0x61	; 97
    4f38:	bf 4f       	sbci	r27, 0xFF	; 255
    4f3a:	fe 01       	movw	r30, r28
    4f3c:	e1 56       	subi	r30, 0x61	; 97
    4f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4f40:	80 81       	ld	r24, Z
    4f42:	91 81       	ldd	r25, Z+1	; 0x01
    4f44:	01 97       	sbiw	r24, 0x01	; 1
    4f46:	11 96       	adiw	r26, 0x01	; 1
    4f48:	9c 93       	st	X, r25
    4f4a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f4c:	fe 01       	movw	r30, r28
    4f4e:	e1 56       	subi	r30, 0x61	; 97
    4f50:	ff 4f       	sbci	r31, 0xFF	; 255
    4f52:	80 81       	ld	r24, Z
    4f54:	91 81       	ldd	r25, Z+1	; 0x01
    4f56:	00 97       	sbiw	r24, 0x00	; 0
    4f58:	d1 f6       	brne	.-76     	; 0x4f0e <main+0x30e8>
    4f5a:	27 c0       	rjmp	.+78     	; 0x4faa <main+0x3184>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f5c:	8e 01       	movw	r16, r28
    4f5e:	01 56       	subi	r16, 0x61	; 97
    4f60:	1f 4f       	sbci	r17, 0xFF	; 255
    4f62:	fe 01       	movw	r30, r28
    4f64:	ef 55       	subi	r30, 0x5F	; 95
    4f66:	ff 4f       	sbci	r31, 0xFF	; 255
    4f68:	60 81       	ld	r22, Z
    4f6a:	71 81       	ldd	r23, Z+1	; 0x01
    4f6c:	82 81       	ldd	r24, Z+2	; 0x02
    4f6e:	93 81       	ldd	r25, Z+3	; 0x03
    4f70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f74:	dc 01       	movw	r26, r24
    4f76:	cb 01       	movw	r24, r22
    4f78:	f8 01       	movw	r30, r16
    4f7a:	91 83       	std	Z+1, r25	; 0x01
    4f7c:	80 83       	st	Z, r24
    4f7e:	de 01       	movw	r26, r28
    4f80:	a5 56       	subi	r26, 0x65	; 101
    4f82:	bf 4f       	sbci	r27, 0xFF	; 255
    4f84:	fe 01       	movw	r30, r28
    4f86:	e1 56       	subi	r30, 0x61	; 97
    4f88:	ff 4f       	sbci	r31, 0xFF	; 255
    4f8a:	80 81       	ld	r24, Z
    4f8c:	91 81       	ldd	r25, Z+1	; 0x01
    4f8e:	8d 93       	st	X+, r24
    4f90:	9c 93       	st	X, r25
    4f92:	fe 01       	movw	r30, r28
    4f94:	e5 56       	subi	r30, 0x65	; 101
    4f96:	ff 4f       	sbci	r31, 0xFF	; 255
    4f98:	80 81       	ld	r24, Z
    4f9a:	91 81       	ldd	r25, Z+1	; 0x01
    4f9c:	01 97       	sbiw	r24, 0x01	; 1
    4f9e:	f1 f7       	brne	.-4      	; 0x4f9c <main+0x3176>
    4fa0:	fe 01       	movw	r30, r28
    4fa2:	e5 56       	subi	r30, 0x65	; 101
    4fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    4fa6:	91 83       	std	Z+1, r25	; 0x01
    4fa8:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Circular Chase..");
    4faa:	8d eb       	ldi	r24, 0xBD	; 189
    4fac:	90 e0       	ldi	r25, 0x00	; 0
    4fae:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    4fb2:	80 e0       	ldi	r24, 0x00	; 0
    4fb4:	61 e0       	ldi	r22, 0x01	; 1
    4fb6:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    4fba:	fe 01       	movw	r30, r28
    4fbc:	e9 56       	subi	r30, 0x69	; 105
    4fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    4fc0:	80 e0       	ldi	r24, 0x00	; 0
    4fc2:	90 e0       	ldi	r25, 0x00	; 0
    4fc4:	a0 e8       	ldi	r26, 0x80	; 128
    4fc6:	bf e3       	ldi	r27, 0x3F	; 63
    4fc8:	80 83       	st	Z, r24
    4fca:	91 83       	std	Z+1, r25	; 0x01
    4fcc:	a2 83       	std	Z+2, r26	; 0x02
    4fce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fd0:	8e 01       	movw	r16, r28
    4fd2:	0d 56       	subi	r16, 0x6D	; 109
    4fd4:	1f 4f       	sbci	r17, 0xFF	; 255
    4fd6:	fe 01       	movw	r30, r28
    4fd8:	e9 56       	subi	r30, 0x69	; 105
    4fda:	ff 4f       	sbci	r31, 0xFF	; 255
    4fdc:	60 81       	ld	r22, Z
    4fde:	71 81       	ldd	r23, Z+1	; 0x01
    4fe0:	82 81       	ldd	r24, Z+2	; 0x02
    4fe2:	93 81       	ldd	r25, Z+3	; 0x03
    4fe4:	20 e0       	ldi	r18, 0x00	; 0
    4fe6:	30 e0       	ldi	r19, 0x00	; 0
    4fe8:	4a ef       	ldi	r20, 0xFA	; 250
    4fea:	54 e4       	ldi	r21, 0x44	; 68
    4fec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ff0:	dc 01       	movw	r26, r24
    4ff2:	cb 01       	movw	r24, r22
    4ff4:	f8 01       	movw	r30, r16
    4ff6:	80 83       	st	Z, r24
    4ff8:	91 83       	std	Z+1, r25	; 0x01
    4ffa:	a2 83       	std	Z+2, r26	; 0x02
    4ffc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ffe:	fe 01       	movw	r30, r28
    5000:	ed 56       	subi	r30, 0x6D	; 109
    5002:	ff 4f       	sbci	r31, 0xFF	; 255
    5004:	60 81       	ld	r22, Z
    5006:	71 81       	ldd	r23, Z+1	; 0x01
    5008:	82 81       	ldd	r24, Z+2	; 0x02
    500a:	93 81       	ldd	r25, Z+3	; 0x03
    500c:	20 e0       	ldi	r18, 0x00	; 0
    500e:	30 e0       	ldi	r19, 0x00	; 0
    5010:	40 e8       	ldi	r20, 0x80	; 128
    5012:	5f e3       	ldi	r21, 0x3F	; 63
    5014:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5018:	88 23       	and	r24, r24
    501a:	44 f4       	brge	.+16     	; 0x502c <main+0x3206>
		__ticks = 1;
    501c:	fe 01       	movw	r30, r28
    501e:	ef 56       	subi	r30, 0x6F	; 111
    5020:	ff 4f       	sbci	r31, 0xFF	; 255
    5022:	81 e0       	ldi	r24, 0x01	; 1
    5024:	90 e0       	ldi	r25, 0x00	; 0
    5026:	91 83       	std	Z+1, r25	; 0x01
    5028:	80 83       	st	Z, r24
    502a:	64 c0       	rjmp	.+200    	; 0x50f4 <main+0x32ce>
	else if (__tmp > 65535)
    502c:	fe 01       	movw	r30, r28
    502e:	ed 56       	subi	r30, 0x6D	; 109
    5030:	ff 4f       	sbci	r31, 0xFF	; 255
    5032:	60 81       	ld	r22, Z
    5034:	71 81       	ldd	r23, Z+1	; 0x01
    5036:	82 81       	ldd	r24, Z+2	; 0x02
    5038:	93 81       	ldd	r25, Z+3	; 0x03
    503a:	20 e0       	ldi	r18, 0x00	; 0
    503c:	3f ef       	ldi	r19, 0xFF	; 255
    503e:	4f e7       	ldi	r20, 0x7F	; 127
    5040:	57 e4       	ldi	r21, 0x47	; 71
    5042:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5046:	18 16       	cp	r1, r24
    5048:	0c f0       	brlt	.+2      	; 0x504c <main+0x3226>
    504a:	43 c0       	rjmp	.+134    	; 0x50d2 <main+0x32ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    504c:	fe 01       	movw	r30, r28
    504e:	e9 56       	subi	r30, 0x69	; 105
    5050:	ff 4f       	sbci	r31, 0xFF	; 255
    5052:	60 81       	ld	r22, Z
    5054:	71 81       	ldd	r23, Z+1	; 0x01
    5056:	82 81       	ldd	r24, Z+2	; 0x02
    5058:	93 81       	ldd	r25, Z+3	; 0x03
    505a:	20 e0       	ldi	r18, 0x00	; 0
    505c:	30 e0       	ldi	r19, 0x00	; 0
    505e:	40 e2       	ldi	r20, 0x20	; 32
    5060:	51 e4       	ldi	r21, 0x41	; 65
    5062:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5066:	dc 01       	movw	r26, r24
    5068:	cb 01       	movw	r24, r22
    506a:	8e 01       	movw	r16, r28
    506c:	0f 56       	subi	r16, 0x6F	; 111
    506e:	1f 4f       	sbci	r17, 0xFF	; 255
    5070:	bc 01       	movw	r22, r24
    5072:	cd 01       	movw	r24, r26
    5074:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5078:	dc 01       	movw	r26, r24
    507a:	cb 01       	movw	r24, r22
    507c:	f8 01       	movw	r30, r16
    507e:	91 83       	std	Z+1, r25	; 0x01
    5080:	80 83       	st	Z, r24
    5082:	1f c0       	rjmp	.+62     	; 0x50c2 <main+0x329c>
    5084:	fe 01       	movw	r30, r28
    5086:	e1 57       	subi	r30, 0x71	; 113
    5088:	ff 4f       	sbci	r31, 0xFF	; 255
    508a:	88 ec       	ldi	r24, 0xC8	; 200
    508c:	90 e0       	ldi	r25, 0x00	; 0
    508e:	91 83       	std	Z+1, r25	; 0x01
    5090:	80 83       	st	Z, r24
    5092:	fe 01       	movw	r30, r28
    5094:	e1 57       	subi	r30, 0x71	; 113
    5096:	ff 4f       	sbci	r31, 0xFF	; 255
    5098:	80 81       	ld	r24, Z
    509a:	91 81       	ldd	r25, Z+1	; 0x01
    509c:	01 97       	sbiw	r24, 0x01	; 1
    509e:	f1 f7       	brne	.-4      	; 0x509c <main+0x3276>
    50a0:	fe 01       	movw	r30, r28
    50a2:	e1 57       	subi	r30, 0x71	; 113
    50a4:	ff 4f       	sbci	r31, 0xFF	; 255
    50a6:	91 83       	std	Z+1, r25	; 0x01
    50a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50aa:	de 01       	movw	r26, r28
    50ac:	af 56       	subi	r26, 0x6F	; 111
    50ae:	bf 4f       	sbci	r27, 0xFF	; 255
    50b0:	fe 01       	movw	r30, r28
    50b2:	ef 56       	subi	r30, 0x6F	; 111
    50b4:	ff 4f       	sbci	r31, 0xFF	; 255
    50b6:	80 81       	ld	r24, Z
    50b8:	91 81       	ldd	r25, Z+1	; 0x01
    50ba:	01 97       	sbiw	r24, 0x01	; 1
    50bc:	11 96       	adiw	r26, 0x01	; 1
    50be:	9c 93       	st	X, r25
    50c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50c2:	fe 01       	movw	r30, r28
    50c4:	ef 56       	subi	r30, 0x6F	; 111
    50c6:	ff 4f       	sbci	r31, 0xFF	; 255
    50c8:	80 81       	ld	r24, Z
    50ca:	91 81       	ldd	r25, Z+1	; 0x01
    50cc:	00 97       	sbiw	r24, 0x00	; 0
    50ce:	d1 f6       	brne	.-76     	; 0x5084 <main+0x325e>
    50d0:	27 c0       	rjmp	.+78     	; 0x5120 <main+0x32fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50d2:	8e 01       	movw	r16, r28
    50d4:	0f 56       	subi	r16, 0x6F	; 111
    50d6:	1f 4f       	sbci	r17, 0xFF	; 255
    50d8:	fe 01       	movw	r30, r28
    50da:	ed 56       	subi	r30, 0x6D	; 109
    50dc:	ff 4f       	sbci	r31, 0xFF	; 255
    50de:	60 81       	ld	r22, Z
    50e0:	71 81       	ldd	r23, Z+1	; 0x01
    50e2:	82 81       	ldd	r24, Z+2	; 0x02
    50e4:	93 81       	ldd	r25, Z+3	; 0x03
    50e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50ea:	dc 01       	movw	r26, r24
    50ec:	cb 01       	movw	r24, r22
    50ee:	f8 01       	movw	r30, r16
    50f0:	91 83       	std	Z+1, r25	; 0x01
    50f2:	80 83       	st	Z, r24
    50f4:	de 01       	movw	r26, r28
    50f6:	a3 57       	subi	r26, 0x73	; 115
    50f8:	bf 4f       	sbci	r27, 0xFF	; 255
    50fa:	fe 01       	movw	r30, r28
    50fc:	ef 56       	subi	r30, 0x6F	; 111
    50fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5100:	80 81       	ld	r24, Z
    5102:	91 81       	ldd	r25, Z+1	; 0x01
    5104:	8d 93       	st	X+, r24
    5106:	9c 93       	st	X, r25
    5108:	fe 01       	movw	r30, r28
    510a:	e3 57       	subi	r30, 0x73	; 115
    510c:	ff 4f       	sbci	r31, 0xFF	; 255
    510e:	80 81       	ld	r24, Z
    5110:	91 81       	ldd	r25, Z+1	; 0x01
    5112:	01 97       	sbiw	r24, 0x01	; 1
    5114:	f1 f7       	brne	.-4      	; 0x5112 <main+0x32ec>
    5116:	fe 01       	movw	r30, r28
    5118:	e3 57       	subi	r30, 0x73	; 115
    511a:	ff 4f       	sbci	r31, 0xFF	; 255
    511c:	91 83       	std	Z+1, r25	; 0x01
    511e:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    5120:	8b e6       	ldi	r24, 0x6B	; 107
    5122:	90 e0       	ldi	r25, 0x00	; 0
    5124:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    5128:	b4 c1       	rjmp	.+872    	; 0x5492 <main+0x366c>
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<8 ;i++){
    512a:	fe 01       	movw	r30, r28
    512c:	e4 5a       	subi	r30, 0xA4	; 164
    512e:	fd 4f       	sbci	r31, 0xFD	; 253
    5130:	10 82       	st	Z, r1
    5132:	d1 c0       	rjmp	.+418    	; 0x52d6 <main+0x34b0>
						Copy_u8KpdValue=KPD_u8GetKeyState();
    5134:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    5138:	fe 01       	movw	r30, r28
    513a:	ed 59       	subi	r30, 0x9D	; 157
    513c:	fd 4f       	sbci	r31, 0xFD	; 253
    513e:	80 83       	st	Z, r24
						if(Copy_u8KpdValue==13) break;
    5140:	fe 01       	movw	r30, r28
    5142:	ed 59       	subi	r30, 0x9D	; 157
    5144:	fd 4f       	sbci	r31, 0xFD	; 253
    5146:	80 81       	ld	r24, Z
    5148:	8d 30       	cpi	r24, 0x0D	; 13
    514a:	09 f4       	brne	.+2      	; 0x514e <main+0x3328>
    514c:	cb c0       	rjmp	.+406    	; 0x52e4 <main+0x34be>
						LED_voidControlLed(PORT_u8B,i, PIN_HIGH);
    514e:	fe 01       	movw	r30, r28
    5150:	e4 5a       	subi	r30, 0xA4	; 164
    5152:	fd 4f       	sbci	r31, 0xFD	; 253
    5154:	82 e0       	ldi	r24, 0x02	; 2
    5156:	60 81       	ld	r22, Z
    5158:	41 e0       	ldi	r20, 0x01	; 1
    515a:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    515e:	fe 01       	movw	r30, r28
    5160:	e7 57       	subi	r30, 0x77	; 119
    5162:	ff 4f       	sbci	r31, 0xFF	; 255
    5164:	80 e0       	ldi	r24, 0x00	; 0
    5166:	90 e0       	ldi	r25, 0x00	; 0
    5168:	a6 e9       	ldi	r26, 0x96	; 150
    516a:	b3 e4       	ldi	r27, 0x43	; 67
    516c:	80 83       	st	Z, r24
    516e:	91 83       	std	Z+1, r25	; 0x01
    5170:	a2 83       	std	Z+2, r26	; 0x02
    5172:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5174:	8e 01       	movw	r16, r28
    5176:	0b 57       	subi	r16, 0x7B	; 123
    5178:	1f 4f       	sbci	r17, 0xFF	; 255
    517a:	fe 01       	movw	r30, r28
    517c:	e7 57       	subi	r30, 0x77	; 119
    517e:	ff 4f       	sbci	r31, 0xFF	; 255
    5180:	60 81       	ld	r22, Z
    5182:	71 81       	ldd	r23, Z+1	; 0x01
    5184:	82 81       	ldd	r24, Z+2	; 0x02
    5186:	93 81       	ldd	r25, Z+3	; 0x03
    5188:	20 e0       	ldi	r18, 0x00	; 0
    518a:	30 e0       	ldi	r19, 0x00	; 0
    518c:	4a ef       	ldi	r20, 0xFA	; 250
    518e:	54 e4       	ldi	r21, 0x44	; 68
    5190:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5194:	dc 01       	movw	r26, r24
    5196:	cb 01       	movw	r24, r22
    5198:	f8 01       	movw	r30, r16
    519a:	80 83       	st	Z, r24
    519c:	91 83       	std	Z+1, r25	; 0x01
    519e:	a2 83       	std	Z+2, r26	; 0x02
    51a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    51a2:	fe 01       	movw	r30, r28
    51a4:	eb 57       	subi	r30, 0x7B	; 123
    51a6:	ff 4f       	sbci	r31, 0xFF	; 255
    51a8:	60 81       	ld	r22, Z
    51aa:	71 81       	ldd	r23, Z+1	; 0x01
    51ac:	82 81       	ldd	r24, Z+2	; 0x02
    51ae:	93 81       	ldd	r25, Z+3	; 0x03
    51b0:	20 e0       	ldi	r18, 0x00	; 0
    51b2:	30 e0       	ldi	r19, 0x00	; 0
    51b4:	40 e8       	ldi	r20, 0x80	; 128
    51b6:	5f e3       	ldi	r21, 0x3F	; 63
    51b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    51bc:	88 23       	and	r24, r24
    51be:	44 f4       	brge	.+16     	; 0x51d0 <main+0x33aa>
		__ticks = 1;
    51c0:	fe 01       	movw	r30, r28
    51c2:	ed 57       	subi	r30, 0x7D	; 125
    51c4:	ff 4f       	sbci	r31, 0xFF	; 255
    51c6:	81 e0       	ldi	r24, 0x01	; 1
    51c8:	90 e0       	ldi	r25, 0x00	; 0
    51ca:	91 83       	std	Z+1, r25	; 0x01
    51cc:	80 83       	st	Z, r24
    51ce:	64 c0       	rjmp	.+200    	; 0x5298 <main+0x3472>
	else if (__tmp > 65535)
    51d0:	fe 01       	movw	r30, r28
    51d2:	eb 57       	subi	r30, 0x7B	; 123
    51d4:	ff 4f       	sbci	r31, 0xFF	; 255
    51d6:	60 81       	ld	r22, Z
    51d8:	71 81       	ldd	r23, Z+1	; 0x01
    51da:	82 81       	ldd	r24, Z+2	; 0x02
    51dc:	93 81       	ldd	r25, Z+3	; 0x03
    51de:	20 e0       	ldi	r18, 0x00	; 0
    51e0:	3f ef       	ldi	r19, 0xFF	; 255
    51e2:	4f e7       	ldi	r20, 0x7F	; 127
    51e4:	57 e4       	ldi	r21, 0x47	; 71
    51e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    51ea:	18 16       	cp	r1, r24
    51ec:	0c f0       	brlt	.+2      	; 0x51f0 <main+0x33ca>
    51ee:	43 c0       	rjmp	.+134    	; 0x5276 <main+0x3450>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51f0:	fe 01       	movw	r30, r28
    51f2:	e7 57       	subi	r30, 0x77	; 119
    51f4:	ff 4f       	sbci	r31, 0xFF	; 255
    51f6:	60 81       	ld	r22, Z
    51f8:	71 81       	ldd	r23, Z+1	; 0x01
    51fa:	82 81       	ldd	r24, Z+2	; 0x02
    51fc:	93 81       	ldd	r25, Z+3	; 0x03
    51fe:	20 e0       	ldi	r18, 0x00	; 0
    5200:	30 e0       	ldi	r19, 0x00	; 0
    5202:	40 e2       	ldi	r20, 0x20	; 32
    5204:	51 e4       	ldi	r21, 0x41	; 65
    5206:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    520a:	dc 01       	movw	r26, r24
    520c:	cb 01       	movw	r24, r22
    520e:	8e 01       	movw	r16, r28
    5210:	0d 57       	subi	r16, 0x7D	; 125
    5212:	1f 4f       	sbci	r17, 0xFF	; 255
    5214:	bc 01       	movw	r22, r24
    5216:	cd 01       	movw	r24, r26
    5218:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    521c:	dc 01       	movw	r26, r24
    521e:	cb 01       	movw	r24, r22
    5220:	f8 01       	movw	r30, r16
    5222:	91 83       	std	Z+1, r25	; 0x01
    5224:	80 83       	st	Z, r24
    5226:	1f c0       	rjmp	.+62     	; 0x5266 <main+0x3440>
    5228:	fe 01       	movw	r30, r28
    522a:	ef 57       	subi	r30, 0x7F	; 127
    522c:	ff 4f       	sbci	r31, 0xFF	; 255
    522e:	88 ec       	ldi	r24, 0xC8	; 200
    5230:	90 e0       	ldi	r25, 0x00	; 0
    5232:	91 83       	std	Z+1, r25	; 0x01
    5234:	80 83       	st	Z, r24
    5236:	fe 01       	movw	r30, r28
    5238:	ef 57       	subi	r30, 0x7F	; 127
    523a:	ff 4f       	sbci	r31, 0xFF	; 255
    523c:	80 81       	ld	r24, Z
    523e:	91 81       	ldd	r25, Z+1	; 0x01
    5240:	01 97       	sbiw	r24, 0x01	; 1
    5242:	f1 f7       	brne	.-4      	; 0x5240 <main+0x341a>
    5244:	fe 01       	movw	r30, r28
    5246:	ef 57       	subi	r30, 0x7F	; 127
    5248:	ff 4f       	sbci	r31, 0xFF	; 255
    524a:	91 83       	std	Z+1, r25	; 0x01
    524c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    524e:	de 01       	movw	r26, r28
    5250:	ad 57       	subi	r26, 0x7D	; 125
    5252:	bf 4f       	sbci	r27, 0xFF	; 255
    5254:	fe 01       	movw	r30, r28
    5256:	ed 57       	subi	r30, 0x7D	; 125
    5258:	ff 4f       	sbci	r31, 0xFF	; 255
    525a:	80 81       	ld	r24, Z
    525c:	91 81       	ldd	r25, Z+1	; 0x01
    525e:	01 97       	sbiw	r24, 0x01	; 1
    5260:	11 96       	adiw	r26, 0x01	; 1
    5262:	9c 93       	st	X, r25
    5264:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5266:	fe 01       	movw	r30, r28
    5268:	ed 57       	subi	r30, 0x7D	; 125
    526a:	ff 4f       	sbci	r31, 0xFF	; 255
    526c:	80 81       	ld	r24, Z
    526e:	91 81       	ldd	r25, Z+1	; 0x01
    5270:	00 97       	sbiw	r24, 0x00	; 0
    5272:	d1 f6       	brne	.-76     	; 0x5228 <main+0x3402>
    5274:	27 c0       	rjmp	.+78     	; 0x52c4 <main+0x349e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5276:	8e 01       	movw	r16, r28
    5278:	0d 57       	subi	r16, 0x7D	; 125
    527a:	1f 4f       	sbci	r17, 0xFF	; 255
    527c:	fe 01       	movw	r30, r28
    527e:	eb 57       	subi	r30, 0x7B	; 123
    5280:	ff 4f       	sbci	r31, 0xFF	; 255
    5282:	60 81       	ld	r22, Z
    5284:	71 81       	ldd	r23, Z+1	; 0x01
    5286:	82 81       	ldd	r24, Z+2	; 0x02
    5288:	93 81       	ldd	r25, Z+3	; 0x03
    528a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    528e:	dc 01       	movw	r26, r24
    5290:	cb 01       	movw	r24, r22
    5292:	f8 01       	movw	r30, r16
    5294:	91 83       	std	Z+1, r25	; 0x01
    5296:	80 83       	st	Z, r24
    5298:	de 01       	movw	r26, r28
    529a:	a1 58       	subi	r26, 0x81	; 129
    529c:	bf 4f       	sbci	r27, 0xFF	; 255
    529e:	fe 01       	movw	r30, r28
    52a0:	ed 57       	subi	r30, 0x7D	; 125
    52a2:	ff 4f       	sbci	r31, 0xFF	; 255
    52a4:	80 81       	ld	r24, Z
    52a6:	91 81       	ldd	r25, Z+1	; 0x01
    52a8:	8d 93       	st	X+, r24
    52aa:	9c 93       	st	X, r25
    52ac:	fe 01       	movw	r30, r28
    52ae:	e1 58       	subi	r30, 0x81	; 129
    52b0:	ff 4f       	sbci	r31, 0xFF	; 255
    52b2:	80 81       	ld	r24, Z
    52b4:	91 81       	ldd	r25, Z+1	; 0x01
    52b6:	01 97       	sbiw	r24, 0x01	; 1
    52b8:	f1 f7       	brne	.-4      	; 0x52b6 <main+0x3490>
    52ba:	fe 01       	movw	r30, r28
    52bc:	e1 58       	subi	r30, 0x81	; 129
    52be:	ff 4f       	sbci	r31, 0xFF	; 255
    52c0:	91 83       	std	Z+1, r25	; 0x01
    52c2:	80 83       	st	Z, r24
				CLCD_voidSendString("Circular Chase..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
					for(u8 i=0 ; i<8 ;i++){
    52c4:	de 01       	movw	r26, r28
    52c6:	a4 5a       	subi	r26, 0xA4	; 164
    52c8:	bd 4f       	sbci	r27, 0xFD	; 253
    52ca:	fe 01       	movw	r30, r28
    52cc:	e4 5a       	subi	r30, 0xA4	; 164
    52ce:	fd 4f       	sbci	r31, 0xFD	; 253
    52d0:	80 81       	ld	r24, Z
    52d2:	8f 5f       	subi	r24, 0xFF	; 255
    52d4:	8c 93       	st	X, r24
    52d6:	fe 01       	movw	r30, r28
    52d8:	e4 5a       	subi	r30, 0xA4	; 164
    52da:	fd 4f       	sbci	r31, 0xFD	; 253
    52dc:	80 81       	ld	r24, Z
    52de:	88 30       	cpi	r24, 0x08	; 8
    52e0:	08 f4       	brcc	.+2      	; 0x52e4 <main+0x34be>
    52e2:	28 cf       	rjmp	.-432    	; 0x5134 <main+0x330e>
						Copy_u8KpdValue=KPD_u8GetKeyState();
						if(Copy_u8KpdValue==13) break;
						LED_voidControlLed(PORT_u8B,i, PIN_HIGH);
						_delay_ms(300);
					}
					for(u8 i=7 ; i>=0 ;i--){
    52e4:	fe 01       	movw	r30, r28
    52e6:	e5 5a       	subi	r30, 0xA5	; 165
    52e8:	fd 4f       	sbci	r31, 0xFD	; 253
    52ea:	87 e0       	ldi	r24, 0x07	; 7
    52ec:	80 83       	st	Z, r24
						Copy_u8KpdValue=KPD_u8GetKeyState();
    52ee:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    52f2:	fe 01       	movw	r30, r28
    52f4:	ed 59       	subi	r30, 0x9D	; 157
    52f6:	fd 4f       	sbci	r31, 0xFD	; 253
    52f8:	80 83       	st	Z, r24
						if(Copy_u8KpdValue==13) break;
    52fa:	fe 01       	movw	r30, r28
    52fc:	ed 59       	subi	r30, 0x9D	; 157
    52fe:	fd 4f       	sbci	r31, 0xFD	; 253
    5300:	80 81       	ld	r24, Z
    5302:	8d 30       	cpi	r24, 0x0D	; 13
    5304:	09 f4       	brne	.+2      	; 0x5308 <main+0x34e2>
    5306:	c5 c0       	rjmp	.+394    	; 0x5492 <main+0x366c>
						LED_voidControlLed(PORT_u8B,i, PIN_LOW);
    5308:	fe 01       	movw	r30, r28
    530a:	e5 5a       	subi	r30, 0xA5	; 165
    530c:	fd 4f       	sbci	r31, 0xFD	; 253
    530e:	82 e0       	ldi	r24, 0x02	; 2
    5310:	60 81       	ld	r22, Z
    5312:	40 e0       	ldi	r20, 0x00	; 0
    5314:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <LED_voidControlLed>
    5318:	fe 01       	movw	r30, r28
    531a:	e5 58       	subi	r30, 0x85	; 133
    531c:	ff 4f       	sbci	r31, 0xFF	; 255
    531e:	80 e0       	ldi	r24, 0x00	; 0
    5320:	90 e0       	ldi	r25, 0x00	; 0
    5322:	a6 e9       	ldi	r26, 0x96	; 150
    5324:	b3 e4       	ldi	r27, 0x43	; 67
    5326:	80 83       	st	Z, r24
    5328:	91 83       	std	Z+1, r25	; 0x01
    532a:	a2 83       	std	Z+2, r26	; 0x02
    532c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    532e:	8e 01       	movw	r16, r28
    5330:	09 58       	subi	r16, 0x89	; 137
    5332:	1f 4f       	sbci	r17, 0xFF	; 255
    5334:	fe 01       	movw	r30, r28
    5336:	e5 58       	subi	r30, 0x85	; 133
    5338:	ff 4f       	sbci	r31, 0xFF	; 255
    533a:	60 81       	ld	r22, Z
    533c:	71 81       	ldd	r23, Z+1	; 0x01
    533e:	82 81       	ldd	r24, Z+2	; 0x02
    5340:	93 81       	ldd	r25, Z+3	; 0x03
    5342:	20 e0       	ldi	r18, 0x00	; 0
    5344:	30 e0       	ldi	r19, 0x00	; 0
    5346:	4a ef       	ldi	r20, 0xFA	; 250
    5348:	54 e4       	ldi	r21, 0x44	; 68
    534a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    534e:	dc 01       	movw	r26, r24
    5350:	cb 01       	movw	r24, r22
    5352:	f8 01       	movw	r30, r16
    5354:	80 83       	st	Z, r24
    5356:	91 83       	std	Z+1, r25	; 0x01
    5358:	a2 83       	std	Z+2, r26	; 0x02
    535a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    535c:	fe 01       	movw	r30, r28
    535e:	e9 58       	subi	r30, 0x89	; 137
    5360:	ff 4f       	sbci	r31, 0xFF	; 255
    5362:	60 81       	ld	r22, Z
    5364:	71 81       	ldd	r23, Z+1	; 0x01
    5366:	82 81       	ldd	r24, Z+2	; 0x02
    5368:	93 81       	ldd	r25, Z+3	; 0x03
    536a:	20 e0       	ldi	r18, 0x00	; 0
    536c:	30 e0       	ldi	r19, 0x00	; 0
    536e:	40 e8       	ldi	r20, 0x80	; 128
    5370:	5f e3       	ldi	r21, 0x3F	; 63
    5372:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5376:	88 23       	and	r24, r24
    5378:	44 f4       	brge	.+16     	; 0x538a <main+0x3564>
		__ticks = 1;
    537a:	fe 01       	movw	r30, r28
    537c:	eb 58       	subi	r30, 0x8B	; 139
    537e:	ff 4f       	sbci	r31, 0xFF	; 255
    5380:	81 e0       	ldi	r24, 0x01	; 1
    5382:	90 e0       	ldi	r25, 0x00	; 0
    5384:	91 83       	std	Z+1, r25	; 0x01
    5386:	80 83       	st	Z, r24
    5388:	64 c0       	rjmp	.+200    	; 0x5452 <main+0x362c>
	else if (__tmp > 65535)
    538a:	fe 01       	movw	r30, r28
    538c:	e9 58       	subi	r30, 0x89	; 137
    538e:	ff 4f       	sbci	r31, 0xFF	; 255
    5390:	60 81       	ld	r22, Z
    5392:	71 81       	ldd	r23, Z+1	; 0x01
    5394:	82 81       	ldd	r24, Z+2	; 0x02
    5396:	93 81       	ldd	r25, Z+3	; 0x03
    5398:	20 e0       	ldi	r18, 0x00	; 0
    539a:	3f ef       	ldi	r19, 0xFF	; 255
    539c:	4f e7       	ldi	r20, 0x7F	; 127
    539e:	57 e4       	ldi	r21, 0x47	; 71
    53a0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    53a4:	18 16       	cp	r1, r24
    53a6:	0c f0       	brlt	.+2      	; 0x53aa <main+0x3584>
    53a8:	43 c0       	rjmp	.+134    	; 0x5430 <main+0x360a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53aa:	fe 01       	movw	r30, r28
    53ac:	e5 58       	subi	r30, 0x85	; 133
    53ae:	ff 4f       	sbci	r31, 0xFF	; 255
    53b0:	60 81       	ld	r22, Z
    53b2:	71 81       	ldd	r23, Z+1	; 0x01
    53b4:	82 81       	ldd	r24, Z+2	; 0x02
    53b6:	93 81       	ldd	r25, Z+3	; 0x03
    53b8:	20 e0       	ldi	r18, 0x00	; 0
    53ba:	30 e0       	ldi	r19, 0x00	; 0
    53bc:	40 e2       	ldi	r20, 0x20	; 32
    53be:	51 e4       	ldi	r21, 0x41	; 65
    53c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    53c4:	dc 01       	movw	r26, r24
    53c6:	cb 01       	movw	r24, r22
    53c8:	8e 01       	movw	r16, r28
    53ca:	0b 58       	subi	r16, 0x8B	; 139
    53cc:	1f 4f       	sbci	r17, 0xFF	; 255
    53ce:	bc 01       	movw	r22, r24
    53d0:	cd 01       	movw	r24, r26
    53d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53d6:	dc 01       	movw	r26, r24
    53d8:	cb 01       	movw	r24, r22
    53da:	f8 01       	movw	r30, r16
    53dc:	91 83       	std	Z+1, r25	; 0x01
    53de:	80 83       	st	Z, r24
    53e0:	1f c0       	rjmp	.+62     	; 0x5420 <main+0x35fa>
    53e2:	fe 01       	movw	r30, r28
    53e4:	ed 58       	subi	r30, 0x8D	; 141
    53e6:	ff 4f       	sbci	r31, 0xFF	; 255
    53e8:	88 ec       	ldi	r24, 0xC8	; 200
    53ea:	90 e0       	ldi	r25, 0x00	; 0
    53ec:	91 83       	std	Z+1, r25	; 0x01
    53ee:	80 83       	st	Z, r24
    53f0:	fe 01       	movw	r30, r28
    53f2:	ed 58       	subi	r30, 0x8D	; 141
    53f4:	ff 4f       	sbci	r31, 0xFF	; 255
    53f6:	80 81       	ld	r24, Z
    53f8:	91 81       	ldd	r25, Z+1	; 0x01
    53fa:	01 97       	sbiw	r24, 0x01	; 1
    53fc:	f1 f7       	brne	.-4      	; 0x53fa <main+0x35d4>
    53fe:	fe 01       	movw	r30, r28
    5400:	ed 58       	subi	r30, 0x8D	; 141
    5402:	ff 4f       	sbci	r31, 0xFF	; 255
    5404:	91 83       	std	Z+1, r25	; 0x01
    5406:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5408:	de 01       	movw	r26, r28
    540a:	ab 58       	subi	r26, 0x8B	; 139
    540c:	bf 4f       	sbci	r27, 0xFF	; 255
    540e:	fe 01       	movw	r30, r28
    5410:	eb 58       	subi	r30, 0x8B	; 139
    5412:	ff 4f       	sbci	r31, 0xFF	; 255
    5414:	80 81       	ld	r24, Z
    5416:	91 81       	ldd	r25, Z+1	; 0x01
    5418:	01 97       	sbiw	r24, 0x01	; 1
    541a:	11 96       	adiw	r26, 0x01	; 1
    541c:	9c 93       	st	X, r25
    541e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5420:	fe 01       	movw	r30, r28
    5422:	eb 58       	subi	r30, 0x8B	; 139
    5424:	ff 4f       	sbci	r31, 0xFF	; 255
    5426:	80 81       	ld	r24, Z
    5428:	91 81       	ldd	r25, Z+1	; 0x01
    542a:	00 97       	sbiw	r24, 0x00	; 0
    542c:	d1 f6       	brne	.-76     	; 0x53e2 <main+0x35bc>
    542e:	27 c0       	rjmp	.+78     	; 0x547e <main+0x3658>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5430:	8e 01       	movw	r16, r28
    5432:	0b 58       	subi	r16, 0x8B	; 139
    5434:	1f 4f       	sbci	r17, 0xFF	; 255
    5436:	fe 01       	movw	r30, r28
    5438:	e9 58       	subi	r30, 0x89	; 137
    543a:	ff 4f       	sbci	r31, 0xFF	; 255
    543c:	60 81       	ld	r22, Z
    543e:	71 81       	ldd	r23, Z+1	; 0x01
    5440:	82 81       	ldd	r24, Z+2	; 0x02
    5442:	93 81       	ldd	r25, Z+3	; 0x03
    5444:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5448:	dc 01       	movw	r26, r24
    544a:	cb 01       	movw	r24, r22
    544c:	f8 01       	movw	r30, r16
    544e:	91 83       	std	Z+1, r25	; 0x01
    5450:	80 83       	st	Z, r24
    5452:	de 01       	movw	r26, r28
    5454:	af 58       	subi	r26, 0x8F	; 143
    5456:	bf 4f       	sbci	r27, 0xFF	; 255
    5458:	fe 01       	movw	r30, r28
    545a:	eb 58       	subi	r30, 0x8B	; 139
    545c:	ff 4f       	sbci	r31, 0xFF	; 255
    545e:	80 81       	ld	r24, Z
    5460:	91 81       	ldd	r25, Z+1	; 0x01
    5462:	8d 93       	st	X+, r24
    5464:	9c 93       	st	X, r25
    5466:	fe 01       	movw	r30, r28
    5468:	ef 58       	subi	r30, 0x8F	; 143
    546a:	ff 4f       	sbci	r31, 0xFF	; 255
    546c:	80 81       	ld	r24, Z
    546e:	91 81       	ldd	r25, Z+1	; 0x01
    5470:	01 97       	sbiw	r24, 0x01	; 1
    5472:	f1 f7       	brne	.-4      	; 0x5470 <main+0x364a>
    5474:	fe 01       	movw	r30, r28
    5476:	ef 58       	subi	r30, 0x8F	; 143
    5478:	ff 4f       	sbci	r31, 0xFF	; 255
    547a:	91 83       	std	Z+1, r25	; 0x01
    547c:	80 83       	st	Z, r24
						Copy_u8KpdValue=KPD_u8GetKeyState();
						if(Copy_u8KpdValue==13) break;
						LED_voidControlLed(PORT_u8B,i, PIN_HIGH);
						_delay_ms(300);
					}
					for(u8 i=7 ; i>=0 ;i--){
    547e:	de 01       	movw	r26, r28
    5480:	a5 5a       	subi	r26, 0xA5	; 165
    5482:	bd 4f       	sbci	r27, 0xFD	; 253
    5484:	fe 01       	movw	r30, r28
    5486:	e5 5a       	subi	r30, 0xA5	; 165
    5488:	fd 4f       	sbci	r31, 0xFD	; 253
    548a:	80 81       	ld	r24, Z
    548c:	81 50       	subi	r24, 0x01	; 1
    548e:	8c 93       	st	X, r24
    5490:	2e cf       	rjmp	.-420    	; 0x52ee <main+0x34c8>
				_delay_ms(1);
				CLCD_voidSendString("Circular Chase..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
    5492:	fe 01       	movw	r30, r28
    5494:	ed 59       	subi	r30, 0x9D	; 157
    5496:	fd 4f       	sbci	r31, 0xFD	; 253
    5498:	80 81       	ld	r24, Z
    549a:	8d 30       	cpi	r24, 0x0D	; 13
    549c:	09 f0       	breq	.+2      	; 0x54a0 <main+0x367a>
    549e:	45 ce       	rjmp	.-886    	; 0x512a <main+0x3304>
						if(Copy_u8KpdValue==13) break;
						LED_voidControlLed(PORT_u8B,i, PIN_LOW);
						_delay_ms(300);
					}
				}
				LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    54a0:	82 e0       	ldi	r24, 0x02	; 2
    54a2:	60 e0       	ldi	r22, 0x00	; 0
    54a4:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
				CLCD_voidClearDisplay();
    54a8:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    54ac:	fe 01       	movw	r30, r28
    54ae:	e3 59       	subi	r30, 0x93	; 147
    54b0:	ff 4f       	sbci	r31, 0xFF	; 255
    54b2:	80 e0       	ldi	r24, 0x00	; 0
    54b4:	90 e0       	ldi	r25, 0x00	; 0
    54b6:	a0 e8       	ldi	r26, 0x80	; 128
    54b8:	bf e3       	ldi	r27, 0x3F	; 63
    54ba:	80 83       	st	Z, r24
    54bc:	91 83       	std	Z+1, r25	; 0x01
    54be:	a2 83       	std	Z+2, r26	; 0x02
    54c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    54c2:	8e 01       	movw	r16, r28
    54c4:	07 59       	subi	r16, 0x97	; 151
    54c6:	1f 4f       	sbci	r17, 0xFF	; 255
    54c8:	fe 01       	movw	r30, r28
    54ca:	e3 59       	subi	r30, 0x93	; 147
    54cc:	ff 4f       	sbci	r31, 0xFF	; 255
    54ce:	60 81       	ld	r22, Z
    54d0:	71 81       	ldd	r23, Z+1	; 0x01
    54d2:	82 81       	ldd	r24, Z+2	; 0x02
    54d4:	93 81       	ldd	r25, Z+3	; 0x03
    54d6:	20 e0       	ldi	r18, 0x00	; 0
    54d8:	30 e0       	ldi	r19, 0x00	; 0
    54da:	4a ef       	ldi	r20, 0xFA	; 250
    54dc:	54 e4       	ldi	r21, 0x44	; 68
    54de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    54e2:	dc 01       	movw	r26, r24
    54e4:	cb 01       	movw	r24, r22
    54e6:	f8 01       	movw	r30, r16
    54e8:	80 83       	st	Z, r24
    54ea:	91 83       	std	Z+1, r25	; 0x01
    54ec:	a2 83       	std	Z+2, r26	; 0x02
    54ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    54f0:	fe 01       	movw	r30, r28
    54f2:	e7 59       	subi	r30, 0x97	; 151
    54f4:	ff 4f       	sbci	r31, 0xFF	; 255
    54f6:	60 81       	ld	r22, Z
    54f8:	71 81       	ldd	r23, Z+1	; 0x01
    54fa:	82 81       	ldd	r24, Z+2	; 0x02
    54fc:	93 81       	ldd	r25, Z+3	; 0x03
    54fe:	20 e0       	ldi	r18, 0x00	; 0
    5500:	30 e0       	ldi	r19, 0x00	; 0
    5502:	40 e8       	ldi	r20, 0x80	; 128
    5504:	5f e3       	ldi	r21, 0x3F	; 63
    5506:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    550a:	88 23       	and	r24, r24
    550c:	44 f4       	brge	.+16     	; 0x551e <main+0x36f8>
		__ticks = 1;
    550e:	fe 01       	movw	r30, r28
    5510:	e9 59       	subi	r30, 0x99	; 153
    5512:	ff 4f       	sbci	r31, 0xFF	; 255
    5514:	81 e0       	ldi	r24, 0x01	; 1
    5516:	90 e0       	ldi	r25, 0x00	; 0
    5518:	91 83       	std	Z+1, r25	; 0x01
    551a:	80 83       	st	Z, r24
    551c:	65 c0       	rjmp	.+202    	; 0x55e8 <main+0x37c2>
	else if (__tmp > 65535)
    551e:	fe 01       	movw	r30, r28
    5520:	e7 59       	subi	r30, 0x97	; 151
    5522:	ff 4f       	sbci	r31, 0xFF	; 255
    5524:	60 81       	ld	r22, Z
    5526:	71 81       	ldd	r23, Z+1	; 0x01
    5528:	82 81       	ldd	r24, Z+2	; 0x02
    552a:	93 81       	ldd	r25, Z+3	; 0x03
    552c:	20 e0       	ldi	r18, 0x00	; 0
    552e:	3f ef       	ldi	r19, 0xFF	; 255
    5530:	4f e7       	ldi	r20, 0x7F	; 127
    5532:	57 e4       	ldi	r21, 0x47	; 71
    5534:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5538:	18 16       	cp	r1, r24
    553a:	0c f0       	brlt	.+2      	; 0x553e <main+0x3718>
    553c:	44 c0       	rjmp	.+136    	; 0x55c6 <main+0x37a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    553e:	fe 01       	movw	r30, r28
    5540:	e3 59       	subi	r30, 0x93	; 147
    5542:	ff 4f       	sbci	r31, 0xFF	; 255
    5544:	60 81       	ld	r22, Z
    5546:	71 81       	ldd	r23, Z+1	; 0x01
    5548:	82 81       	ldd	r24, Z+2	; 0x02
    554a:	93 81       	ldd	r25, Z+3	; 0x03
    554c:	20 e0       	ldi	r18, 0x00	; 0
    554e:	30 e0       	ldi	r19, 0x00	; 0
    5550:	40 e2       	ldi	r20, 0x20	; 32
    5552:	51 e4       	ldi	r21, 0x41	; 65
    5554:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5558:	dc 01       	movw	r26, r24
    555a:	cb 01       	movw	r24, r22
    555c:	8e 01       	movw	r16, r28
    555e:	09 59       	subi	r16, 0x99	; 153
    5560:	1f 4f       	sbci	r17, 0xFF	; 255
    5562:	bc 01       	movw	r22, r24
    5564:	cd 01       	movw	r24, r26
    5566:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    556a:	dc 01       	movw	r26, r24
    556c:	cb 01       	movw	r24, r22
    556e:	f8 01       	movw	r30, r16
    5570:	91 83       	std	Z+1, r25	; 0x01
    5572:	80 83       	st	Z, r24
    5574:	1f c0       	rjmp	.+62     	; 0x55b4 <main+0x378e>
    5576:	fe 01       	movw	r30, r28
    5578:	eb 59       	subi	r30, 0x9B	; 155
    557a:	ff 4f       	sbci	r31, 0xFF	; 255
    557c:	88 ec       	ldi	r24, 0xC8	; 200
    557e:	90 e0       	ldi	r25, 0x00	; 0
    5580:	91 83       	std	Z+1, r25	; 0x01
    5582:	80 83       	st	Z, r24
    5584:	fe 01       	movw	r30, r28
    5586:	eb 59       	subi	r30, 0x9B	; 155
    5588:	ff 4f       	sbci	r31, 0xFF	; 255
    558a:	80 81       	ld	r24, Z
    558c:	91 81       	ldd	r25, Z+1	; 0x01
    558e:	01 97       	sbiw	r24, 0x01	; 1
    5590:	f1 f7       	brne	.-4      	; 0x558e <main+0x3768>
    5592:	fe 01       	movw	r30, r28
    5594:	eb 59       	subi	r30, 0x9B	; 155
    5596:	ff 4f       	sbci	r31, 0xFF	; 255
    5598:	91 83       	std	Z+1, r25	; 0x01
    559a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    559c:	de 01       	movw	r26, r28
    559e:	a9 59       	subi	r26, 0x99	; 153
    55a0:	bf 4f       	sbci	r27, 0xFF	; 255
    55a2:	fe 01       	movw	r30, r28
    55a4:	e9 59       	subi	r30, 0x99	; 153
    55a6:	ff 4f       	sbci	r31, 0xFF	; 255
    55a8:	80 81       	ld	r24, Z
    55aa:	91 81       	ldd	r25, Z+1	; 0x01
    55ac:	01 97       	sbiw	r24, 0x01	; 1
    55ae:	11 96       	adiw	r26, 0x01	; 1
    55b0:	9c 93       	st	X, r25
    55b2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55b4:	fe 01       	movw	r30, r28
    55b6:	e9 59       	subi	r30, 0x99	; 153
    55b8:	ff 4f       	sbci	r31, 0xFF	; 255
    55ba:	80 81       	ld	r24, Z
    55bc:	91 81       	ldd	r25, Z+1	; 0x01
    55be:	00 97       	sbiw	r24, 0x00	; 0
    55c0:	d1 f6       	brne	.-76     	; 0x5576 <main+0x3750>
    55c2:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    55c6:	8e 01       	movw	r16, r28
    55c8:	09 59       	subi	r16, 0x99	; 153
    55ca:	1f 4f       	sbci	r17, 0xFF	; 255
    55cc:	fe 01       	movw	r30, r28
    55ce:	e7 59       	subi	r30, 0x97	; 151
    55d0:	ff 4f       	sbci	r31, 0xFF	; 255
    55d2:	60 81       	ld	r22, Z
    55d4:	71 81       	ldd	r23, Z+1	; 0x01
    55d6:	82 81       	ldd	r24, Z+2	; 0x02
    55d8:	93 81       	ldd	r25, Z+3	; 0x03
    55da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    55de:	dc 01       	movw	r26, r24
    55e0:	cb 01       	movw	r24, r22
    55e2:	f8 01       	movw	r30, r16
    55e4:	91 83       	std	Z+1, r25	; 0x01
    55e6:	80 83       	st	Z, r24
    55e8:	de 01       	movw	r26, r28
    55ea:	ad 59       	subi	r26, 0x9D	; 157
    55ec:	bf 4f       	sbci	r27, 0xFF	; 255
    55ee:	fe 01       	movw	r30, r28
    55f0:	e9 59       	subi	r30, 0x99	; 153
    55f2:	ff 4f       	sbci	r31, 0xFF	; 255
    55f4:	80 81       	ld	r24, Z
    55f6:	91 81       	ldd	r25, Z+1	; 0x01
    55f8:	11 96       	adiw	r26, 0x01	; 1
    55fa:	9c 93       	st	X, r25
    55fc:	8e 93       	st	-X, r24
    55fe:	fe 01       	movw	r30, r28
    5600:	ed 59       	subi	r30, 0x9D	; 157
    5602:	ff 4f       	sbci	r31, 0xFF	; 255
    5604:	80 81       	ld	r24, Z
    5606:	91 81       	ldd	r25, Z+1	; 0x01
    5608:	01 97       	sbiw	r24, 0x01	; 1
    560a:	f1 f7       	brne	.-4      	; 0x5608 <main+0x37e2>
    560c:	fe 01       	movw	r30, r28
    560e:	ed 59       	subi	r30, 0x9D	; 157
    5610:	ff 4f       	sbci	r31, 0xFF	; 255
    5612:	91 83       	std	Z+1, r25	; 0x01
    5614:	80 83       	st	Z, r24
    5616:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
				_delay_ms(1);
				break;
			case 8:
				CLCD_voidSetPosition(0,0);
    561a:	80 e0       	ldi	r24, 0x00	; 0
    561c:	60 e0       	ldi	r22, 0x00	; 0
    561e:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    5622:	fe 01       	movw	r30, r28
    5624:	e1 5a       	subi	r30, 0xA1	; 161
    5626:	ff 4f       	sbci	r31, 0xFF	; 255
    5628:	80 e0       	ldi	r24, 0x00	; 0
    562a:	90 e0       	ldi	r25, 0x00	; 0
    562c:	a0 e8       	ldi	r26, 0x80	; 128
    562e:	bf e3       	ldi	r27, 0x3F	; 63
    5630:	80 83       	st	Z, r24
    5632:	91 83       	std	Z+1, r25	; 0x01
    5634:	a2 83       	std	Z+2, r26	; 0x02
    5636:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5638:	8e 01       	movw	r16, r28
    563a:	05 5a       	subi	r16, 0xA5	; 165
    563c:	1f 4f       	sbci	r17, 0xFF	; 255
    563e:	fe 01       	movw	r30, r28
    5640:	e1 5a       	subi	r30, 0xA1	; 161
    5642:	ff 4f       	sbci	r31, 0xFF	; 255
    5644:	60 81       	ld	r22, Z
    5646:	71 81       	ldd	r23, Z+1	; 0x01
    5648:	82 81       	ldd	r24, Z+2	; 0x02
    564a:	93 81       	ldd	r25, Z+3	; 0x03
    564c:	20 e0       	ldi	r18, 0x00	; 0
    564e:	30 e0       	ldi	r19, 0x00	; 0
    5650:	4a ef       	ldi	r20, 0xFA	; 250
    5652:	54 e4       	ldi	r21, 0x44	; 68
    5654:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5658:	dc 01       	movw	r26, r24
    565a:	cb 01       	movw	r24, r22
    565c:	f8 01       	movw	r30, r16
    565e:	80 83       	st	Z, r24
    5660:	91 83       	std	Z+1, r25	; 0x01
    5662:	a2 83       	std	Z+2, r26	; 0x02
    5664:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5666:	fe 01       	movw	r30, r28
    5668:	e5 5a       	subi	r30, 0xA5	; 165
    566a:	ff 4f       	sbci	r31, 0xFF	; 255
    566c:	60 81       	ld	r22, Z
    566e:	71 81       	ldd	r23, Z+1	; 0x01
    5670:	82 81       	ldd	r24, Z+2	; 0x02
    5672:	93 81       	ldd	r25, Z+3	; 0x03
    5674:	20 e0       	ldi	r18, 0x00	; 0
    5676:	30 e0       	ldi	r19, 0x00	; 0
    5678:	40 e8       	ldi	r20, 0x80	; 128
    567a:	5f e3       	ldi	r21, 0x3F	; 63
    567c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5680:	88 23       	and	r24, r24
    5682:	44 f4       	brge	.+16     	; 0x5694 <main+0x386e>
		__ticks = 1;
    5684:	fe 01       	movw	r30, r28
    5686:	e7 5a       	subi	r30, 0xA7	; 167
    5688:	ff 4f       	sbci	r31, 0xFF	; 255
    568a:	81 e0       	ldi	r24, 0x01	; 1
    568c:	90 e0       	ldi	r25, 0x00	; 0
    568e:	91 83       	std	Z+1, r25	; 0x01
    5690:	80 83       	st	Z, r24
    5692:	64 c0       	rjmp	.+200    	; 0x575c <main+0x3936>
	else if (__tmp > 65535)
    5694:	fe 01       	movw	r30, r28
    5696:	e5 5a       	subi	r30, 0xA5	; 165
    5698:	ff 4f       	sbci	r31, 0xFF	; 255
    569a:	60 81       	ld	r22, Z
    569c:	71 81       	ldd	r23, Z+1	; 0x01
    569e:	82 81       	ldd	r24, Z+2	; 0x02
    56a0:	93 81       	ldd	r25, Z+3	; 0x03
    56a2:	20 e0       	ldi	r18, 0x00	; 0
    56a4:	3f ef       	ldi	r19, 0xFF	; 255
    56a6:	4f e7       	ldi	r20, 0x7F	; 127
    56a8:	57 e4       	ldi	r21, 0x47	; 71
    56aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    56ae:	18 16       	cp	r1, r24
    56b0:	0c f0       	brlt	.+2      	; 0x56b4 <main+0x388e>
    56b2:	43 c0       	rjmp	.+134    	; 0x573a <main+0x3914>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    56b4:	fe 01       	movw	r30, r28
    56b6:	e1 5a       	subi	r30, 0xA1	; 161
    56b8:	ff 4f       	sbci	r31, 0xFF	; 255
    56ba:	60 81       	ld	r22, Z
    56bc:	71 81       	ldd	r23, Z+1	; 0x01
    56be:	82 81       	ldd	r24, Z+2	; 0x02
    56c0:	93 81       	ldd	r25, Z+3	; 0x03
    56c2:	20 e0       	ldi	r18, 0x00	; 0
    56c4:	30 e0       	ldi	r19, 0x00	; 0
    56c6:	40 e2       	ldi	r20, 0x20	; 32
    56c8:	51 e4       	ldi	r21, 0x41	; 65
    56ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    56ce:	dc 01       	movw	r26, r24
    56d0:	cb 01       	movw	r24, r22
    56d2:	8e 01       	movw	r16, r28
    56d4:	07 5a       	subi	r16, 0xA7	; 167
    56d6:	1f 4f       	sbci	r17, 0xFF	; 255
    56d8:	bc 01       	movw	r22, r24
    56da:	cd 01       	movw	r24, r26
    56dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    56e0:	dc 01       	movw	r26, r24
    56e2:	cb 01       	movw	r24, r22
    56e4:	f8 01       	movw	r30, r16
    56e6:	91 83       	std	Z+1, r25	; 0x01
    56e8:	80 83       	st	Z, r24
    56ea:	1f c0       	rjmp	.+62     	; 0x572a <main+0x3904>
    56ec:	fe 01       	movw	r30, r28
    56ee:	e9 5a       	subi	r30, 0xA9	; 169
    56f0:	ff 4f       	sbci	r31, 0xFF	; 255
    56f2:	88 ec       	ldi	r24, 0xC8	; 200
    56f4:	90 e0       	ldi	r25, 0x00	; 0
    56f6:	91 83       	std	Z+1, r25	; 0x01
    56f8:	80 83       	st	Z, r24
    56fa:	fe 01       	movw	r30, r28
    56fc:	e9 5a       	subi	r30, 0xA9	; 169
    56fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5700:	80 81       	ld	r24, Z
    5702:	91 81       	ldd	r25, Z+1	; 0x01
    5704:	01 97       	sbiw	r24, 0x01	; 1
    5706:	f1 f7       	brne	.-4      	; 0x5704 <main+0x38de>
    5708:	fe 01       	movw	r30, r28
    570a:	e9 5a       	subi	r30, 0xA9	; 169
    570c:	ff 4f       	sbci	r31, 0xFF	; 255
    570e:	91 83       	std	Z+1, r25	; 0x01
    5710:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5712:	de 01       	movw	r26, r28
    5714:	a7 5a       	subi	r26, 0xA7	; 167
    5716:	bf 4f       	sbci	r27, 0xFF	; 255
    5718:	fe 01       	movw	r30, r28
    571a:	e7 5a       	subi	r30, 0xA7	; 167
    571c:	ff 4f       	sbci	r31, 0xFF	; 255
    571e:	80 81       	ld	r24, Z
    5720:	91 81       	ldd	r25, Z+1	; 0x01
    5722:	01 97       	sbiw	r24, 0x01	; 1
    5724:	11 96       	adiw	r26, 0x01	; 1
    5726:	9c 93       	st	X, r25
    5728:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    572a:	fe 01       	movw	r30, r28
    572c:	e7 5a       	subi	r30, 0xA7	; 167
    572e:	ff 4f       	sbci	r31, 0xFF	; 255
    5730:	80 81       	ld	r24, Z
    5732:	91 81       	ldd	r25, Z+1	; 0x01
    5734:	00 97       	sbiw	r24, 0x00	; 0
    5736:	d1 f6       	brne	.-76     	; 0x56ec <main+0x38c6>
    5738:	27 c0       	rjmp	.+78     	; 0x5788 <main+0x3962>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    573a:	8e 01       	movw	r16, r28
    573c:	07 5a       	subi	r16, 0xA7	; 167
    573e:	1f 4f       	sbci	r17, 0xFF	; 255
    5740:	fe 01       	movw	r30, r28
    5742:	e5 5a       	subi	r30, 0xA5	; 165
    5744:	ff 4f       	sbci	r31, 0xFF	; 255
    5746:	60 81       	ld	r22, Z
    5748:	71 81       	ldd	r23, Z+1	; 0x01
    574a:	82 81       	ldd	r24, Z+2	; 0x02
    574c:	93 81       	ldd	r25, Z+3	; 0x03
    574e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5752:	dc 01       	movw	r26, r24
    5754:	cb 01       	movw	r24, r22
    5756:	f8 01       	movw	r30, r16
    5758:	91 83       	std	Z+1, r25	; 0x01
    575a:	80 83       	st	Z, r24
    575c:	de 01       	movw	r26, r28
    575e:	ab 5a       	subi	r26, 0xAB	; 171
    5760:	bf 4f       	sbci	r27, 0xFF	; 255
    5762:	fe 01       	movw	r30, r28
    5764:	e7 5a       	subi	r30, 0xA7	; 167
    5766:	ff 4f       	sbci	r31, 0xFF	; 255
    5768:	80 81       	ld	r24, Z
    576a:	91 81       	ldd	r25, Z+1	; 0x01
    576c:	8d 93       	st	X+, r24
    576e:	9c 93       	st	X, r25
    5770:	fe 01       	movw	r30, r28
    5772:	eb 5a       	subi	r30, 0xAB	; 171
    5774:	ff 4f       	sbci	r31, 0xFF	; 255
    5776:	80 81       	ld	r24, Z
    5778:	91 81       	ldd	r25, Z+1	; 0x01
    577a:	01 97       	sbiw	r24, 0x01	; 1
    577c:	f1 f7       	brne	.-4      	; 0x577a <main+0x3954>
    577e:	fe 01       	movw	r30, r28
    5780:	eb 5a       	subi	r30, 0xAB	; 171
    5782:	ff 4f       	sbci	r31, 0xFF	; 255
    5784:	91 83       	std	Z+1, r25	; 0x01
    5786:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Heartbeat..");
    5788:	8e ec       	ldi	r24, 0xCE	; 206
    578a:	90 e0       	ldi	r25, 0x00	; 0
    578c:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
				CLCD_voidSetPosition(0,1);
    5790:	80 e0       	ldi	r24, 0x00	; 0
    5792:	61 e0       	ldi	r22, 0x01	; 1
    5794:	0e 94 f7 08 	call	0x11ee	; 0x11ee <CLCD_voidSetPosition>
    5798:	fe 01       	movw	r30, r28
    579a:	ef 5a       	subi	r30, 0xAF	; 175
    579c:	ff 4f       	sbci	r31, 0xFF	; 255
    579e:	80 e0       	ldi	r24, 0x00	; 0
    57a0:	90 e0       	ldi	r25, 0x00	; 0
    57a2:	a0 e8       	ldi	r26, 0x80	; 128
    57a4:	bf e3       	ldi	r27, 0x3F	; 63
    57a6:	80 83       	st	Z, r24
    57a8:	91 83       	std	Z+1, r25	; 0x01
    57aa:	a2 83       	std	Z+2, r26	; 0x02
    57ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    57ae:	8e 01       	movw	r16, r28
    57b0:	03 5b       	subi	r16, 0xB3	; 179
    57b2:	1f 4f       	sbci	r17, 0xFF	; 255
    57b4:	fe 01       	movw	r30, r28
    57b6:	ef 5a       	subi	r30, 0xAF	; 175
    57b8:	ff 4f       	sbci	r31, 0xFF	; 255
    57ba:	60 81       	ld	r22, Z
    57bc:	71 81       	ldd	r23, Z+1	; 0x01
    57be:	82 81       	ldd	r24, Z+2	; 0x02
    57c0:	93 81       	ldd	r25, Z+3	; 0x03
    57c2:	20 e0       	ldi	r18, 0x00	; 0
    57c4:	30 e0       	ldi	r19, 0x00	; 0
    57c6:	4a ef       	ldi	r20, 0xFA	; 250
    57c8:	54 e4       	ldi	r21, 0x44	; 68
    57ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    57ce:	dc 01       	movw	r26, r24
    57d0:	cb 01       	movw	r24, r22
    57d2:	f8 01       	movw	r30, r16
    57d4:	80 83       	st	Z, r24
    57d6:	91 83       	std	Z+1, r25	; 0x01
    57d8:	a2 83       	std	Z+2, r26	; 0x02
    57da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    57dc:	fe 01       	movw	r30, r28
    57de:	e3 5b       	subi	r30, 0xB3	; 179
    57e0:	ff 4f       	sbci	r31, 0xFF	; 255
    57e2:	60 81       	ld	r22, Z
    57e4:	71 81       	ldd	r23, Z+1	; 0x01
    57e6:	82 81       	ldd	r24, Z+2	; 0x02
    57e8:	93 81       	ldd	r25, Z+3	; 0x03
    57ea:	20 e0       	ldi	r18, 0x00	; 0
    57ec:	30 e0       	ldi	r19, 0x00	; 0
    57ee:	40 e8       	ldi	r20, 0x80	; 128
    57f0:	5f e3       	ldi	r21, 0x3F	; 63
    57f2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    57f6:	88 23       	and	r24, r24
    57f8:	44 f4       	brge	.+16     	; 0x580a <main+0x39e4>
		__ticks = 1;
    57fa:	fe 01       	movw	r30, r28
    57fc:	e5 5b       	subi	r30, 0xB5	; 181
    57fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5800:	81 e0       	ldi	r24, 0x01	; 1
    5802:	90 e0       	ldi	r25, 0x00	; 0
    5804:	91 83       	std	Z+1, r25	; 0x01
    5806:	80 83       	st	Z, r24
    5808:	64 c0       	rjmp	.+200    	; 0x58d2 <main+0x3aac>
	else if (__tmp > 65535)
    580a:	fe 01       	movw	r30, r28
    580c:	e3 5b       	subi	r30, 0xB3	; 179
    580e:	ff 4f       	sbci	r31, 0xFF	; 255
    5810:	60 81       	ld	r22, Z
    5812:	71 81       	ldd	r23, Z+1	; 0x01
    5814:	82 81       	ldd	r24, Z+2	; 0x02
    5816:	93 81       	ldd	r25, Z+3	; 0x03
    5818:	20 e0       	ldi	r18, 0x00	; 0
    581a:	3f ef       	ldi	r19, 0xFF	; 255
    581c:	4f e7       	ldi	r20, 0x7F	; 127
    581e:	57 e4       	ldi	r21, 0x47	; 71
    5820:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5824:	18 16       	cp	r1, r24
    5826:	0c f0       	brlt	.+2      	; 0x582a <main+0x3a04>
    5828:	43 c0       	rjmp	.+134    	; 0x58b0 <main+0x3a8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    582a:	fe 01       	movw	r30, r28
    582c:	ef 5a       	subi	r30, 0xAF	; 175
    582e:	ff 4f       	sbci	r31, 0xFF	; 255
    5830:	60 81       	ld	r22, Z
    5832:	71 81       	ldd	r23, Z+1	; 0x01
    5834:	82 81       	ldd	r24, Z+2	; 0x02
    5836:	93 81       	ldd	r25, Z+3	; 0x03
    5838:	20 e0       	ldi	r18, 0x00	; 0
    583a:	30 e0       	ldi	r19, 0x00	; 0
    583c:	40 e2       	ldi	r20, 0x20	; 32
    583e:	51 e4       	ldi	r21, 0x41	; 65
    5840:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5844:	dc 01       	movw	r26, r24
    5846:	cb 01       	movw	r24, r22
    5848:	8e 01       	movw	r16, r28
    584a:	05 5b       	subi	r16, 0xB5	; 181
    584c:	1f 4f       	sbci	r17, 0xFF	; 255
    584e:	bc 01       	movw	r22, r24
    5850:	cd 01       	movw	r24, r26
    5852:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5856:	dc 01       	movw	r26, r24
    5858:	cb 01       	movw	r24, r22
    585a:	f8 01       	movw	r30, r16
    585c:	91 83       	std	Z+1, r25	; 0x01
    585e:	80 83       	st	Z, r24
    5860:	1f c0       	rjmp	.+62     	; 0x58a0 <main+0x3a7a>
    5862:	fe 01       	movw	r30, r28
    5864:	e7 5b       	subi	r30, 0xB7	; 183
    5866:	ff 4f       	sbci	r31, 0xFF	; 255
    5868:	88 ec       	ldi	r24, 0xC8	; 200
    586a:	90 e0       	ldi	r25, 0x00	; 0
    586c:	91 83       	std	Z+1, r25	; 0x01
    586e:	80 83       	st	Z, r24
    5870:	fe 01       	movw	r30, r28
    5872:	e7 5b       	subi	r30, 0xB7	; 183
    5874:	ff 4f       	sbci	r31, 0xFF	; 255
    5876:	80 81       	ld	r24, Z
    5878:	91 81       	ldd	r25, Z+1	; 0x01
    587a:	01 97       	sbiw	r24, 0x01	; 1
    587c:	f1 f7       	brne	.-4      	; 0x587a <main+0x3a54>
    587e:	fe 01       	movw	r30, r28
    5880:	e7 5b       	subi	r30, 0xB7	; 183
    5882:	ff 4f       	sbci	r31, 0xFF	; 255
    5884:	91 83       	std	Z+1, r25	; 0x01
    5886:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5888:	de 01       	movw	r26, r28
    588a:	a5 5b       	subi	r26, 0xB5	; 181
    588c:	bf 4f       	sbci	r27, 0xFF	; 255
    588e:	fe 01       	movw	r30, r28
    5890:	e5 5b       	subi	r30, 0xB5	; 181
    5892:	ff 4f       	sbci	r31, 0xFF	; 255
    5894:	80 81       	ld	r24, Z
    5896:	91 81       	ldd	r25, Z+1	; 0x01
    5898:	01 97       	sbiw	r24, 0x01	; 1
    589a:	11 96       	adiw	r26, 0x01	; 1
    589c:	9c 93       	st	X, r25
    589e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    58a0:	fe 01       	movw	r30, r28
    58a2:	e5 5b       	subi	r30, 0xB5	; 181
    58a4:	ff 4f       	sbci	r31, 0xFF	; 255
    58a6:	80 81       	ld	r24, Z
    58a8:	91 81       	ldd	r25, Z+1	; 0x01
    58aa:	00 97       	sbiw	r24, 0x00	; 0
    58ac:	d1 f6       	brne	.-76     	; 0x5862 <main+0x3a3c>
    58ae:	27 c0       	rjmp	.+78     	; 0x58fe <main+0x3ad8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    58b0:	8e 01       	movw	r16, r28
    58b2:	05 5b       	subi	r16, 0xB5	; 181
    58b4:	1f 4f       	sbci	r17, 0xFF	; 255
    58b6:	fe 01       	movw	r30, r28
    58b8:	e3 5b       	subi	r30, 0xB3	; 179
    58ba:	ff 4f       	sbci	r31, 0xFF	; 255
    58bc:	60 81       	ld	r22, Z
    58be:	71 81       	ldd	r23, Z+1	; 0x01
    58c0:	82 81       	ldd	r24, Z+2	; 0x02
    58c2:	93 81       	ldd	r25, Z+3	; 0x03
    58c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    58c8:	dc 01       	movw	r26, r24
    58ca:	cb 01       	movw	r24, r22
    58cc:	f8 01       	movw	r30, r16
    58ce:	91 83       	std	Z+1, r25	; 0x01
    58d0:	80 83       	st	Z, r24
    58d2:	de 01       	movw	r26, r28
    58d4:	a9 5b       	subi	r26, 0xB9	; 185
    58d6:	bf 4f       	sbci	r27, 0xFF	; 255
    58d8:	fe 01       	movw	r30, r28
    58da:	e5 5b       	subi	r30, 0xB5	; 181
    58dc:	ff 4f       	sbci	r31, 0xFF	; 255
    58de:	80 81       	ld	r24, Z
    58e0:	91 81       	ldd	r25, Z+1	; 0x01
    58e2:	8d 93       	st	X+, r24
    58e4:	9c 93       	st	X, r25
    58e6:	fe 01       	movw	r30, r28
    58e8:	e9 5b       	subi	r30, 0xB9	; 185
    58ea:	ff 4f       	sbci	r31, 0xFF	; 255
    58ec:	80 81       	ld	r24, Z
    58ee:	91 81       	ldd	r25, Z+1	; 0x01
    58f0:	01 97       	sbiw	r24, 0x01	; 1
    58f2:	f1 f7       	brne	.-4      	; 0x58f0 <main+0x3aca>
    58f4:	fe 01       	movw	r30, r28
    58f6:	e9 5b       	subi	r30, 0xB9	; 185
    58f8:	ff 4f       	sbci	r31, 0xFF	; 255
    58fa:	91 83       	std	Z+1, r25	; 0x01
    58fc:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
    58fe:	8b e6       	ldi	r24, 0x6B	; 107
    5900:	90 e0       	ldi	r25, 0x00	; 0
    5902:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    5906:	05 c1       	rjmp	.+522    	; 0x5b12 <main+0x3cec>
				while(Copy_u8KpdValue != 13){
					LED_voidtControlAllLeds(PORT_u8B,PORT_HIGH);
    5908:	82 e0       	ldi	r24, 0x02	; 2
    590a:	6f ef       	ldi	r22, 0xFF	; 255
    590c:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
    5910:	fe 01       	movw	r30, r28
    5912:	ed 5b       	subi	r30, 0xBD	; 189
    5914:	ff 4f       	sbci	r31, 0xFF	; 255
    5916:	80 e0       	ldi	r24, 0x00	; 0
    5918:	90 e0       	ldi	r25, 0x00	; 0
    591a:	a8 e4       	ldi	r26, 0x48	; 72
    591c:	b3 e4       	ldi	r27, 0x43	; 67
    591e:	80 83       	st	Z, r24
    5920:	91 83       	std	Z+1, r25	; 0x01
    5922:	a2 83       	std	Z+2, r26	; 0x02
    5924:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5926:	8e 01       	movw	r16, r28
    5928:	01 5c       	subi	r16, 0xC1	; 193
    592a:	1f 4f       	sbci	r17, 0xFF	; 255
    592c:	fe 01       	movw	r30, r28
    592e:	ed 5b       	subi	r30, 0xBD	; 189
    5930:	ff 4f       	sbci	r31, 0xFF	; 255
    5932:	60 81       	ld	r22, Z
    5934:	71 81       	ldd	r23, Z+1	; 0x01
    5936:	82 81       	ldd	r24, Z+2	; 0x02
    5938:	93 81       	ldd	r25, Z+3	; 0x03
    593a:	20 e0       	ldi	r18, 0x00	; 0
    593c:	30 e0       	ldi	r19, 0x00	; 0
    593e:	4a ef       	ldi	r20, 0xFA	; 250
    5940:	54 e4       	ldi	r21, 0x44	; 68
    5942:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5946:	dc 01       	movw	r26, r24
    5948:	cb 01       	movw	r24, r22
    594a:	f8 01       	movw	r30, r16
    594c:	80 83       	st	Z, r24
    594e:	91 83       	std	Z+1, r25	; 0x01
    5950:	a2 83       	std	Z+2, r26	; 0x02
    5952:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5954:	fe 01       	movw	r30, r28
    5956:	ff 96       	adiw	r30, 0x3f	; 63
    5958:	60 81       	ld	r22, Z
    595a:	71 81       	ldd	r23, Z+1	; 0x01
    595c:	82 81       	ldd	r24, Z+2	; 0x02
    595e:	93 81       	ldd	r25, Z+3	; 0x03
    5960:	20 e0       	ldi	r18, 0x00	; 0
    5962:	30 e0       	ldi	r19, 0x00	; 0
    5964:	40 e8       	ldi	r20, 0x80	; 128
    5966:	5f e3       	ldi	r21, 0x3F	; 63
    5968:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    596c:	88 23       	and	r24, r24
    596e:	2c f4       	brge	.+10     	; 0x597a <main+0x3b54>
		__ticks = 1;
    5970:	81 e0       	ldi	r24, 0x01	; 1
    5972:	90 e0       	ldi	r25, 0x00	; 0
    5974:	9e af       	std	Y+62, r25	; 0x3e
    5976:	8d af       	std	Y+61, r24	; 0x3d
    5978:	46 c0       	rjmp	.+140    	; 0x5a06 <main+0x3be0>
	else if (__tmp > 65535)
    597a:	fe 01       	movw	r30, r28
    597c:	ff 96       	adiw	r30, 0x3f	; 63
    597e:	60 81       	ld	r22, Z
    5980:	71 81       	ldd	r23, Z+1	; 0x01
    5982:	82 81       	ldd	r24, Z+2	; 0x02
    5984:	93 81       	ldd	r25, Z+3	; 0x03
    5986:	20 e0       	ldi	r18, 0x00	; 0
    5988:	3f ef       	ldi	r19, 0xFF	; 255
    598a:	4f e7       	ldi	r20, 0x7F	; 127
    598c:	57 e4       	ldi	r21, 0x47	; 71
    598e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5992:	18 16       	cp	r1, r24
    5994:	64 f5       	brge	.+88     	; 0x59ee <main+0x3bc8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5996:	fe 01       	movw	r30, r28
    5998:	ed 5b       	subi	r30, 0xBD	; 189
    599a:	ff 4f       	sbci	r31, 0xFF	; 255
    599c:	60 81       	ld	r22, Z
    599e:	71 81       	ldd	r23, Z+1	; 0x01
    59a0:	82 81       	ldd	r24, Z+2	; 0x02
    59a2:	93 81       	ldd	r25, Z+3	; 0x03
    59a4:	20 e0       	ldi	r18, 0x00	; 0
    59a6:	30 e0       	ldi	r19, 0x00	; 0
    59a8:	40 e2       	ldi	r20, 0x20	; 32
    59aa:	51 e4       	ldi	r21, 0x41	; 65
    59ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    59b0:	dc 01       	movw	r26, r24
    59b2:	cb 01       	movw	r24, r22
    59b4:	bc 01       	movw	r22, r24
    59b6:	cd 01       	movw	r24, r26
    59b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    59bc:	dc 01       	movw	r26, r24
    59be:	cb 01       	movw	r24, r22
    59c0:	9e af       	std	Y+62, r25	; 0x3e
    59c2:	8d af       	std	Y+61, r24	; 0x3d
    59c4:	0f c0       	rjmp	.+30     	; 0x59e4 <main+0x3bbe>
    59c6:	88 ec       	ldi	r24, 0xC8	; 200
    59c8:	90 e0       	ldi	r25, 0x00	; 0
    59ca:	9c af       	std	Y+60, r25	; 0x3c
    59cc:	8b af       	std	Y+59, r24	; 0x3b
    59ce:	8b ad       	ldd	r24, Y+59	; 0x3b
    59d0:	9c ad       	ldd	r25, Y+60	; 0x3c
    59d2:	01 97       	sbiw	r24, 0x01	; 1
    59d4:	f1 f7       	brne	.-4      	; 0x59d2 <main+0x3bac>
    59d6:	9c af       	std	Y+60, r25	; 0x3c
    59d8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    59da:	8d ad       	ldd	r24, Y+61	; 0x3d
    59dc:	9e ad       	ldd	r25, Y+62	; 0x3e
    59de:	01 97       	sbiw	r24, 0x01	; 1
    59e0:	9e af       	std	Y+62, r25	; 0x3e
    59e2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    59e4:	8d ad       	ldd	r24, Y+61	; 0x3d
    59e6:	9e ad       	ldd	r25, Y+62	; 0x3e
    59e8:	00 97       	sbiw	r24, 0x00	; 0
    59ea:	69 f7       	brne	.-38     	; 0x59c6 <main+0x3ba0>
    59ec:	16 c0       	rjmp	.+44     	; 0x5a1a <main+0x3bf4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    59ee:	fe 01       	movw	r30, r28
    59f0:	ff 96       	adiw	r30, 0x3f	; 63
    59f2:	60 81       	ld	r22, Z
    59f4:	71 81       	ldd	r23, Z+1	; 0x01
    59f6:	82 81       	ldd	r24, Z+2	; 0x02
    59f8:	93 81       	ldd	r25, Z+3	; 0x03
    59fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    59fe:	dc 01       	movw	r26, r24
    5a00:	cb 01       	movw	r24, r22
    5a02:	9e af       	std	Y+62, r25	; 0x3e
    5a04:	8d af       	std	Y+61, r24	; 0x3d
    5a06:	8d ad       	ldd	r24, Y+61	; 0x3d
    5a08:	9e ad       	ldd	r25, Y+62	; 0x3e
    5a0a:	9a af       	std	Y+58, r25	; 0x3a
    5a0c:	89 af       	std	Y+57, r24	; 0x39
    5a0e:	89 ad       	ldd	r24, Y+57	; 0x39
    5a10:	9a ad       	ldd	r25, Y+58	; 0x3a
    5a12:	01 97       	sbiw	r24, 0x01	; 1
    5a14:	f1 f7       	brne	.-4      	; 0x5a12 <main+0x3bec>
    5a16:	9a af       	std	Y+58, r25	; 0x3a
    5a18:	89 af       	std	Y+57, r24	; 0x39
					_delay_ms(200);
					LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    5a1a:	82 e0       	ldi	r24, 0x02	; 2
    5a1c:	60 e0       	ldi	r22, 0x00	; 0
    5a1e:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
    5a22:	80 e0       	ldi	r24, 0x00	; 0
    5a24:	90 e0       	ldi	r25, 0x00	; 0
    5a26:	a8 ec       	ldi	r26, 0xC8	; 200
    5a28:	b3 e4       	ldi	r27, 0x43	; 67
    5a2a:	8d ab       	std	Y+53, r24	; 0x35
    5a2c:	9e ab       	std	Y+54, r25	; 0x36
    5a2e:	af ab       	std	Y+55, r26	; 0x37
    5a30:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5a32:	6d a9       	ldd	r22, Y+53	; 0x35
    5a34:	7e a9       	ldd	r23, Y+54	; 0x36
    5a36:	8f a9       	ldd	r24, Y+55	; 0x37
    5a38:	98 ad       	ldd	r25, Y+56	; 0x38
    5a3a:	20 e0       	ldi	r18, 0x00	; 0
    5a3c:	30 e0       	ldi	r19, 0x00	; 0
    5a3e:	4a ef       	ldi	r20, 0xFA	; 250
    5a40:	54 e4       	ldi	r21, 0x44	; 68
    5a42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5a46:	dc 01       	movw	r26, r24
    5a48:	cb 01       	movw	r24, r22
    5a4a:	89 ab       	std	Y+49, r24	; 0x31
    5a4c:	9a ab       	std	Y+50, r25	; 0x32
    5a4e:	ab ab       	std	Y+51, r26	; 0x33
    5a50:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    5a52:	69 a9       	ldd	r22, Y+49	; 0x31
    5a54:	7a a9       	ldd	r23, Y+50	; 0x32
    5a56:	8b a9       	ldd	r24, Y+51	; 0x33
    5a58:	9c a9       	ldd	r25, Y+52	; 0x34
    5a5a:	20 e0       	ldi	r18, 0x00	; 0
    5a5c:	30 e0       	ldi	r19, 0x00	; 0
    5a5e:	40 e8       	ldi	r20, 0x80	; 128
    5a60:	5f e3       	ldi	r21, 0x3F	; 63
    5a62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5a66:	88 23       	and	r24, r24
    5a68:	2c f4       	brge	.+10     	; 0x5a74 <main+0x3c4e>
		__ticks = 1;
    5a6a:	81 e0       	ldi	r24, 0x01	; 1
    5a6c:	90 e0       	ldi	r25, 0x00	; 0
    5a6e:	98 ab       	std	Y+48, r25	; 0x30
    5a70:	8f a7       	std	Y+47, r24	; 0x2f
    5a72:	3f c0       	rjmp	.+126    	; 0x5af2 <main+0x3ccc>
	else if (__tmp > 65535)
    5a74:	69 a9       	ldd	r22, Y+49	; 0x31
    5a76:	7a a9       	ldd	r23, Y+50	; 0x32
    5a78:	8b a9       	ldd	r24, Y+51	; 0x33
    5a7a:	9c a9       	ldd	r25, Y+52	; 0x34
    5a7c:	20 e0       	ldi	r18, 0x00	; 0
    5a7e:	3f ef       	ldi	r19, 0xFF	; 255
    5a80:	4f e7       	ldi	r20, 0x7F	; 127
    5a82:	57 e4       	ldi	r21, 0x47	; 71
    5a84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5a88:	18 16       	cp	r1, r24
    5a8a:	4c f5       	brge	.+82     	; 0x5ade <main+0x3cb8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a8c:	6d a9       	ldd	r22, Y+53	; 0x35
    5a8e:	7e a9       	ldd	r23, Y+54	; 0x36
    5a90:	8f a9       	ldd	r24, Y+55	; 0x37
    5a92:	98 ad       	ldd	r25, Y+56	; 0x38
    5a94:	20 e0       	ldi	r18, 0x00	; 0
    5a96:	30 e0       	ldi	r19, 0x00	; 0
    5a98:	40 e2       	ldi	r20, 0x20	; 32
    5a9a:	51 e4       	ldi	r21, 0x41	; 65
    5a9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5aa0:	dc 01       	movw	r26, r24
    5aa2:	cb 01       	movw	r24, r22
    5aa4:	bc 01       	movw	r22, r24
    5aa6:	cd 01       	movw	r24, r26
    5aa8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5aac:	dc 01       	movw	r26, r24
    5aae:	cb 01       	movw	r24, r22
    5ab0:	98 ab       	std	Y+48, r25	; 0x30
    5ab2:	8f a7       	std	Y+47, r24	; 0x2f
    5ab4:	0f c0       	rjmp	.+30     	; 0x5ad4 <main+0x3cae>
    5ab6:	88 ec       	ldi	r24, 0xC8	; 200
    5ab8:	90 e0       	ldi	r25, 0x00	; 0
    5aba:	9e a7       	std	Y+46, r25	; 0x2e
    5abc:	8d a7       	std	Y+45, r24	; 0x2d
    5abe:	8d a5       	ldd	r24, Y+45	; 0x2d
    5ac0:	9e a5       	ldd	r25, Y+46	; 0x2e
    5ac2:	01 97       	sbiw	r24, 0x01	; 1
    5ac4:	f1 f7       	brne	.-4      	; 0x5ac2 <main+0x3c9c>
    5ac6:	9e a7       	std	Y+46, r25	; 0x2e
    5ac8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5aca:	8f a5       	ldd	r24, Y+47	; 0x2f
    5acc:	98 a9       	ldd	r25, Y+48	; 0x30
    5ace:	01 97       	sbiw	r24, 0x01	; 1
    5ad0:	98 ab       	std	Y+48, r25	; 0x30
    5ad2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ad4:	8f a5       	ldd	r24, Y+47	; 0x2f
    5ad6:	98 a9       	ldd	r25, Y+48	; 0x30
    5ad8:	00 97       	sbiw	r24, 0x00	; 0
    5ada:	69 f7       	brne	.-38     	; 0x5ab6 <main+0x3c90>
    5adc:	14 c0       	rjmp	.+40     	; 0x5b06 <main+0x3ce0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ade:	69 a9       	ldd	r22, Y+49	; 0x31
    5ae0:	7a a9       	ldd	r23, Y+50	; 0x32
    5ae2:	8b a9       	ldd	r24, Y+51	; 0x33
    5ae4:	9c a9       	ldd	r25, Y+52	; 0x34
    5ae6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5aea:	dc 01       	movw	r26, r24
    5aec:	cb 01       	movw	r24, r22
    5aee:	98 ab       	std	Y+48, r25	; 0x30
    5af0:	8f a7       	std	Y+47, r24	; 0x2f
    5af2:	8f a5       	ldd	r24, Y+47	; 0x2f
    5af4:	98 a9       	ldd	r25, Y+48	; 0x30
    5af6:	9c a7       	std	Y+44, r25	; 0x2c
    5af8:	8b a7       	std	Y+43, r24	; 0x2b
    5afa:	8b a5       	ldd	r24, Y+43	; 0x2b
    5afc:	9c a5       	ldd	r25, Y+44	; 0x2c
    5afe:	01 97       	sbiw	r24, 0x01	; 1
    5b00:	f1 f7       	brne	.-4      	; 0x5afe <main+0x3cd8>
    5b02:	9c a7       	std	Y+44, r25	; 0x2c
    5b04:	8b a7       	std	Y+43, r24	; 0x2b
					_delay_ms(400);
					Copy_u8KpdValue=KPD_u8GetKeyState();
    5b06:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <KPD_u8GetKeyState>
    5b0a:	fe 01       	movw	r30, r28
    5b0c:	ed 59       	subi	r30, 0x9D	; 157
    5b0e:	fd 4f       	sbci	r31, 0xFD	; 253
    5b10:	80 83       	st	Z, r24
				_delay_ms(1);
				CLCD_voidSendString("Heartbeat..");
				CLCD_voidSetPosition(0,1);
				_delay_ms(1);
				CLCD_voidSendString("13 to EXIT");
				while(Copy_u8KpdValue != 13){
    5b12:	fe 01       	movw	r30, r28
    5b14:	ed 59       	subi	r30, 0x9D	; 157
    5b16:	fd 4f       	sbci	r31, 0xFD	; 253
    5b18:	80 81       	ld	r24, Z
    5b1a:	8d 30       	cpi	r24, 0x0D	; 13
    5b1c:	09 f0       	breq	.+2      	; 0x5b20 <main+0x3cfa>
    5b1e:	f4 ce       	rjmp	.-536    	; 0x5908 <main+0x3ae2>
					_delay_ms(200);
					LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
					_delay_ms(400);
					Copy_u8KpdValue=KPD_u8GetKeyState();
				}
				LED_voidtControlAllLeds(PORT_u8B,PORT_LOW);
    5b20:	82 e0       	ldi	r24, 0x02	; 2
    5b22:	60 e0       	ldi	r22, 0x00	; 0
    5b24:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <LED_voidtControlAllLeds>
				CLCD_voidClearDisplay();
    5b28:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    5b2c:	80 e0       	ldi	r24, 0x00	; 0
    5b2e:	90 e0       	ldi	r25, 0x00	; 0
    5b30:	a0 e8       	ldi	r26, 0x80	; 128
    5b32:	bf e3       	ldi	r27, 0x3F	; 63
    5b34:	8f a3       	std	Y+39, r24	; 0x27
    5b36:	98 a7       	std	Y+40, r25	; 0x28
    5b38:	a9 a7       	std	Y+41, r26	; 0x29
    5b3a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b3c:	6f a1       	ldd	r22, Y+39	; 0x27
    5b3e:	78 a5       	ldd	r23, Y+40	; 0x28
    5b40:	89 a5       	ldd	r24, Y+41	; 0x29
    5b42:	9a a5       	ldd	r25, Y+42	; 0x2a
    5b44:	20 e0       	ldi	r18, 0x00	; 0
    5b46:	30 e0       	ldi	r19, 0x00	; 0
    5b48:	4a ef       	ldi	r20, 0xFA	; 250
    5b4a:	54 e4       	ldi	r21, 0x44	; 68
    5b4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5b50:	dc 01       	movw	r26, r24
    5b52:	cb 01       	movw	r24, r22
    5b54:	8b a3       	std	Y+35, r24	; 0x23
    5b56:	9c a3       	std	Y+36, r25	; 0x24
    5b58:	ad a3       	std	Y+37, r26	; 0x25
    5b5a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5b5c:	6b a1       	ldd	r22, Y+35	; 0x23
    5b5e:	7c a1       	ldd	r23, Y+36	; 0x24
    5b60:	8d a1       	ldd	r24, Y+37	; 0x25
    5b62:	9e a1       	ldd	r25, Y+38	; 0x26
    5b64:	20 e0       	ldi	r18, 0x00	; 0
    5b66:	30 e0       	ldi	r19, 0x00	; 0
    5b68:	40 e8       	ldi	r20, 0x80	; 128
    5b6a:	5f e3       	ldi	r21, 0x3F	; 63
    5b6c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5b70:	88 23       	and	r24, r24
    5b72:	2c f4       	brge	.+10     	; 0x5b7e <main+0x3d58>
		__ticks = 1;
    5b74:	81 e0       	ldi	r24, 0x01	; 1
    5b76:	90 e0       	ldi	r25, 0x00	; 0
    5b78:	9a a3       	std	Y+34, r25	; 0x22
    5b7a:	89 a3       	std	Y+33, r24	; 0x21
    5b7c:	40 c0       	rjmp	.+128    	; 0x5bfe <main+0x3dd8>
	else if (__tmp > 65535)
    5b7e:	6b a1       	ldd	r22, Y+35	; 0x23
    5b80:	7c a1       	ldd	r23, Y+36	; 0x24
    5b82:	8d a1       	ldd	r24, Y+37	; 0x25
    5b84:	9e a1       	ldd	r25, Y+38	; 0x26
    5b86:	20 e0       	ldi	r18, 0x00	; 0
    5b88:	3f ef       	ldi	r19, 0xFF	; 255
    5b8a:	4f e7       	ldi	r20, 0x7F	; 127
    5b8c:	57 e4       	ldi	r21, 0x47	; 71
    5b8e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5b92:	18 16       	cp	r1, r24
    5b94:	54 f5       	brge	.+84     	; 0x5bea <main+0x3dc4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b96:	6f a1       	ldd	r22, Y+39	; 0x27
    5b98:	78 a5       	ldd	r23, Y+40	; 0x28
    5b9a:	89 a5       	ldd	r24, Y+41	; 0x29
    5b9c:	9a a5       	ldd	r25, Y+42	; 0x2a
    5b9e:	20 e0       	ldi	r18, 0x00	; 0
    5ba0:	30 e0       	ldi	r19, 0x00	; 0
    5ba2:	40 e2       	ldi	r20, 0x20	; 32
    5ba4:	51 e4       	ldi	r21, 0x41	; 65
    5ba6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5baa:	dc 01       	movw	r26, r24
    5bac:	cb 01       	movw	r24, r22
    5bae:	bc 01       	movw	r22, r24
    5bb0:	cd 01       	movw	r24, r26
    5bb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5bb6:	dc 01       	movw	r26, r24
    5bb8:	cb 01       	movw	r24, r22
    5bba:	9a a3       	std	Y+34, r25	; 0x22
    5bbc:	89 a3       	std	Y+33, r24	; 0x21
    5bbe:	0f c0       	rjmp	.+30     	; 0x5bde <main+0x3db8>
    5bc0:	88 ec       	ldi	r24, 0xC8	; 200
    5bc2:	90 e0       	ldi	r25, 0x00	; 0
    5bc4:	98 a3       	std	Y+32, r25	; 0x20
    5bc6:	8f 8f       	std	Y+31, r24	; 0x1f
    5bc8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5bca:	98 a1       	ldd	r25, Y+32	; 0x20
    5bcc:	01 97       	sbiw	r24, 0x01	; 1
    5bce:	f1 f7       	brne	.-4      	; 0x5bcc <main+0x3da6>
    5bd0:	98 a3       	std	Y+32, r25	; 0x20
    5bd2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5bd4:	89 a1       	ldd	r24, Y+33	; 0x21
    5bd6:	9a a1       	ldd	r25, Y+34	; 0x22
    5bd8:	01 97       	sbiw	r24, 0x01	; 1
    5bda:	9a a3       	std	Y+34, r25	; 0x22
    5bdc:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5bde:	89 a1       	ldd	r24, Y+33	; 0x21
    5be0:	9a a1       	ldd	r25, Y+34	; 0x22
    5be2:	00 97       	sbiw	r24, 0x00	; 0
    5be4:	69 f7       	brne	.-38     	; 0x5bc0 <main+0x3d9a>
    5be6:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5bea:	6b a1       	ldd	r22, Y+35	; 0x23
    5bec:	7c a1       	ldd	r23, Y+36	; 0x24
    5bee:	8d a1       	ldd	r24, Y+37	; 0x25
    5bf0:	9e a1       	ldd	r25, Y+38	; 0x26
    5bf2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5bf6:	dc 01       	movw	r26, r24
    5bf8:	cb 01       	movw	r24, r22
    5bfa:	9a a3       	std	Y+34, r25	; 0x22
    5bfc:	89 a3       	std	Y+33, r24	; 0x21
    5bfe:	89 a1       	ldd	r24, Y+33	; 0x21
    5c00:	9a a1       	ldd	r25, Y+34	; 0x22
    5c02:	9e 8f       	std	Y+30, r25	; 0x1e
    5c04:	8d 8f       	std	Y+29, r24	; 0x1d
    5c06:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5c08:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5c0a:	01 97       	sbiw	r24, 0x01	; 1
    5c0c:	f1 f7       	brne	.-4      	; 0x5c0a <main+0x3de4>
    5c0e:	9e 8f       	std	Y+30, r25	; 0x1e
    5c10:	8d 8f       	std	Y+29, r24	; 0x1d
    5c12:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
				_delay_ms(1);
				break;
			default:
				CLCD_voidSendString("Choose (1-->8)");
    5c16:	8a ed       	ldi	r24, 0xDA	; 218
    5c18:	90 e0       	ldi	r25, 0x00	; 0
    5c1a:	0e 94 ce 08 	call	0x119c	; 0x119c <CLCD_voidSendString>
    5c1e:	80 e0       	ldi	r24, 0x00	; 0
    5c20:	90 e0       	ldi	r25, 0x00	; 0
    5c22:	aa e7       	ldi	r26, 0x7A	; 122
    5c24:	b4 e4       	ldi	r27, 0x44	; 68
    5c26:	89 8f       	std	Y+25, r24	; 0x19
    5c28:	9a 8f       	std	Y+26, r25	; 0x1a
    5c2a:	ab 8f       	std	Y+27, r26	; 0x1b
    5c2c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c2e:	69 8d       	ldd	r22, Y+25	; 0x19
    5c30:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5c32:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5c34:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5c36:	20 e0       	ldi	r18, 0x00	; 0
    5c38:	30 e0       	ldi	r19, 0x00	; 0
    5c3a:	4a ef       	ldi	r20, 0xFA	; 250
    5c3c:	54 e4       	ldi	r21, 0x44	; 68
    5c3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5c42:	dc 01       	movw	r26, r24
    5c44:	cb 01       	movw	r24, r22
    5c46:	8d 8b       	std	Y+21, r24	; 0x15
    5c48:	9e 8b       	std	Y+22, r25	; 0x16
    5c4a:	af 8b       	std	Y+23, r26	; 0x17
    5c4c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5c4e:	6d 89       	ldd	r22, Y+21	; 0x15
    5c50:	7e 89       	ldd	r23, Y+22	; 0x16
    5c52:	8f 89       	ldd	r24, Y+23	; 0x17
    5c54:	98 8d       	ldd	r25, Y+24	; 0x18
    5c56:	20 e0       	ldi	r18, 0x00	; 0
    5c58:	30 e0       	ldi	r19, 0x00	; 0
    5c5a:	40 e8       	ldi	r20, 0x80	; 128
    5c5c:	5f e3       	ldi	r21, 0x3F	; 63
    5c5e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5c62:	88 23       	and	r24, r24
    5c64:	2c f4       	brge	.+10     	; 0x5c70 <main+0x3e4a>
		__ticks = 1;
    5c66:	81 e0       	ldi	r24, 0x01	; 1
    5c68:	90 e0       	ldi	r25, 0x00	; 0
    5c6a:	9c 8b       	std	Y+20, r25	; 0x14
    5c6c:	8b 8b       	std	Y+19, r24	; 0x13
    5c6e:	3f c0       	rjmp	.+126    	; 0x5cee <main+0x3ec8>
	else if (__tmp > 65535)
    5c70:	6d 89       	ldd	r22, Y+21	; 0x15
    5c72:	7e 89       	ldd	r23, Y+22	; 0x16
    5c74:	8f 89       	ldd	r24, Y+23	; 0x17
    5c76:	98 8d       	ldd	r25, Y+24	; 0x18
    5c78:	20 e0       	ldi	r18, 0x00	; 0
    5c7a:	3f ef       	ldi	r19, 0xFF	; 255
    5c7c:	4f e7       	ldi	r20, 0x7F	; 127
    5c7e:	57 e4       	ldi	r21, 0x47	; 71
    5c80:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5c84:	18 16       	cp	r1, r24
    5c86:	4c f5       	brge	.+82     	; 0x5cda <main+0x3eb4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c88:	69 8d       	ldd	r22, Y+25	; 0x19
    5c8a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5c8c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5c8e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5c90:	20 e0       	ldi	r18, 0x00	; 0
    5c92:	30 e0       	ldi	r19, 0x00	; 0
    5c94:	40 e2       	ldi	r20, 0x20	; 32
    5c96:	51 e4       	ldi	r21, 0x41	; 65
    5c98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5c9c:	dc 01       	movw	r26, r24
    5c9e:	cb 01       	movw	r24, r22
    5ca0:	bc 01       	movw	r22, r24
    5ca2:	cd 01       	movw	r24, r26
    5ca4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5ca8:	dc 01       	movw	r26, r24
    5caa:	cb 01       	movw	r24, r22
    5cac:	9c 8b       	std	Y+20, r25	; 0x14
    5cae:	8b 8b       	std	Y+19, r24	; 0x13
    5cb0:	0f c0       	rjmp	.+30     	; 0x5cd0 <main+0x3eaa>
    5cb2:	88 ec       	ldi	r24, 0xC8	; 200
    5cb4:	90 e0       	ldi	r25, 0x00	; 0
    5cb6:	9a 8b       	std	Y+18, r25	; 0x12
    5cb8:	89 8b       	std	Y+17, r24	; 0x11
    5cba:	89 89       	ldd	r24, Y+17	; 0x11
    5cbc:	9a 89       	ldd	r25, Y+18	; 0x12
    5cbe:	01 97       	sbiw	r24, 0x01	; 1
    5cc0:	f1 f7       	brne	.-4      	; 0x5cbe <main+0x3e98>
    5cc2:	9a 8b       	std	Y+18, r25	; 0x12
    5cc4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cc6:	8b 89       	ldd	r24, Y+19	; 0x13
    5cc8:	9c 89       	ldd	r25, Y+20	; 0x14
    5cca:	01 97       	sbiw	r24, 0x01	; 1
    5ccc:	9c 8b       	std	Y+20, r25	; 0x14
    5cce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5cd0:	8b 89       	ldd	r24, Y+19	; 0x13
    5cd2:	9c 89       	ldd	r25, Y+20	; 0x14
    5cd4:	00 97       	sbiw	r24, 0x00	; 0
    5cd6:	69 f7       	brne	.-38     	; 0x5cb2 <main+0x3e8c>
    5cd8:	14 c0       	rjmp	.+40     	; 0x5d02 <main+0x3edc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5cda:	6d 89       	ldd	r22, Y+21	; 0x15
    5cdc:	7e 89       	ldd	r23, Y+22	; 0x16
    5cde:	8f 89       	ldd	r24, Y+23	; 0x17
    5ce0:	98 8d       	ldd	r25, Y+24	; 0x18
    5ce2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5ce6:	dc 01       	movw	r26, r24
    5ce8:	cb 01       	movw	r24, r22
    5cea:	9c 8b       	std	Y+20, r25	; 0x14
    5cec:	8b 8b       	std	Y+19, r24	; 0x13
    5cee:	8b 89       	ldd	r24, Y+19	; 0x13
    5cf0:	9c 89       	ldd	r25, Y+20	; 0x14
    5cf2:	98 8b       	std	Y+16, r25	; 0x10
    5cf4:	8f 87       	std	Y+15, r24	; 0x0f
    5cf6:	8f 85       	ldd	r24, Y+15	; 0x0f
    5cf8:	98 89       	ldd	r25, Y+16	; 0x10
    5cfa:	01 97       	sbiw	r24, 0x01	; 1
    5cfc:	f1 f7       	brne	.-4      	; 0x5cfa <main+0x3ed4>
    5cfe:	98 8b       	std	Y+16, r25	; 0x10
    5d00:	8f 87       	std	Y+15, r24	; 0x0f

				_delay_ms(1000);
				CLCD_voidClearDisplay();
    5d02:	0e 94 22 09 	call	0x1244	; 0x1244 <CLCD_voidClearDisplay>
    5d06:	80 e0       	ldi	r24, 0x00	; 0
    5d08:	90 e0       	ldi	r25, 0x00	; 0
    5d0a:	a0 e8       	ldi	r26, 0x80	; 128
    5d0c:	bf e3       	ldi	r27, 0x3F	; 63
    5d0e:	8b 87       	std	Y+11, r24	; 0x0b
    5d10:	9c 87       	std	Y+12, r25	; 0x0c
    5d12:	ad 87       	std	Y+13, r26	; 0x0d
    5d14:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d16:	6b 85       	ldd	r22, Y+11	; 0x0b
    5d18:	7c 85       	ldd	r23, Y+12	; 0x0c
    5d1a:	8d 85       	ldd	r24, Y+13	; 0x0d
    5d1c:	9e 85       	ldd	r25, Y+14	; 0x0e
    5d1e:	20 e0       	ldi	r18, 0x00	; 0
    5d20:	30 e0       	ldi	r19, 0x00	; 0
    5d22:	4a ef       	ldi	r20, 0xFA	; 250
    5d24:	54 e4       	ldi	r21, 0x44	; 68
    5d26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5d2a:	dc 01       	movw	r26, r24
    5d2c:	cb 01       	movw	r24, r22
    5d2e:	8f 83       	std	Y+7, r24	; 0x07
    5d30:	98 87       	std	Y+8, r25	; 0x08
    5d32:	a9 87       	std	Y+9, r26	; 0x09
    5d34:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5d36:	6f 81       	ldd	r22, Y+7	; 0x07
    5d38:	78 85       	ldd	r23, Y+8	; 0x08
    5d3a:	89 85       	ldd	r24, Y+9	; 0x09
    5d3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d3e:	20 e0       	ldi	r18, 0x00	; 0
    5d40:	30 e0       	ldi	r19, 0x00	; 0
    5d42:	40 e8       	ldi	r20, 0x80	; 128
    5d44:	5f e3       	ldi	r21, 0x3F	; 63
    5d46:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5d4a:	88 23       	and	r24, r24
    5d4c:	2c f4       	brge	.+10     	; 0x5d58 <main+0x3f32>
		__ticks = 1;
    5d4e:	81 e0       	ldi	r24, 0x01	; 1
    5d50:	90 e0       	ldi	r25, 0x00	; 0
    5d52:	9e 83       	std	Y+6, r25	; 0x06
    5d54:	8d 83       	std	Y+5, r24	; 0x05
    5d56:	40 c0       	rjmp	.+128    	; 0x5dd8 <main+0x3fb2>
	else if (__tmp > 65535)
    5d58:	6f 81       	ldd	r22, Y+7	; 0x07
    5d5a:	78 85       	ldd	r23, Y+8	; 0x08
    5d5c:	89 85       	ldd	r24, Y+9	; 0x09
    5d5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d60:	20 e0       	ldi	r18, 0x00	; 0
    5d62:	3f ef       	ldi	r19, 0xFF	; 255
    5d64:	4f e7       	ldi	r20, 0x7F	; 127
    5d66:	57 e4       	ldi	r21, 0x47	; 71
    5d68:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5d6c:	18 16       	cp	r1, r24
    5d6e:	54 f5       	brge	.+84     	; 0x5dc4 <main+0x3f9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5d70:	6b 85       	ldd	r22, Y+11	; 0x0b
    5d72:	7c 85       	ldd	r23, Y+12	; 0x0c
    5d74:	8d 85       	ldd	r24, Y+13	; 0x0d
    5d76:	9e 85       	ldd	r25, Y+14	; 0x0e
    5d78:	20 e0       	ldi	r18, 0x00	; 0
    5d7a:	30 e0       	ldi	r19, 0x00	; 0
    5d7c:	40 e2       	ldi	r20, 0x20	; 32
    5d7e:	51 e4       	ldi	r21, 0x41	; 65
    5d80:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5d84:	dc 01       	movw	r26, r24
    5d86:	cb 01       	movw	r24, r22
    5d88:	bc 01       	movw	r22, r24
    5d8a:	cd 01       	movw	r24, r26
    5d8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5d90:	dc 01       	movw	r26, r24
    5d92:	cb 01       	movw	r24, r22
    5d94:	9e 83       	std	Y+6, r25	; 0x06
    5d96:	8d 83       	std	Y+5, r24	; 0x05
    5d98:	0f c0       	rjmp	.+30     	; 0x5db8 <main+0x3f92>
    5d9a:	88 ec       	ldi	r24, 0xC8	; 200
    5d9c:	90 e0       	ldi	r25, 0x00	; 0
    5d9e:	9c 83       	std	Y+4, r25	; 0x04
    5da0:	8b 83       	std	Y+3, r24	; 0x03
    5da2:	8b 81       	ldd	r24, Y+3	; 0x03
    5da4:	9c 81       	ldd	r25, Y+4	; 0x04
    5da6:	01 97       	sbiw	r24, 0x01	; 1
    5da8:	f1 f7       	brne	.-4      	; 0x5da6 <main+0x3f80>
    5daa:	9c 83       	std	Y+4, r25	; 0x04
    5dac:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5dae:	8d 81       	ldd	r24, Y+5	; 0x05
    5db0:	9e 81       	ldd	r25, Y+6	; 0x06
    5db2:	01 97       	sbiw	r24, 0x01	; 1
    5db4:	9e 83       	std	Y+6, r25	; 0x06
    5db6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5db8:	8d 81       	ldd	r24, Y+5	; 0x05
    5dba:	9e 81       	ldd	r25, Y+6	; 0x06
    5dbc:	00 97       	sbiw	r24, 0x00	; 0
    5dbe:	69 f7       	brne	.-38     	; 0x5d9a <main+0x3f74>
    5dc0:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5dc4:	6f 81       	ldd	r22, Y+7	; 0x07
    5dc6:	78 85       	ldd	r23, Y+8	; 0x08
    5dc8:	89 85       	ldd	r24, Y+9	; 0x09
    5dca:	9a 85       	ldd	r25, Y+10	; 0x0a
    5dcc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5dd0:	dc 01       	movw	r26, r24
    5dd2:	cb 01       	movw	r24, r22
    5dd4:	9e 83       	std	Y+6, r25	; 0x06
    5dd6:	8d 83       	std	Y+5, r24	; 0x05
    5dd8:	8d 81       	ldd	r24, Y+5	; 0x05
    5dda:	9e 81       	ldd	r25, Y+6	; 0x06
    5ddc:	9a 83       	std	Y+2, r25	; 0x02
    5dde:	89 83       	std	Y+1, r24	; 0x01
    5de0:	89 81       	ldd	r24, Y+1	; 0x01
    5de2:	9a 81       	ldd	r25, Y+2	; 0x02
    5de4:	01 97       	sbiw	r24, 0x01	; 1
    5de6:	f1 f7       	brne	.-4      	; 0x5de4 <main+0x3fbe>
    5de8:	9a 83       	std	Y+2, r25	; 0x02
    5dea:	89 83       	std	Y+1, r24	; 0x01
    5dec:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <main+0x2a>

00005df0 <__udivmodhi4>:
    5df0:	aa 1b       	sub	r26, r26
    5df2:	bb 1b       	sub	r27, r27
    5df4:	51 e1       	ldi	r21, 0x11	; 17
    5df6:	07 c0       	rjmp	.+14     	; 0x5e06 <__udivmodhi4_ep>

00005df8 <__udivmodhi4_loop>:
    5df8:	aa 1f       	adc	r26, r26
    5dfa:	bb 1f       	adc	r27, r27
    5dfc:	a6 17       	cp	r26, r22
    5dfe:	b7 07       	cpc	r27, r23
    5e00:	10 f0       	brcs	.+4      	; 0x5e06 <__udivmodhi4_ep>
    5e02:	a6 1b       	sub	r26, r22
    5e04:	b7 0b       	sbc	r27, r23

00005e06 <__udivmodhi4_ep>:
    5e06:	88 1f       	adc	r24, r24
    5e08:	99 1f       	adc	r25, r25
    5e0a:	5a 95       	dec	r21
    5e0c:	a9 f7       	brne	.-22     	; 0x5df8 <__udivmodhi4_loop>
    5e0e:	80 95       	com	r24
    5e10:	90 95       	com	r25
    5e12:	bc 01       	movw	r22, r24
    5e14:	cd 01       	movw	r24, r26
    5e16:	08 95       	ret

00005e18 <__prologue_saves__>:
    5e18:	2f 92       	push	r2
    5e1a:	3f 92       	push	r3
    5e1c:	4f 92       	push	r4
    5e1e:	5f 92       	push	r5
    5e20:	6f 92       	push	r6
    5e22:	7f 92       	push	r7
    5e24:	8f 92       	push	r8
    5e26:	9f 92       	push	r9
    5e28:	af 92       	push	r10
    5e2a:	bf 92       	push	r11
    5e2c:	cf 92       	push	r12
    5e2e:	df 92       	push	r13
    5e30:	ef 92       	push	r14
    5e32:	ff 92       	push	r15
    5e34:	0f 93       	push	r16
    5e36:	1f 93       	push	r17
    5e38:	cf 93       	push	r28
    5e3a:	df 93       	push	r29
    5e3c:	cd b7       	in	r28, 0x3d	; 61
    5e3e:	de b7       	in	r29, 0x3e	; 62
    5e40:	ca 1b       	sub	r28, r26
    5e42:	db 0b       	sbc	r29, r27
    5e44:	0f b6       	in	r0, 0x3f	; 63
    5e46:	f8 94       	cli
    5e48:	de bf       	out	0x3e, r29	; 62
    5e4a:	0f be       	out	0x3f, r0	; 63
    5e4c:	cd bf       	out	0x3d, r28	; 61
    5e4e:	09 94       	ijmp

00005e50 <__epilogue_restores__>:
    5e50:	2a 88       	ldd	r2, Y+18	; 0x12
    5e52:	39 88       	ldd	r3, Y+17	; 0x11
    5e54:	48 88       	ldd	r4, Y+16	; 0x10
    5e56:	5f 84       	ldd	r5, Y+15	; 0x0f
    5e58:	6e 84       	ldd	r6, Y+14	; 0x0e
    5e5a:	7d 84       	ldd	r7, Y+13	; 0x0d
    5e5c:	8c 84       	ldd	r8, Y+12	; 0x0c
    5e5e:	9b 84       	ldd	r9, Y+11	; 0x0b
    5e60:	aa 84       	ldd	r10, Y+10	; 0x0a
    5e62:	b9 84       	ldd	r11, Y+9	; 0x09
    5e64:	c8 84       	ldd	r12, Y+8	; 0x08
    5e66:	df 80       	ldd	r13, Y+7	; 0x07
    5e68:	ee 80       	ldd	r14, Y+6	; 0x06
    5e6a:	fd 80       	ldd	r15, Y+5	; 0x05
    5e6c:	0c 81       	ldd	r16, Y+4	; 0x04
    5e6e:	1b 81       	ldd	r17, Y+3	; 0x03
    5e70:	aa 81       	ldd	r26, Y+2	; 0x02
    5e72:	b9 81       	ldd	r27, Y+1	; 0x01
    5e74:	ce 0f       	add	r28, r30
    5e76:	d1 1d       	adc	r29, r1
    5e78:	0f b6       	in	r0, 0x3f	; 63
    5e7a:	f8 94       	cli
    5e7c:	de bf       	out	0x3e, r29	; 62
    5e7e:	0f be       	out	0x3f, r0	; 63
    5e80:	cd bf       	out	0x3d, r28	; 61
    5e82:	ed 01       	movw	r28, r26
    5e84:	08 95       	ret

00005e86 <_exit>:
    5e86:	f8 94       	cli

00005e88 <__stop_program>:
    5e88:	ff cf       	rjmp	.-2      	; 0x5e88 <__stop_program>
