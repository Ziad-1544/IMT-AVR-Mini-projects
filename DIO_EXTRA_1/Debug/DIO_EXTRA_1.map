Archive member included because of file (symbol)

d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./SSD_program.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_program.o
LOAD ./LED_program.o
LOAD ./SSD_program.o
LOAD ./SW_program.o
LOAD ./main.o
LOAD d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x8d8
 *(.vectors)
 .vectors       0x00000000       0x54 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000076        0x8 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000007e        0x4 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000007e                __vector_1
                0x0000007e                __vector_12
                0x0000007e                __bad_interrupt
                0x0000007e                __vector_6
                0x0000007e                __vector_3
                0x0000007e                __vector_11
                0x0000007e                __vector_13
                0x0000007e                __vector_17
                0x0000007e                __vector_19
                0x0000007e                __vector_7
                0x0000007e                __vector_5
                0x0000007e                __vector_4
                0x0000007e                __vector_9
                0x0000007e                __vector_2
                0x0000007e                __vector_15
                0x0000007e                __vector_8
                0x0000007e                __vector_14
                0x0000007e                __vector_10
                0x0000007e                __vector_16
                0x0000007e                __vector_18
                0x0000007e                __vector_20
 .text          0x00000082        0x0 ./DIO_program.o
 .text          0x00000082        0x0 ./LED_program.o
 .text          0x00000082        0x0 ./SSD_program.o
 .text          0x00000082        0x0 ./SW_program.o
 .text          0x00000082        0x0 ./main.o
 .text          0x00000082        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000082        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000082                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_voidSetPortDirection
                0x00000082       0x84 ./DIO_program.o
                0x00000082                DIO_voidSetPortDirection
 .text.DIO_voidSetPinDirection
                0x00000106      0x1fc ./DIO_program.o
                0x00000106                DIO_voidSetPinDirection
 .text.DIO_voidSetPortValue
                0x00000302       0x84 ./DIO_program.o
                0x00000302                DIO_voidSetPortValue
 .text.DIO_voidSetPinValue
                0x00000386      0x1fc ./DIO_program.o
                0x00000386                DIO_voidSetPinValue
 .text.DIO_u8GetPinValue
                0x00000582       0xf4 ./DIO_program.o
                0x00000582                DIO_u8GetPinValue
 .text.LED_voidControlLed
                0x00000676       0x28 ./LED_program.o
                0x00000676                LED_voidControlLed
 .text.LED_voidToggleLed
                0x0000069e       0x48 ./LED_program.o
                0x0000069e                LED_voidToggleLed
 .text.LED_voidtControlAllLeds
                0x000006e6       0x42 ./LED_program.o
                0x000006e6                LED_voidtControlAllLeds
 .text.SSD_voidEnableDisable
                0x00000728       0x82 ./SSD_program.o
                0x00000728                SSD_voidEnableDisable
 .text.SSD_voidDisplayNumber
                0x000007aa       0x7c ./SSD_program.o
                0x000007aa                SSD_voidDisplayNumber
 .text.SW_voidSetSw
                0x00000826       0x30 ./SW_program.o
                0x00000826                SW_voidSetSw
 .text.SW_u8ViewStatus
                0x00000856       0x32 ./SW_program.o
                0x00000856                SW_u8ViewStatus
 .text.main     0x00000888       0x4c ./main.o
                0x00000888                main
 .text.libgcc   0x000008d4        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000008d4        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x000008d4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000008d4        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000008d4                exit
                0x000008d4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000008d4        0x4 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000008d8                _etext = .

.data           0x00800060        0xa load address 0x000008d8
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_program.o
 .data          0x00800060        0x0 ./LED_program.o
 .data          0x00800060        0x0 ./SSD_program.o
 .data          0x00800060        0x0 ./SW_program.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.data*)
 .data.SSD_arr  0x00800060        0xa ./SSD_program.o
                0x00800060                SSD_arr
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006a                . = ALIGN (0x2)
                0x0080006a                _edata = .
                0x0080006a                PROVIDE (__data_end, .)

.bss            0x0080006a        0x0
                0x0080006a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006a        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006a        0x0 ./DIO_program.o
 .bss           0x0080006a        0x0 ./LED_program.o
 .bss           0x0080006a        0x0 ./SSD_program.o
 .bss           0x0080006a        0x0 ./SW_program.o
 .bss           0x0080006a        0x0 ./main.o
 .bss           0x0080006a        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006a        0x0 d:/imt avr/sdk/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x0080006a                PROVIDE (__bss_end, .)
                0x000008d8                __data_load_start = LOADADDR (.data)
                0x000008e2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006a        0x0
                0x0080006a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006a                PROVIDE (__noinit_end, .)
                0x0080006a                _end = .
                0x0080006a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xdf8
 *(.stab)
 .stab          0x00000000      0x4bc ./DIO_program.o
 .stab          0x000004bc      0x240 ./LED_program.o
                                0x2dc (size before relaxing)
 .stab          0x000006fc      0x234 ./SSD_program.o
                                0x2d0 (size before relaxing)
 .stab          0x00000930      0x18c ./SW_program.o
                                0x228 (size before relaxing)
 .stab          0x00000abc      0x33c ./main.o
                                0x408 (size before relaxing)

.stabstr        0x00000000      0xa83
 *(.stabstr)
 .stabstr       0x00000000      0xa83 ./DIO_program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(DIO_EXTRA_1.elf elf32-avr)
LOAD linker stubs
